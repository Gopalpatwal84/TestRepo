<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Hero_Content_1" xml:space="preserve">
    <value>&lt;p&gt;Microsoft의 통합 서비스 집합을 사용하여 분석, 사용자 환경 및 자동화를 작성하세요. 최신 비즈니스 응용 프로그램을 빠르게 빌드하고 확장하세요.&lt;/p&gt;
&lt;p&gt;비즈니스 과제를 가장 잘 이해하는 &lt;strong&gt;고급 사용자&lt;/strong&gt;는 이제 코드를 작성할 필요 없이 빠르게 솔루션을 빌드하고 제공할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;전문 개발자&lt;/strong&gt;는 이제 쉽게 Azure의 전체 기능을 사용하여 고급 사용자를 위한 기능을 확장하고 다양한 플랫폼 서비스를 활용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Microsoft 공통 데이터 모델&lt;/strong&gt;은 수백 개의 확립된 엔터티와 함께 제공되며 앱 간에 사용될 수 있는 풍부한 프레임워크를 제공합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;커넥터 및 게이트웨이&lt;/strong&gt;를 통해, 이미 사용 중인 서비스에서 더 많은 가치를 얻을 수 있습니다.&lt;/p&gt;
&lt;p&gt;Microsoft는 수백 곳의 파트너와 함께 이 플랫폼을 확장하고 있습니다. 이제 여러분도 이러한 확장에 동참할 수 있습니다. &lt;/p&gt;</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>더 빠른 혁신</value>
  </data>
  <data name="KeepItConnected_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;Microsoft 공통 데이터 모델은 기업 고객과 수년에 걸쳐 함께 확립해온 수백 개의 엔터티와 함께 제공됩니다. 모든 플랫폼 도구와 함께 같은 데이터를 사용하고 사용자 지정 엔터티를 추가하고 기본 제공 확장성 및 분석 기능으로 안심하세요.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Build_Heading" xml:space="preserve">
    <value>공통 데이터 모델을 기반으로 빌드</value>
  </data>
  <data name="KeepItConnected_Content" xml:space="preserve">
    <value>&lt;p&gt;수백 개의 확립된 엔터티가 기본 제공되는 강력한 데이터 프레임워크를 사용하여 비즈니스 앱을 빌드하세요. 사용자 지정 API와 온-프레미스 시스템을 비롯하여 이미 사용 중인 서비스를 연결하세요.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Get_Content" xml:space="preserve">
    <value>&lt;p&gt;단 하나의 항목도 마이그레이션할 필요 없이 비즈니스에서 이미 사용 중인 모든 데이터를 통합할 수 있습니다. 온-프레미스 소스를 비롯하여 널리 사용되는 응용 프로그램에 대한 다양한 커넥터 집합을 사용하여 앱을 빌드하세요. 손쉽게 고유한 API를 통합할 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Get_Heading" xml:space="preserve">
    <value>이미 사용 중인 시스템에서 더 많은 데이터 얻기</value>
  </data>
  <data name="KeepItConnected_Heading" xml:space="preserve">
    <value>모두 연결된 상태로 유지</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Microsoft의 완벽한 통합 서비스 집합을 사용하여 분석, 사용자 환경 및 자동화를 함께 작성하여 최신 비즈니스 앱을 빠르게 빌드하고 확장하세요.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>Microsoft, 비즈니스 응용 프로그램, 비즈니스 앱, 비즈니스 앱 플랫폼, 응용 프로그램 혁신, 빠른 앱 개발, Power BI, PowerApps, Microsoft Flow, 고급 사용자, 시티즌 개발자</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Microsoft 비즈니스 응용 프로그램 플랫폼 혁신</value>
  </data>
  <data name="PowerUpUsers_Add_Content" xml:space="preserve">
    <value>&lt;p&gt;멋진 시각화와 분석 기능이 기본 제공되는 앱으로 비즈니스를 모니터링하고 빠르게 답변을 받으세요.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Add_Cta" xml:space="preserve">
    <value>Power BI 시작</value>
  </data>
  <data name="PowerUpUsers_Add_Heading" xml:space="preserve">
    <value>앱에 정보 추가</value>
  </data>
  <data name="PowerUpUsers_Automate_Content" xml:space="preserve">
    <value>&lt;p&gt;앱과 서비스 전체에서 프로세스를 자동화하는 솔루션을 빌드하여 더 스마트하게 작업하세요. 알림을 간소화하고 시스템 간에 데이터를 동기화하며 승인 워크플로를 자동화하는 등의 작업을 해보세요.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Automate_Cta" xml:space="preserve">
    <value>Microsoft Flow 시작</value>
  </data>
  <data name="PowerUpUsers_Automate_Heading" xml:space="preserve">
    <value>워크플로 자동화</value>
  </data>
  <data name="PowerUpUsers_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;웹, 휴대폰 및 태블릿에서 풍부한 사용자 환경을 만드세요. 창의성을 마음껏 발휘하여 양식을 어셈블하고 비즈니스 논리를 추가하며 장치 기능을 활용하세요.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Build_Cta" xml:space="preserve">
    <value>PowerApp 시작</value>
  </data>
  <data name="PowerUpUsers_Build_Heading" xml:space="preserve">
    <value>작업을 수행할 수 있는 환경 구축</value>
  </data>
  <data name="PowerUpUsers_Content" xml:space="preserve">
    <value>&lt;p&gt;이제 비즈니스 분석가와 고급 사용자는 코드를 작성할 필요 없이 빠르게 앱을 만들 수 있습니다. 해당 과제를 가장 잘 이해하는 사람은 데이터 분석, 인터페이스 및 자동화를 작성하여 이를 적용한 유연한 솔루션을 만들 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Heading" xml:space="preserve">
    <value>고급 사용자의 역량 강화</value>
  </data>
  <data name="ReachYourAudience_Content" xml:space="preserve">
    <value>&lt;p&gt;응용 프로그램을 Microsoft AppSource에 게시하여 다양한 고객을 직접 접할 수 있습니다. 고객은 이미 사용 중인 서비스에 맞는 앱을 찾을 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="ReachYourAudience_Cta" xml:space="preserve">
    <value>AppSource 확인</value>
  </data>
  <data name="ReachYourAudience_Heading" xml:space="preserve">
    <value>대상 그룹의 작업 영역에서 대상 그룹 접하기</value>
  </data>
  <data name="SeamlesslyGrow_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;강력한 클라우드 플랫폼 서비스를 활용하여 고급 사용자를 위한 구성 요소를 빠르게 만들 수 있습니다. 같은 서비스를 활용하여 독립 실행형 웹앱 및 모바일 앱도 빠르게 제공할 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta1" xml:space="preserve">
    <value>앱 서비스</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta2" xml:space="preserve">
    <value>서비스 패브릭</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta3" xml:space="preserve">
    <value>Azure 기능</value>
  </data>
  <data name="SeamlesslyGrow_Build_Heading" xml:space="preserve">
    <value>지능형 인터페이스 빌드</value>
  </data>
  <data name="SeamlesslyGrow_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI, PowerApps 및 Microsoft Flow는 모두 엔터프라이즈 개발자와 IT 전문가를 위한 최고의 클라우드 서비스로 지원됩니다. 빠르게 고급 사용자를 위한 기능을 확장하고 언제든지 손쉽게 엔터프라이즈 전체의 관리 효율성에 맞게 확장할 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Content" xml:space="preserve">
    <value>&lt;p&gt;서로 다른 응용 프로그램을 통합하여 나머지 앱과 원활하게 통합되는 결제 처리, 공급망 관리 등의 솔루션을 제공할 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta1" xml:space="preserve">
    <value>논리 앱</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta2" xml:space="preserve">
    <value>API 관리</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta3" xml:space="preserve">
    <value>BizTalk</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Heading" xml:space="preserve">
    <value>통합 발전</value>
  </data>
  <data name="SeamlesslyGrow_Heading" xml:space="preserve">
    <value>Azure를 통해 원활하게 성장</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Content" xml:space="preserve">
    <value>&lt;p&gt;앱에 포함될 수 있는 포괄적인 비즈니스 인텔리전스, 분석 및 기계 학습 서비스를 통해 비즈니스를 발전시키는 가치 있는 정보를 제공하세요.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Cta1" xml:space="preserve">
    <value>데이터 분석</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Cta2" xml:space="preserve">
    <value>IoT(사물 인터넷)</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Heading" xml:space="preserve">
    <value>정보 제공</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_SqlBi" xml:space="preserve">
    <value>SQL Server Business Intelligence</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>1</value>
  </data>
</root>