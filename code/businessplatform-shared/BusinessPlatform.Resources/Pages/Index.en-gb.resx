<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Hero_Content_1" xml:space="preserve">
    <value>&lt;p&gt;Compose analytics, user experiences, and automation using an integrated set of services from Microsoft. Build and extend modern business applications fast.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Power users&lt;/strong&gt; who understand their business challenges the best can now quickly build and deliver solutions without writing code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Professional developers&lt;/strong&gt; can now easily extend capabilities for power users and take advantage of rich platform services with the full power of Azure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Microsoft Common Data Model&lt;/strong&gt; offers a rich framework that comes with hundreds of established entities and can be used across apps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connectors and Gateways&lt;/strong&gt; make it possible to get more value out of the services that you’re already using.&lt;/p&gt;
&lt;p&gt;We at Microsoft along with hundreds of our partners are building on this platform. Now you can too. &lt;/p&gt;</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Innovate faster</value>
  </data>
  <data name="KeepItConnected_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;The Microsoft Common Data Model comes with hundreds of entities established over years of working with enterprise customers. Use the same data with any of the platform tools, add custom entities, and rest easy with built-in scalability and analytics.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Build_Heading" xml:space="preserve">
    <value>Build on the Common Data Model</value>
  </data>
  <data name="KeepItConnected_Content" xml:space="preserve">
    <value>&lt;p&gt;Build business apps using a robust data framework with hundreds of established entities built in. Connect the services you’re already using – even custom APIs and on-premises systems.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Get_Content" xml:space="preserve">
    <value>&lt;p&gt;Bring together all the data your business already relies on without migrating a thing. Build apps using a rich set of connectors to popular applications, including on-premises sources. Integrate your own APIs easily.&lt;/p&gt;</value>
  </data>
  <data name="KeepItConnected_Get_Heading" xml:space="preserve">
    <value>Get more from the systems you’re already using</value>
  </data>
  <data name="KeepItConnected_Heading" xml:space="preserve">
    <value>Keep it all connected</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Build and extend modern business apps fast by composing analytics, user experiences, and automation together using a complete and integrated set of services from Microsoft.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>Microsoft, Business applications, Business apps, Business app platform, Application innovation, Rapid app development, Power BI, PowerApps, Microsoft Flow, Power users, Citizen developers</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Microsoft Business Application Platform innovation</value>
  </data>
  <data name="PowerUpUsers_Add_Content" xml:space="preserve">
    <value>&lt;p&gt;Monitor your business and get answers quickly with apps that have stunning visualisations and analytics built in.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Add_Cta" xml:space="preserve">
    <value>Get started with Power BI</value>
  </data>
  <data name="PowerUpUsers_Add_Heading" xml:space="preserve">
    <value>Add insights to your apps</value>
  </data>
  <data name="PowerUpUsers_Automate_Content" xml:space="preserve">
    <value>&lt;p&gt;Work more efficiently by building solutions that automate processes across apps and services. Streamline notifications, sync data between systems, automate approval workflows and more.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Automate_Cta" xml:space="preserve">
    <value>Get started with Microsoft Flow</value>
  </data>
  <data name="PowerUpUsers_Automate_Heading" xml:space="preserve">
    <value>Automate your workflow</value>
  </data>
  <data name="PowerUpUsers_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;Create rich user experiences across the web, phones and tablets. Assemble forms, add business logic, and take advantage of device capabilities with full creative freedom.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Build_Cta" xml:space="preserve">
    <value>Get started with PowerApps</value>
  </data>
  <data name="PowerUpUsers_Build_Heading" xml:space="preserve">
    <value>Build experiences you can act on</value>
  </data>
  <data name="PowerUpUsers_Content" xml:space="preserve">
    <value>&lt;p&gt;Now business analysts and power users can create apps quickly without writing code. The people who understand their challenges best can compose data analytics, interfaces, and automation into flexible solutions.&lt;/p&gt;</value>
  </data>
  <data name="PowerUpUsers_Heading" xml:space="preserve">
    <value>Power up your power users</value>
  </data>
  <data name="ReachYourAudience_Content" xml:space="preserve">
    <value>&lt;p&gt;Get direct access to a broad range of customers by publishing your applications to Microsoft AppSource. Customers can find your app in context with the services they’re already using.&lt;/p&gt;</value>
  </data>
  <data name="ReachYourAudience_Cta" xml:space="preserve">
    <value>Check out AppSource</value>
  </data>
  <data name="ReachYourAudience_Heading" xml:space="preserve">
    <value>Reach your audience where they are working</value>
  </data>
  <data name="SeamlesslyGrow_Build_Content" xml:space="preserve">
    <value>&lt;p&gt;Leverage powerful cloud platform services to quickly create components for power users. Take advantage of the same services to deliver standalone web and mobile apps rapidly.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta1" xml:space="preserve">
    <value>App Services</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta2" xml:space="preserve">
    <value>Service Fabric</value>
  </data>
  <data name="SeamlesslyGrow_Build_Cta3" xml:space="preserve">
    <value>Azure Functions</value>
  </data>
  <data name="SeamlesslyGrow_Build_Heading" xml:space="preserve">
    <value>Build intelligent interfaces</value>
  </data>
  <data name="SeamlesslyGrow_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI, PowerApps and Microsoft Flow are all backed by best-in-class cloud services for enterprise developers and IT professionals. Quickly extend capabilities for power users and scale to enterprise-wide manageability easily at any time.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Content" xml:space="preserve">
    <value>&lt;p&gt;Bring together disparate applications to deliver solutions such as payment processing, supply chain management, and more that integrate seamlessly with the rest of your apps.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta1" xml:space="preserve">
    <value>Logic Apps</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta2" xml:space="preserve">
    <value>API Management</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Cta3" xml:space="preserve">
    <value>BizTalk</value>
  </data>
  <data name="SeamlesslyGrow_Evolve_Heading" xml:space="preserve">
    <value>Evolve your integration</value>
  </data>
  <data name="SeamlesslyGrow_Heading" xml:space="preserve">
    <value>Seamlessly grow up with Azure</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Content" xml:space="preserve">
    <value>&lt;p&gt;Deliver valuable insight that moves your business forward with comprehensive business intelligence, analytics and machine learning services that can be embedded into any app.&lt;/p&gt;</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Cta1" xml:space="preserve">
    <value>Data Analytics</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Cta2" xml:space="preserve">
    <value>Internet of Things (IoT)</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_Heading" xml:space="preserve">
    <value>Unlock insight</value>
  </data>
  <data name="SeamlesslyGrow_Unlock_SqlBi" xml:space="preserve">
    <value>SQL Server Business Intelligence</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>1</value>
  </data>
</root>