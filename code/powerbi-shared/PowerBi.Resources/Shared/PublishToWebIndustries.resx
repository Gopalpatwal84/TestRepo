<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Businesses_HeroDetails" xml:space="preserve">
    <value>With Microsoft Power BI publish to web, businesses can embed interactive data visualizations into their public facing blog and websites, or share stunning visuals through their emails or social media communications. Businesses are taking advantage of the ability to tell stories with any data, any way, with powerful custom visuals -- reaching millions of users on any device.</value>
  </data>
  <data name="Businesses_HeroHeading" xml:space="preserve">
    <value>Businesses are bringing their stories to life with Power BI publish to web</value>
  </data>
  <data name="Businesses_Quote" xml:space="preserve">
    <value>In our business at JJ Food Services, data is key and revealing the unknown from a giant set of historical data is more important than ever for our survival and competitive advantage. Microsoft Power BI has revolutionized the way we share and visualize data with our internal colleagues and external trading partners. Various Power BI dashboards help us to keep an eye on the business and make it easier to identify areas of concerns. In a very short period of time, it has become one of the most popular and important business tools for the company due to its ease of use and contemporary design. The Power BI publish to web feature has also helped us significantly in our digital transformation journey and communications with our suppliers and customers. Products and services related data insights are now easily shared with external parties for them to view and interact with the data, using this powerful feature.</value>
  </data>
  <data name="Businesses_QuoteAuthor" xml:space="preserve">
    <value>Mushtaque Ahmed, Chief Operating Officer, JJ Food Service Limited</value>
  </data>
  <data name="Media_HeroDetails" xml:space="preserve">
    <value>Microsoft Power BI publish to web helps journalists, bloggers and reporters deepen stories with data visualizations. Create compelling stories that capture audience attention and give an interesting look at insights. Power BI publish to web allows journalists to build and share highly interactive data visualizations with no coding required and the ability to reach unlimited views on any device.</value>
  </data>
  <data name="Media_HeroHeading" xml:space="preserve">
    <value>Data journalism made easy with Power BI publish to web</value>
  </data>
  <data name="Media_Quote" xml:space="preserve">
    <value>Writing for a data-based firm, I appreciate the flexibility of Power BI which enables me to focus on providing analysis, insights and guidance instead of building complex calculations and queries, …I’ve been able to go from building data to building insights and writing content made stronger by the context the visuals provide. ….This is literally the future of my firm.</value>
  </data>
  <data name="Media_QuoteAuthor" xml:space="preserve">
    <value>Dallas Salazar, Seeking Alpha Financial Analyst, September 2016</value>
  </data>
  <data name="Nonprofits_HeroDetails_1" xml:space="preserve">
    <value>Nonprofit organizations are increasingly looking to leverage their data to drive insights and impact. With Microsoft Power BI publish to web, nonprofits are able to surface important issues, drive real-time decision making, demonstrate impact and gain important support from its constituents. See if your organization is eligible to receive Power BI subscription for free &lt;a href="{0}"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="Nonprofits_HeroHeading" xml:space="preserve">
    <value>Nonprofits are doing more good with Power BI publish to web</value>
  </data>
  <data name="Nonprofits_Quote" xml:space="preserve">
    <value>The Pact team relies on data to inform our business decisions and support our strategy. More importantly it lets us deliver the highest quality service to our partners and beneficiaries in the field and around the world. We are excited to use Power BI to not only make our data more accessible and our reports more meaningful but to help foster a culture of learning among our staff and constituents.</value>
  </data>
  <data name="Nonprofits_QuoteAuthor" xml:space="preserve">
    <value>Christian Loucq, Pact’s Chief Global Engagement and Strategy Officer</value>
  </data>
  <data name="PublicSector_HeroDetails" xml:space="preserve">
    <value>Microsoft Power BI publish to web empowers leaders of communities and citizens around the world to create and share dynamic interactive visualizations on key matters such as education, housing, public participation, budget, and the environment. Public sector entities are able to easily create compelling, interactive visualizations, using data from hundreds of sources, that can be shared publicly, making transparency a daily part of governance.</value>
  </data>
  <data name="PublicSector_HeroHeading" xml:space="preserve">
    <value>Public sector entities are empowering leaders and driving greater transparency with Power BI publish to web</value>
  </data>
  <data name="PublicSector_Quote" xml:space="preserve">
    <value>By creating a Power BI report with this data, we were able to render our own visualizations and compare emerging trends within several thematic areas to understand what is most important to citizens in the realms of education, housing, public participation, income, the environment, and others.</value>
  </data>
  <data name="PublicSector_QuoteAuthor" xml:space="preserve">
    <value>Civic Innovation Project, February 2016</value>
  </data>
</root>