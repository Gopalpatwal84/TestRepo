<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CatholicReliefServices_Details" xml:space="preserve">
    <value>Os recursos do Power BI foram usados para exibir dados coletados por um profissional de saúde comunitária da Índia (o ASHA), destacando pontos principais por meio de cuidados contínuos desde a gravidez até o pós-parto. O dashboard pode ser exibido, tanto para um público internacional quanto local para visibilidade e gerenciamento de programa.</value>
  </data>
  <data name="CatholicReliefServices_Title" xml:space="preserve">
    <value>Catholic Relief Services</value>
  </data>
  <data name="CivicInnovationProject_Details" xml:space="preserve">
    <value>O Publicar na Web do Power BI está ajudando o Civic Innovation Project a progredir em sua missão de ajudar cidades de todo o mundo a trabalharem melhor com os dados e tornar a transparência uma parte diária da governança. Ele está os ajudando o Civic Innovation Project a ensinar aos líderes como a tecnologia cívica pode integrar um processo de tomada de decisão orientado por dados no trabalho diário, que tem impacto sobre a vida dos cidadãos além de envolvê-los no aprendizado sobre suas comunidades.</value>
  </data>
  <data name="CivicInnovationProject_Title" xml:space="preserve">
    <value>Projeto de Inovação Cívica</value>
  </data>
  <data name="ElizabethGlaser_Details" xml:space="preserve">
    <value>O recurso de Publicar na Web do Power BI permite que a EGPAF use todas as ferramentas poderosas do Power BI para criar um dashboard de dados atraente que esteja prontamente disponível e acessível para diversos tipos de público. Agora a EGPAF tem um modo muito mais empolgante e significativo de utilizar dados para contar sua história e destacar os esforços para acabar com a AIDS em crianças do mundo todo.</value>
  </data>
  <data name="ElizabethGlaser_Title" xml:space="preserve">
    <value>Elizabeth Glaser Pediatric AIDS Foundation</value>
  </data>
  <data name="JJFoodServices_Details" xml:space="preserve">
    <value>Usando a tecnologia mais recente do Publicar na Web do Power BI, a JJ Foods Services pode publicar dados relevantes em sites ou blogs para que eles possam ser acessados facilmente por parceiros externos, com o uso de relatórios interativos. Esse método simples mas muito eficaz abriu novas portas para o compartilhamento de dados.</value>
  </data>
  <data name="JJFoodServices_Title" xml:space="preserve">
    <value>JJ Foods Services</value>
  </data>
  <data name="King5_Details" xml:space="preserve">
    <value>“Trabalhar com a Microsoft e o Power BI deu ao KING 5 uma enorme vantagem sobre outras mídias de notícias locais no dia de eleição. Os resultados em tempo real estavam disponíveis online e no aplicativo móvel ao mesmo tempo em que nossos repórteres interagiam com eles ao vivo. Isso não é apenas bom jornalismo, é um ótimo serviço ao cliente. O Power BI permite que o KING 5 envolva nosso público de uma maneira que nunca pudemos fazer antes” – Cheryl Carson, diretora de notícias do KING 5.</value>
  </data>
  <data name="King5_Title" xml:space="preserve">
    <value>King 5</value>
  </data>
  <data name="Pact_Details" xml:space="preserve">
    <value>O Pact trabalha em mais de 30 países, focado em melhorar consideravelmente as vidas no mundo todo.  O Power BI fornece ao Pact uma ferramenta de visualização interativa que ajudou a organização a exibir, de forma mais simples e avançada, o impacto de seu trabalho. O Power BI permite que a equipe do Pact, doadores e parceiros acessem as informações rapidamente, vejam resultados entre países e setores e acompanhem tendências com o passar do tempo.</value>
  </data>
  <data name="Pact_Title" xml:space="preserve">
    <value>Pact</value>
  </data>
  <data name="WaterAid_Details" xml:space="preserve">
    <value>Desenvolver as capacidades de pessoas, suas instituições, os funcionários do governo e as agências do setor é uma estratégia chave da WaterAid India. O Microsoft Power BI ajudou a WaterAid a monitorar dados de diferentes geografias e temas. O Power BI fornece visuais interativos e ferramentas amigáveis para transformar e analisar pontos de dados essenciais, ajudando a gerência a navegar facilmente entre diversas camadas para avaliar o progresso e as lacunas. Com a funcionalidade Publicar na Web do Power BI, a WaterAid pode comunicar dados de análises importantes a diversos públicos, com facilidade. Veja agora.</value>
  </data>
  <data name="WaterAid_Title" xml:space="preserve">
    <value>WaterAid</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>201</value>
  </data>
</root>