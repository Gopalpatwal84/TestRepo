<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CatholicReliefServices_Details" xml:space="preserve">
    <value>已利用 Power BI 的功能展示印度社区医疗保健机构 ASHA 收集的数据，并强调从妊娠到产后的连续护理中的关键触点。可将仪表板向国际或当地受众展示，用于项目管理和可见性。</value>
  </data>
  <data name="CatholicReliefServices_Title" xml:space="preserve">
    <value>Catholic Relief Services</value>
  </data>
  <data name="CivicInnovationProject_Details" xml:space="preserve">
    <value>Power BI 的“发布到 Web”功能帮助 Civic Innovation Project 推进其支持全球各个城市更好地利用数据的使命，并使日常治理公开透明。它有助于 Civic Innovation Project 向高层主管说明公民科技可如何将数据驱动决策过程集成到会影响公民的日常工作中，让公民亲身了解他们的社区。</value>
  </data>
  <data name="CivicInnovationProject_Title" xml:space="preserve">
    <value>公民创新项目</value>
  </data>
  <data name="ElizabethGlaser_Details" xml:space="preserve">
    <value>借助 Power BI 的“发布到 Web”功能，EGPAF 可使用所有功能强大的 Power BI 工具，使现有数据仪表板具有吸引力，让各种受众都可获取。现在，EGPAF 可以通过更令人兴奋、更有意义的方式来使用数据讲述他们的故事，并凸显他们为终止全球儿童艾滋病所做的努力。</value>
  </data>
  <data name="ElizabethGlaser_Title" xml:space="preserve">
    <value>伊丽莎白格拉瑟儿童爱滋病基金会</value>
  </data>
  <data name="JJFoodServices_Details" xml:space="preserve">
    <value>使用最新的 Power BI“发布到 Web”技术，JJ Foods Services 可在网站或博客上发布相关数据，使外部合作伙伴可轻松访问交互式报表。该方法简单且非常有效，为数据共享打开了新的大门。</value>
  </data>
  <data name="JJFoodServices_Title" xml:space="preserve">
    <value>JJ Foods Services</value>
  </data>
  <data name="King5_Details" xml:space="preserve">
    <value>“在 Microsoft 和 Power BI 的帮助下，KING 5 在大选之夜大幅领先其他当地新闻媒体。当记者在广播中与观众互动时，可同时在网上和我们的移动应用上提供实时结果。这不仅仅是好新闻，更是卓越的客户服务。Power BI 让 KING 5 以前所未有的方式与观众互动。”- King 5 News 主管 Cheryl Carson。</value>
  </data>
  <data name="King5_Title" xml:space="preserve">
    <value>King 5</value>
  </data>
  <data name="Pact_Details" xml:space="preserve">
    <value>Pact 在超过 30 个国家/地区实地工作，致力于适度改善全球人类的生活。 Power BI 为 Pact 提供交互式可视化效果工具，帮助该组织更简单有效地展示其工作影响。通过 Power BI，Pact 的员工、捐赠者和合作伙伴可更快访问信息、查看跨国家/地区和部门的结果并跟踪随时间变化的趋势。</value>
  </data>
  <data name="Pact_Title" xml:space="preserve">
    <value>Pact</value>
  </data>
  <data name="WaterAid_Details" xml:space="preserve">
    <value>培养人员、机构、政府职能部门和部门机构的能力是印度 WaterAid 的一项关键战略。Microsoft Power BI 已帮助 WaterAid 监视来自不同地域和主题的数据。Power BI 提供交互式视觉对象和用户友好型工具来转换和分析关键数据点，帮助管理人员跨多个层导航以评估进度和差距。使用 Power BI 的“发布到 Web”功能，WaterAid 可以轻松将重要的分析数据传达给多方受众。立即查看。</value>
  </data>
  <data name="WaterAid_Title" xml:space="preserve">
    <value>WaterAid</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>202</value>
  </data>
</root>