<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Businesses_HeroDetails" xml:space="preserve">
    <value>Mediante la característica Publicar en web de Microsoft Power BI, las empresas pueden insertar datos interactivos para que los vea el público en sus blogs y sitios web, o compartir sorprendentes objetos visuales en sus comunicaciones a través del correo electrónico o las redes sociales. Las empresas se benefician de la capacidad de poder contar historias a partir de todos los tipos de datos, de todas las formas posibles, con potentes objetos visuales personalizados que llegan a millones de usuarios a través de cualquier dispositivo.</value>
  </data>
  <data name="Businesses_HeroHeading" xml:space="preserve">
    <value>Las empresas dan vida a sus historias mediante la característica Publicar en web, de Power BI</value>
  </data>
  <data name="Businesses_Quote" xml:space="preserve">
    <value>En nuestra empresa, JJ Food Services, los datos son cruciales y revelar lo desconocido de un conjunto gigante de datos históricos es más importante que nunca para nuestra supervivencia, una ventaja competitiva. Microsoft Power BI ha revolucionado la manera de ver datos y compartirlos con nuestros internamente y con asociados comerciales externos. Con varios paneles de Power BI podemos controlar la empresa e identificar mejor los aspectos problemáticos. En un breve periodo de tiempo, se ha convertido en una de las herramientas empresariales más populares e importantes para la empresa, gracias a su facilidad de uso y diseño contemporáneo. La característica Publicar en web de Power BI también nos ha ayudado mucho en nuestra transformación a digital, así como con las comunicaciones con los proveedores y los clientes. Mediante esta eficaz herramienta, ahora se comparte fácilmente con terceros la información de los datos sobre productos y servicios para que los vean e interaccionen con ellos.</value>
  </data>
  <data name="Businesses_QuoteAuthor" xml:space="preserve">
    <value>Mushtaque Ahmed, director ejecutivo, JJ Food Service Limited</value>
  </data>
  <data name="Media_HeroDetails" xml:space="preserve">
    <value>La característica Publicar en web de Microsoft Power BI ayuda a los periodistas, blogueros y reporteros a ofrecer historias más detalladas gracias a las visualizaciones de datos. Cree atractivas historias que atrapen la atención de la audiencia y otorgue un aspecto interesante a la información. La característica Publicar en web, de Power BI, permite a los periodistas generar y compartir visualizaciones de datos sumamente interactivas sin necesidad de código, y la posibilidad de alcanzar un número ilimitado de visualizaciones a través de cualquier tipo de dispositivo.</value>
  </data>
  <data name="Media_HeroHeading" xml:space="preserve">
    <value>Simplificación del periodismo de datos con la característica Publicar en web, de Power BI</value>
  </data>
  <data name="Media_Quote" xml:space="preserve">
    <value>Escribo para una compañía que hace un uso intensivo de datos y, por ello, aprecio la flexibilidad de Power BI que me permite centrarme en proporcionar análisis, información y orientación en lugar de tener que generar cálculos y consultas complejos,...he logrado pasar de generar datos a generar información y a escribir contenidos más potentes gracias al contexto que proporcionan los objetos visuales. ...Esto constituye verdaderamente el futuro de mi empresa.</value>
  </data>
  <data name="Media_QuoteAuthor" xml:space="preserve">
    <value>Dallas Salazar, Analista financiero de Seeking Alpha, septiembre de 2016</value>
  </data>
  <data name="Nonprofits_HeroDetails_1" xml:space="preserve">
    <value>Las organizaciones sin ánimo de lucro buscan poder aprovechar cada vez más los datos para dirigir la información y las repercusiones. Gracias a la característica Publicar en web de Power BI, las organizaciones sin ánimo de lucro pueden descubrir problemas importantes, dirigir la toma de decisiones en tiempo real, mostrar repercusiones y recabar apoyos importantes de sus miembros. Compruebe &lt;a href="{0}"&gt;aquí&lt;/a&gt; si su organización cumple los requisitos de suscripción gratuita de Power BI.</value>
  </data>
  <data name="Nonprofits_HeroHeading" xml:space="preserve">
    <value>Las organizaciones sin ánimo de lucro tienen mayor alcance gracias a Publicar en web de Power BI</value>
  </data>
  <data name="Nonprofits_Quote" xml:space="preserve">
    <value>El equipo de Pact se basa en los datos para informar acerca de nuestras decisiones empresariales y dar apoyo a nuestra estrategia. Y lo que es aún más importante, nos permite ofrecer un servicio de la mayor calidad a nuestros asociados y beneficiarios del sector y al resto del mundo. Estamos entusiasmados de poder utilizar Power BI no solo para hacer nuestros datos más accesibles y nuestros informes más significativos, sino también para ayudar a fomentar una cultura del aprendizaje entre nuestros empleados y miembros.</value>
  </data>
  <data name="Nonprofits_QuoteAuthor" xml:space="preserve">
    <value>Christian Loucq, Consejero delegado de estrategia y compromiso global de Pact</value>
  </data>
  <data name="PublicSector_HeroDetails" xml:space="preserve">
    <value>La característica Publicar en web de Microsoft Power BI permite crear y compartir visualizaciones interactivas dinámicas sobre asuntos clave como la educación, la vivienda, la participación pública, el presupuesto o el medio ambiente a los líderes de cualquier comunidad y a los usuarios de todo el mundo. Las entidades del sector público pueden crear fácilmente atractivas visualizaciones interactivas, mediante datos obtenidos a partir de cientos de orígenes, que se pueden compartir de forma pública, convirtiendo así la transparencia en norma fundamental del gobierno.</value>
  </data>
  <data name="PublicSector_HeroHeading" xml:space="preserve">
    <value>Con la característica Publicar en web de Power BI, las entidades del sector público proporcionan las herramientas necesarias a sus líderes y una mayor transparencia</value>
  </data>
  <data name="PublicSector_Quote" xml:space="preserve">
    <value>Mediante la creación de un informe de Power BI con estos datos podemos generar visualizaciones propias y comparar las tendencias emergentes dentro de varias áreas temáticas para comprender qué es lo más importante para los ciudadanos en cuanto a educación, vivienda, participación pública, ingresos, medio ambiente y muchas otras cuestiones.</value>
  </data>
  <data name="PublicSector_QuoteAuthor" xml:space="preserve">
    <value>Civic Innovation Project, febrero de 2016</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>201</value>
  </data>
</root>