<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgentinePeso" xml:space="preserve">
    <value>阿根廷比索 ($)</value>
  </data>
  <data name="ARS" xml:space="preserve">
    <value>ARS</value>
    <comment>Argentine Peso ($)</comment>
  </data>
  <data name="AUD" xml:space="preserve">
    <value>AUD</value>
    <comment>Australian Dollar ($)</comment>
  </data>
  <data name="AustralianDollar" xml:space="preserve">
    <value>澳大利亚元 ($)</value>
  </data>
  <data name="BrazilianReal" xml:space="preserve">
    <value>巴西雷亚尔 (R$)</value>
  </data>
  <data name="BritishPound" xml:space="preserve">
    <value>英镑 (£)</value>
  </data>
  <data name="BRL" xml:space="preserve">
    <value>BRL</value>
    <comment>Brazilian Real (R$)</comment>
  </data>
  <data name="CAD" xml:space="preserve">
    <value>CAD</value>
    <comment>Canadian Dollar ($)</comment>
  </data>
  <data name="CanadianDollar" xml:space="preserve">
    <value>加拿大元 ($)</value>
  </data>
  <data name="CHF" xml:space="preserve">
    <value>CHF</value>
    <comment>Swiss Frank (chf)</comment>
  </data>
  <data name="DanishKrone" xml:space="preserve">
    <value>丹麦克郎 (kr)</value>
  </data>
  <data name="DKK" xml:space="preserve">
    <value>DKK</value>
    <comment>Danish Krone (kr)</comment>
  </data>
  <data name="EUR" xml:space="preserve">
    <value>EUR</value>
    <comment>Euro (€)</comment>
  </data>
  <data name="Euro" xml:space="preserve">
    <value>欧元 (€)</value>
  </data>
  <data name="GBP" xml:space="preserve">
    <value>GBP</value>
    <comment>British Pound (£)</comment>
  </data>
  <data name="HKD" xml:space="preserve">
    <value>HKD</value>
    <comment>Hong Kong Dollar (HK$)</comment>
  </data>
  <data name="HongKongDollar" xml:space="preserve">
    <value>港元 (HK$)</value>
  </data>
  <data name="IDR" xml:space="preserve">
    <value>IDR</value>
    <comment>Indonesian Rupiah (Rp)</comment>
  </data>
  <data name="IndianRupee" xml:space="preserve">
    <value>印度卢比 ()</value>
  </data>
  <data name="IndonesianRupiah" xml:space="preserve">
    <value>印度尼西亚卢比 (Rp)</value>
  </data>
  <data name="INR" xml:space="preserve">
    <value>INR</value>
    <comment>Indian Rupee (₹)</comment>
  </data>
  <data name="JapaneseYen" xml:space="preserve">
    <value>日元 (¥)</value>
  </data>
  <data name="JPY" xml:space="preserve">
    <value>JPY</value>
    <comment>Japanese Yen (¥)</comment>
  </data>
  <data name="KoreanWon" xml:space="preserve">
    <value>韩元 (₩)</value>
  </data>
  <data name="KRW" xml:space="preserve">
    <value>KRW</value>
    <comment>Korean Won (₩)</comment>
  </data>
  <data name="MalaysianRinggit" xml:space="preserve">
    <value>马来西亚林吉特 (RM$)</value>
  </data>
  <data name="MexicanPeso" xml:space="preserve">
    <value>墨西哥比索 (MXN$)</value>
  </data>
  <data name="MXN" xml:space="preserve">
    <value>MXN</value>
    <comment>Mexican Peso (MXN$)</comment>
  </data>
  <data name="MYR" xml:space="preserve">
    <value>MYR</value>
    <comment>Malaysian Ringgit (RM$)</comment>
  </data>
  <data name="NewZealandDollar" xml:space="preserve">
    <value>新西兰元 ($)</value>
  </data>
  <data name="NOK" xml:space="preserve">
    <value>NOK</value>
    <comment>Norwegian Krone (kr)</comment>
  </data>
  <data name="NorwegianKrone" xml:space="preserve">
    <value>挪威克郎 (kr)</value>
  </data>
  <data name="NZD" xml:space="preserve">
    <value>NZD</value>
    <comment>New Zealand Dollar ($)</comment>
  </data>
  <data name="RUB" xml:space="preserve">
    <value>RUB</value>
    <comment>Russian Ruble (руб)</comment>
  </data>
  <data name="RussianRuble" xml:space="preserve">
    <value>俄罗斯卢布 (руб)</value>
  </data>
  <data name="SAR" xml:space="preserve">
    <value>SAR</value>
    <comment>Saudi Riyal (SR)</comment>
  </data>
  <data name="SaudiRiyal" xml:space="preserve">
    <value>沙特阿拉伯里亚尔 (SR)</value>
  </data>
  <data name="SEK" xml:space="preserve">
    <value>SEK</value>
    <comment>Swedish Krona (kr)</comment>
  </data>
  <data name="SouthAfricanRand" xml:space="preserve">
    <value>南非兰特 (R)</value>
  </data>
  <data name="SwedishKrona" xml:space="preserve">
    <value>瑞典克朗 (kr)</value>
  </data>
  <data name="SwissFrank" xml:space="preserve">
    <value>瑞士法郎 (chf)</value>
  </data>
  <data name="TaiwaneseDollar" xml:space="preserve">
    <value>台币 (NT$)</value>
  </data>
  <data name="TRY" xml:space="preserve">
    <value>TRY</value>
    <comment>Turkish Lira (TL)</comment>
  </data>
  <data name="TurkishLira" xml:space="preserve">
    <value>土耳其里拉 (TL)</value>
  </data>
  <data name="TWD" xml:space="preserve">
    <value>TWD</value>
    <comment>Taiwanese Dollar ($)</comment>
  </data>
  <data name="USD" xml:space="preserve">
    <value>USD</value>
    <comment>US Dollar ($)</comment>
  </data>
  <data name="USDollar" xml:space="preserve">
    <value>美元 ($)</value>
  </data>
  <data name="ZAR" xml:space="preserve">
    <value>ZAR</value>
    <comment>South African Rand (R)</comment>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>104</value>
  </data>
</root>