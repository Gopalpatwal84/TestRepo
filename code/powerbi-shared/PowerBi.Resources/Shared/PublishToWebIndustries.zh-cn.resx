<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Businesses_HeroDetails" xml:space="preserve">
    <value>借助 Microsoft Power BI 的“发布到 Web”功能，公司可在面向公众的博客和网站中嵌入交互式数据可视化效果，或通过电子邮件或社交媒体通信共享精彩的视觉对象。公司将可利用任何方式、任何数据，借助强大的自定义视觉对象讲述故事 - 影响力遍及使用任意设备的数百万用户。</value>
  </data>
  <data name="Businesses_HeroHeading" xml:space="preserve">
    <value>公司可利用 Power BI 的“发布到 Web”功能让故事生动活泼</value>
  </data>
  <data name="Businesses_Quote" xml:space="preserve">
    <value>对 JJ Food Services 业务而言，数据是关键，而鉴于公司的生存和竞争优势，从大量历史数据揭示出未知因素也变得前所未有地重要。Microsoft Power BI 彻底改变了我们与内部同事和外部贸易合作伙伴共享和可视化数据的方式。各种 Power BI 仪表有助于我们密切关注业务进展，更容易鉴别出所关注的领域。由于其易用性和现代化设计，它在非常短的时间内便已迅速跻身为最受企业欢迎和最重要的业务工具之一。Power BI 的“发布到 Web”功能还对我们的数字化转换之旅以及与供应商和客户之间的交流大有裨益。使用此强大的功能，现可轻松与外部各方共享与产品和服务相关的数据见解，供其查看数据，并与之交互。</value>
  </data>
  <data name="Businesses_QuoteAuthor" xml:space="preserve">
    <value>JJ Food Service 有限公司的首席运营官 Mushtaque Ahmed</value>
  </data>
  <data name="Media_HeroDetails" xml:space="preserve">
    <value>Microsoft Power BI 的“发布到 Web”功能可帮助记者、博主、报道员利用数据可视化效果深化故事内涵。创建吸引眼球并提供有趣见解的引人入胜的故事。通过 Power BI 的“发布到 Web”功能，记者无需编码即可构建和共享高度交互式的数据可视化效果，并可在任意设备上无限次查看。</value>
  </data>
  <data name="Media_HeroHeading" xml:space="preserve">
    <value>Power BI 的“发布到 Web”功能让数据新闻变得容易</value>
  </data>
  <data name="Media_Quote" xml:space="preserve">
    <value>我为基于数据的公司编写内容，我喜欢 Power BI 提供的灵活性，它让我可以关注于提供分析、见解和指南，而不是浪费时间构建复杂计算和查询…我可以从构建数据变为构建见解，并利用视觉对象提供的上下文使编写内容更为强大…这是我的公司未来的发展方向。</value>
  </data>
  <data name="Media_QuoteAuthor" xml:space="preserve">
    <value>Seeking Alpha 财务分析师 Dallas Salazar，2016 年 9 月</value>
  </data>
  <data name="Nonprofits_HeroDetails_1" xml:space="preserve">
    <value>非营利性机构越来越希望利用数据获取见解和推动影响。通过 Microsoft Power BI 的“发布到 Web”功能，非营利组织可展现重要问题、推动实时决策、展示影响并获取其成员的重要支持。可在&lt;a href="{0}"&gt;此处&lt;/a&gt;查看组织是否有资格免费获取 Power BI 订阅。</value>
  </data>
  <data name="Nonprofits_HeroHeading" xml:space="preserve">
    <value>借助 Power BI 的“发布到 Web”功能，非营利组织能够做出更多贡献</value>
  </data>
  <data name="Nonprofits_Quote" xml:space="preserve">
    <value>Pact 团队依赖数据确保业务决策的合理性和支持我们的策略。更重要的是，它使我们可以向此领域和全球的合作伙伴和受益人提供最优质服务。我们非常喜欢使用 Power BI，因为它不仅可让数据更易使用、报表更有意义，而且有助于在员工和委托人中营造一种学习氛围。</value>
  </data>
  <data name="Nonprofits_QuoteAuthor" xml:space="preserve">
    <value>Pact 的全球首席参与官兼策略官 Christian Loucq</value>
  </data>
  <data name="PublicSector_HeroDetails" xml:space="preserve">
    <value>借助 Microsoft Power BI 的“发布到 Web”功能，世界各地的社区领袖和公民可针对关键问题（如教育、住房、公共参与、预算和环境）创建和共享动态交互式可视化效果。公营单位可利用来自数百个来源的公开共享的数据，轻松创建具有吸引力的交互式可视化效果，确保日常治理的透明度。</value>
  </data>
  <data name="PublicSector_HeroHeading" xml:space="preserve">
    <value>通过 Power BI 的“发布到 Web”功能，公共部门实体可为领袖提供强大支持并提高透明度</value>
  </data>
  <data name="PublicSector_Quote" xml:space="preserve">
    <value>通过使用此数据创建 Power BI 报表，可呈现自己的可视化效果和比较若干主题领域的新趋势，了解教育、住房、公共参与、收入和环境等领域中对公民而言最重要的问题。</value>
  </data>
  <data name="PublicSector_QuoteAuthor" xml:space="preserve">
    <value>公民创新项目，2016 年 2 月</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>202</value>
  </data>
</root>