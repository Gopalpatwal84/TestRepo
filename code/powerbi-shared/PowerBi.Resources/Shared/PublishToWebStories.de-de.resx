<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CatholicReliefServices_Details" xml:space="preserve">
    <value>Mithilfe der Funktionen von Power BI wurde ein Showcase mit Daten erstellt, die von Indiens freiwilligen Gesundheitsarbeitern, den ASHA, gesammelt wurden. Der Showcase zeigt wichtige Stationen der Gesundheitsversorgung von schwangeren Frauen bis nach der Geburt. Das Dashboard eignet sich zur Präsentation für ein internationales oder lokales Publikum aus den Bereichen Programmverwaltung und Sichtbarkeit.</value>
  </data>
  <data name="CatholicReliefServices_Title" xml:space="preserve">
    <value>Katholische Hilfsdienste</value>
  </data>
  <data name="CivicInnovationProject_Details" xml:space="preserve">
    <value>Die Power BI-Webveröffentlichung unterstützt das Civic Innovation Project bei seinem Ziel, Städten weltweit zu helfen, besser mit Daten zu arbeiten und Transparenz zu einem selbstverständlichen Bestandteil der Kommunalverwaltung zu machen. Das Feature hilft dem Civic Innovation Project, Führungskräften zu zeigen, wie die IT für die Kommunalverwaltung in einen datengesteuerten Entscheidungsfindungsprozess integriert werden kann, der sich auf die Bürger auswirkt und sie anregt, mehr über ihre Gemeinschaft zu erfahren.</value>
  </data>
  <data name="CivicInnovationProject_Title" xml:space="preserve">
    <value>Civic Innovation Project</value>
  </data>
  <data name="ElizabethGlaser_Details" xml:space="preserve">
    <value>Mit dem Power BI-Feature „Webveröffentlichung“ kann die EGPAF alle der leistungsstarken Power BI-Tools nutzen, um ein überzeugendes Datendashboard zu erstellen, das einer Vielzahl von Zielgruppen schnell zur Verfügung steht. Die EGPAF hat nun eine Möglichkeit, ihre Geschichte auf Grundlage von Daten wesentlich wirkungsvoller zu erzählen und ihre Anstrengungen beim Kampf gegen AIDS bei Kindern weltweit herauszustellen.</value>
  </data>
  <data name="ElizabethGlaser_Title" xml:space="preserve">
    <value>Elizabeth Glaser Pediatric AIDS Foundation</value>
  </data>
  <data name="JJFoodServices_Details" xml:space="preserve">
    <value>Mithilfe des Power BI-Features „Webveröffentlichung“ kann JJ Foods Services relevante Daten auf Websites und in Blogs veröffentlichen, um externen Partnern mit interaktiven Berichten einfachen Zugriff zu ermöglichen. Diese einfache, aber sehr effektive Methode hat uns neue Möglichkeiten der Datenfreigabe eröffnet.</value>
  </data>
  <data name="JJFoodServices_Title" xml:space="preserve">
    <value>JJ Foods Services</value>
  </data>
  <data name="King5_Details" xml:space="preserve">
    <value>„Dank Microsoft und Power BI hatte KING 5 am Wahlabend gegenüber anderen lokalen Nachrichtenredaktionen einen großen Vorteil. Während unsere Reporter die Echtzeitergebnisse in der Livesendung präsentierten, standen sie gleichzeitig online und in unserer mobilen App zur Verfügung. Das ist nicht nur guter Journalismus, sondern auch großartiger Kundenservice. Mit Power BI können wir bei KING 5 unser Publikum besser als je zuvor ansprechen.“ – Cheryl Carson, KING 5, Leiterin der Nachrichtenredaktion</value>
  </data>
  <data name="King5_Title" xml:space="preserve">
    <value>King 5</value>
  </data>
  <data name="Pact_Details" xml:space="preserve">
    <value>Pact ist in über 30 Ländern vor Ort vertreten, um das Leben vieler Menschen weltweit messbar zu verbessern.  Power BI versorgt Pact mit einem interaktiven Visualisierungstool, mit dem Pact die Wirksamkeit seiner Arbeit einfacher und überzeugender präsentieren kann. Power BI bietet den Mitarbeitern, Spendern und Partnern von Pact schnellen Zugriff auf Informationen, Ergebnisse in Ländern und Sektoren sowie Trends im Zeitverlauf.</value>
  </data>
  <data name="Pact_Title" xml:space="preserve">
    <value>Pact</value>
  </data>
  <data name="WaterAid_Details" xml:space="preserve">
    <value>Eine wesentliche Strategie von WaterAid India ist die Entwicklung der Fertigkeiten von Menschen, ihren Institutionen, Behörden, Beamten und Fachbehörden. Microsoft Power BI half WaterAid beim Überwachen von Daten aus unterschiedlichen Regionen und Themenbereichen. Power BI bietet interaktive Visualisierungen und benutzerfreundliche Tools, um wichtige Datenpunkte zu transformieren und analysieren, sodass die Führungskräfte einfach zwischen mehreren Ebenen navigieren können, um Fortschritte und Lücken zu bewerten. Mit dem Power BI-Feature „Webveröffentlichung“ kann WaterAid mehreren Zielgruppen wichtige Analysedaten mitteilen. Jetzt ansehen</value>
  </data>
  <data name="WaterAid_Title" xml:space="preserve">
    <value>WaterAid</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>201</value>
  </data>
</root>