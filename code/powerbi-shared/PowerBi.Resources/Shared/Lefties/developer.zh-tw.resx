<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Area_API" xml:space="preserve">
    <value>Power BI API</value>
  </data>
  <data name="Area_ContentPack" xml:space="preserve">
    <value>內容套件認證</value>
  </data>
  <data name="Area_Create" xml:space="preserve">
    <value>建立自訂視覺效果</value>
  </data>
  <data name="Area_GetStarted" xml:space="preserve">
    <value>開始使用</value>
  </data>
  <data name="Area_Integrate" xml:space="preserve">
    <value>將項目內嵌到應用程式中</value>
  </data>
  <data name="Area_PushData" xml:space="preserve">
    <value>將資料推送至儀表板</value>
  </data>
  <data name="Link_AddRows" xml:space="preserve">
    <value>取得要加入資料列的資料集</value>
  </data>
  <data name="Link_AddRowsToTable" xml:space="preserve">
    <value>將資料列加入資料表</value>
  </data>
  <data name="Link_Authenticate" xml:space="preserve">
    <value>向 Power BI 服務驗證</value>
  </data>
  <data name="Link_AuthenticateClient" xml:space="preserve">
    <value>驗證用戶端應用程式</value>
  </data>
  <data name="Link_AuthenticateWeb" xml:space="preserve">
    <value>驗證 Web 應用程式</value>
  </data>
  <data name="Link_AuthToken" xml:space="preserve">
    <value>取得驗證存取權杖</value>
  </data>
  <data name="Link_AzureADTenant" xml:space="preserve">
    <value>建立 Azure Active Directory 租用戶</value>
  </data>
  <data name="Link_CertProgram" xml:space="preserve">
    <value>內容套件認證計劃</value>
  </data>
  <data name="Link_CompleteCodeListing" xml:space="preserve">
    <value>完整程式碼清單</value>
  </data>
  <data name="Link_CreateDataset" xml:space="preserve">
    <value>建立資料集</value>
  </data>
  <data name="Link_CustomVisual" xml:space="preserve">
    <value>使用開發人員工具建立自訂視覺效果</value>
  </data>
  <data name="Link_GetDashboard" xml:space="preserve">
    <value>取得 Power BI 儀表板</value>
  </data>
  <data name="Link_GetReport" xml:space="preserve">
    <value>取得 Power BI 報表</value>
  </data>
  <data name="Link_GetTile" xml:space="preserve">
    <value>取得 Power BI 磚</value>
  </data>
  <data name="Link_IntegrateReport" xml:space="preserve">
    <value>將 Power BI 報表整合至應用程式中</value>
  </data>
  <data name="Link_IntegrateTile" xml:space="preserve">
    <value>將 Power BI 磚整合到應用程式中</value>
  </data>
  <data name="Link_Overview" xml:space="preserve">
    <value>Power BI API 可以做些什麼</value>
  </data>
  <data name="Link_Permissions" xml:space="preserve">
    <value>Power BI 權限</value>
  </data>
  <data name="Link_PushData" xml:space="preserve">
    <value>將資料推送至儀表板</value>
  </data>
  <data name="Link_RegisterAzureAD" xml:space="preserve">
    <value>使用 Azure AD 註冊應用程式</value>
  </data>
  <data name="Link_RegisterClient" xml:space="preserve">
    <value>註冊用戶端應用程式</value>
  </data>
  <data name="Link_RegisterReportAzureAD" xml:space="preserve">
    <value>使用 Azure AD 註冊 Web 應用程式</value>
  </data>
  <data name="Link_RegisterWeb" xml:space="preserve">
    <value>註冊 Web 應用程式</value>
  </data>
  <data name="Link_RegisterWebAppAzureAD" xml:space="preserve">
    <value>使用 Azure AD 註冊 Web 應用程式</value>
    <comment>`</comment>
  </data>
  <data name="Link_ReportCodeListing" xml:space="preserve">
    <value>將 Power BI 報表整合至應用程式程式碼清單中</value>
  </data>
  <data name="Link_ReportIframe" xml:space="preserve">
    <value>將 Power BI 報表載入 iFrame</value>
  </data>
  <data name="Link_RestAPIReference" xml:space="preserve">
    <value>Power BI REST API 參考</value>
  </data>
  <data name="Link_ReviewVisual" xml:space="preserve">
    <value>檢閱自訂視覺效果的安全性與隱私權</value>
  </data>
  <data name="Link_TCPAuthoring" xml:space="preserve">
    <value>範本內容套件製作</value>
  </data>
  <data name="Link_TCPExperiences" xml:space="preserve">
    <value>範本內容套件體驗</value>
  </data>
  <data name="Link_TCPTesting" xml:space="preserve">
    <value>範本內容套件測試</value>
  </data>
  <data name="Link_TileCodeListing" xml:space="preserve">
    <value>將 Power BI 磚整合至應用程式程式碼清單中</value>
  </data>
  <data name="Link_TileIframe" xml:space="preserve">
    <value>將 Power BI 磚載入 iFrame</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Power BI 開發人員</value>
  </data>
  <data name="Link_DevEmbedDashboard" xml:space="preserve">
    <value>將儀表板整合到應用程式中</value>
  </data>
  <data name="Link_SubmitVisual" xml:space="preserve">
    <value>將自訂視覺效果發佈到 Office 市集</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>209</value>
  </data>
</root>