<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Area_API" xml:space="preserve">
    <value>Power BI API</value>
  </data>
  <data name="Area_ContentPack" xml:space="preserve">
    <value>内容包认证</value>
  </data>
  <data name="Area_Create" xml:space="preserve">
    <value>创建自定义视觉对象</value>
  </data>
  <data name="Area_GetStarted" xml:space="preserve">
    <value>开始使用</value>
  </data>
  <data name="Area_Integrate" xml:space="preserve">
    <value>将项目嵌入到应用中</value>
  </data>
  <data name="Area_PushData" xml:space="preserve">
    <value>将数据推送到仪表板</value>
  </data>
  <data name="Link_AddRows" xml:space="preserve">
    <value>获取数据集以添加行</value>
  </data>
  <data name="Link_AddRowsToTable" xml:space="preserve">
    <value>将行添加到表格</value>
  </data>
  <data name="Link_Authenticate" xml:space="preserve">
    <value>对 Power BI 服务进行身份验证</value>
  </data>
  <data name="Link_AuthenticateClient" xml:space="preserve">
    <value>对客户端应用进行身份验证</value>
  </data>
  <data name="Link_AuthenticateWeb" xml:space="preserve">
    <value>对 Web 应用进行身份验证</value>
  </data>
  <data name="Link_AuthToken" xml:space="preserve">
    <value>获取身份验证访问令牌</value>
  </data>
  <data name="Link_AzureADTenant" xml:space="preserve">
    <value>创建 Azure Active Directory 租户</value>
  </data>
  <data name="Link_CertProgram" xml:space="preserve">
    <value>内容包认证程序</value>
  </data>
  <data name="Link_CompleteCodeListing" xml:space="preserve">
    <value>完成代码列表</value>
  </data>
  <data name="Link_CreateDataset" xml:space="preserve">
    <value>创建数据集</value>
  </data>
  <data name="Link_CustomVisual" xml:space="preserve">
    <value>使用开发人员工具创建自定义视觉对象</value>
  </data>
  <data name="Link_GetDashboard" xml:space="preserve">
    <value>获取 Power BI 仪表板</value>
  </data>
  <data name="Link_GetReport" xml:space="preserve">
    <value>获取 Power BI 报表</value>
  </data>
  <data name="Link_GetTile" xml:space="preserve">
    <value>获取 Power BI 磁贴</value>
  </data>
  <data name="Link_IntegrateReport" xml:space="preserve">
    <value>将 Power BI 报表集成到应用中</value>
  </data>
  <data name="Link_IntegrateTile" xml:space="preserve">
    <value>将 Power BI 磁贴集成到应用中</value>
  </data>
  <data name="Link_Overview" xml:space="preserve">
    <value>使用 Power BI API 可以做什么</value>
  </data>
  <data name="Link_Permissions" xml:space="preserve">
    <value>Power BI 权限</value>
  </data>
  <data name="Link_PushData" xml:space="preserve">
    <value>将数据推送到仪表板</value>
  </data>
  <data name="Link_RegisterAzureAD" xml:space="preserve">
    <value>使用 Azure AD 注册应用</value>
  </data>
  <data name="Link_RegisterClient" xml:space="preserve">
    <value>注册客户端应用</value>
  </data>
  <data name="Link_RegisterReportAzureAD" xml:space="preserve">
    <value>使用 Azure AD 注册 Web 应用</value>
  </data>
  <data name="Link_RegisterWeb" xml:space="preserve">
    <value>注册 Web 应用</value>
  </data>
  <data name="Link_RegisterWebAppAzureAD" xml:space="preserve">
    <value>使用 Azure AD 注册 Web 应用</value>
    <comment>`</comment>
  </data>
  <data name="Link_ReportCodeListing" xml:space="preserve">
    <value>将 Power BI 报表集成到应用代码列表中</value>
  </data>
  <data name="Link_ReportIframe" xml:space="preserve">
    <value>将 Power BI 报表加载到 IFrame 中</value>
  </data>
  <data name="Link_RestAPIReference" xml:space="preserve">
    <value>Power BI REST API 参考</value>
  </data>
  <data name="Link_ReviewVisual" xml:space="preserve">
    <value>查看用于安全和隐私的自定义视觉对象</value>
  </data>
  <data name="Link_TCPAuthoring" xml:space="preserve">
    <value>模板内容包创作</value>
  </data>
  <data name="Link_TCPExperiences" xml:space="preserve">
    <value>模板内容包体验</value>
  </data>
  <data name="Link_TCPTesting" xml:space="preserve">
    <value>模板内容包测试</value>
  </data>
  <data name="Link_TileCodeListing" xml:space="preserve">
    <value>将 Power BI 磁贴集成到应用代码列表中</value>
  </data>
  <data name="Link_TileIframe" xml:space="preserve">
    <value>将 Power BI 磁贴加载到 IFrame 中</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Power BI 开发人员</value>
  </data>
  <data name="Link_DevEmbedDashboard" xml:space="preserve">
    <value>将仪表板集成到应用中</value>
  </data>
  <data name="Link_SubmitVisual" xml:space="preserve">
    <value>将自定义视觉对象发布到 Office 应用商店</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>211</value>
  </data>
</root>