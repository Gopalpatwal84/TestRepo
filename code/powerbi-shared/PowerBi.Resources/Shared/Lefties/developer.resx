<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Area_API" xml:space="preserve">
    <value>Power BI API</value>
  </data>
  <data name="Area_ContentPack" xml:space="preserve">
    <value>Content Pack Certification</value>
  </data>
  <data name="Area_Create" xml:space="preserve">
    <value>Create a custom visual</value>
  </data>
  <data name="Area_GetStarted" xml:space="preserve">
    <value>Get started</value>
  </data>
  <data name="Area_Integrate" xml:space="preserve">
    <value>Embed items into your app</value>
  </data>
  <data name="Area_PushData" xml:space="preserve">
    <value>Push data into a dashboard</value>
  </data>
  <data name="Link_AddRows" xml:space="preserve">
    <value>Get a dataset to add rows</value>
  </data>
  <data name="Link_AddRowsToTable" xml:space="preserve">
    <value>Add rows to a table</value>
  </data>
  <data name="Link_Authenticate" xml:space="preserve">
    <value>Authenticate to Power BI service</value>
  </data>
  <data name="Link_AuthenticateClient" xml:space="preserve">
    <value>Authenticate a client app</value>
  </data>
  <data name="Link_AuthenticateWeb" xml:space="preserve">
    <value>Authenticate a web app</value>
  </data>
  <data name="Link_AuthToken" xml:space="preserve">
    <value>Get an authentication access token</value>
  </data>
  <data name="Link_AzureADTenant" xml:space="preserve">
    <value>Create an Azure Active Directory tenant</value>
  </data>
  <data name="Link_CertProgram" xml:space="preserve">
    <value>Content Pack Certification Program</value>
  </data>
  <data name="Link_CompleteCodeListing" xml:space="preserve">
    <value>Complete code listing</value>
  </data>
  <data name="Link_CreateDataset" xml:space="preserve">
    <value>Create a dataset</value>
  </data>
  <data name="Link_CustomVisual" xml:space="preserve">
    <value>Create a custom visual with the Developer Tools</value>
  </data>
  <data name="Link_GetDashboard" xml:space="preserve">
    <value>Get a Power BI dashboard</value>
  </data>
  <data name="Link_GetReport" xml:space="preserve">
    <value>Get a Power BI report</value>
  </data>
  <data name="Link_GetTile" xml:space="preserve">
    <value>Get a Power BI tile</value>
  </data>
  <data name="Link_IntegrateReport" xml:space="preserve">
    <value>Integrate a Power BI report into an app</value>
  </data>
  <data name="Link_IntegrateTile" xml:space="preserve">
    <value>Integrate a Power BI tile into an app</value>
  </data>
  <data name="Link_Overview" xml:space="preserve">
    <value>What can I do with the Power BI API</value>
  </data>
  <data name="Link_Permissions" xml:space="preserve">
    <value>Power BI permissions</value>
  </data>
  <data name="Link_PushData" xml:space="preserve">
    <value>Push data into a dashboard</value>
  </data>
  <data name="Link_RegisterAzureAD" xml:space="preserve">
    <value>Register an app with Azure AD</value>
  </data>
  <data name="Link_RegisterClient" xml:space="preserve">
    <value>Register a client app</value>
  </data>
  <data name="Link_RegisterReportAzureAD" xml:space="preserve">
    <value>Register a web app with Azure AD</value>
  </data>
  <data name="Link_RegisterWeb" xml:space="preserve">
    <value>Register a web app</value>
  </data>
  <data name="Link_RegisterWebAppAzureAD" xml:space="preserve">
    <value>Register a web app with Azure AD</value>
    <comment>`</comment>
  </data>
  <data name="Link_ReportCodeListing" xml:space="preserve">
    <value>Integrate a Power BI report into an app code listing</value>
  </data>
  <data name="Link_ReportIframe" xml:space="preserve">
    <value>Load a Power BI report into an iFrame</value>
  </data>
  <data name="Link_RestAPIReference" xml:space="preserve">
    <value>Power BI REST API Reference</value>
  </data>
  <data name="Link_ReviewVisual" xml:space="preserve">
    <value>Review custom visuals for security and privacy</value>
  </data>
  <data name="Link_TCPAuthoring" xml:space="preserve">
    <value>Template Content Pack Authoring</value>
  </data>
  <data name="Link_TCPExperiences" xml:space="preserve">
    <value>Template Content Pack Experiences</value>
  </data>
  <data name="Link_TCPTesting" xml:space="preserve">
    <value>Template Content Pack Testing</value>
  </data>
  <data name="Link_TileCodeListing" xml:space="preserve">
    <value>Integrate a Power BI tile into an app code listing</value>
  </data>
  <data name="Link_TileIframe" xml:space="preserve">
    <value>Load a Power BI tile into an iFrame</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Power BI Developer</value>
  </data>
  <data name="Link_DevEmbedDashboard" xml:space="preserve">
    <value>Integrate a dashboard into an app</value>
  </data>
  <data name="Link_SubmitVisual" xml:space="preserve">
    <value>Publish custom visuals to the Office store</value>
  </data>
</root>