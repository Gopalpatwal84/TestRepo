<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccelerateAcquisition_Content_1" xml:space="preserve">
    <value>Deploy enterprise ready solutions that are scalable, extensible, and secure for your customers. Deploy pre-built analytical models and dashboards in minutes using &lt;a href="{0}"&gt;Solutions Templates&lt;/a&gt;, so you can focus on the services that matter most to your organization.</value>
  </data>
  <data name="AccelerateAcquisition_Title" xml:space="preserve">
    <value>Accelerate customer acquisition through solution templates</value>
  </data>
  <data name="BiSolutions_Cta" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="BiSolutions_Title" xml:space="preserve">
    <value>World-class BI solutions, customized for your business</value>
  </data>
  <data name="BlueGranite_CompanyName" xml:space="preserve">
    <value>BlueGranite</value>
  </data>
  <data name="BlueGranite_Content" xml:space="preserve">
    <value>“Power BI is now a critical part of our SI business. Over the past 18 months we’ve seen Power BI move from ‘what is it’ to ‘must have it’ with our clients, with many clients deciding Power BI is a new corporate standard. The Power BI partner program from Microsoft has helped us quickly tap into the interest and excitement from clients around this ever expanding analytics platform.”</value>
  </data>
  <data name="BlueGranite_Name" xml:space="preserve">
    <value>Matt Mace</value>
  </data>
  <data name="BlueMargin_CompanyName" xml:space="preserve">
    <value>Blue Margin</value>
  </data>
  <data name="BlueMargin_Content" xml:space="preserve">
    <value>“Our first DIAD event was filled with the most prominent companies in our region, many of whom are now in our sales pipeline.”</value>
  </data>
  <data name="BlueMargin_Name" xml:space="preserve">
    <value>Sara Sanders</value>
  </data>
  <data name="GNet_CompanyName" xml:space="preserve">
    <value>GNet</value>
  </data>
  <data name="GNet_Content" xml:space="preserve">
    <value>“It’s unprecedented as to what Power BI Product and Engineering teams have achieved. Their outreach and community engagement with Lead Generation has enabled 1000s of users to get the most out of the best BI and Data visualization product in the market. This is the power of Microsoft’s ecosystem!”</value>
  </data>
  <data name="GNet_Name" xml:space="preserve">
    <value>Neelesh Raheja</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Become a part of the Power BI Red Carpet Program for elite industry leaders, and enjoy the benefits of technical training, webinars, direct access to Microsoft Engineering, and more.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Become a world class Power BI Partner</value>
  </data>
  <data name="LeverageOffers_Content" xml:space="preserve">
    <value>Showcase members have access to dedicated lead generation programs that will drive real customers who are ready to buy business intelligence solutions right to your organization. You can see it in the testimonials below – this will have a positive impact on your business.</value>
  </data>
  <data name="LeverageOffers_Title" xml:space="preserve">
    <value>Leverage offers to drive demand generation</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Become a Partner | Microsoft Power BI</value>
  </data>
  <data name="NealAnalytics_CompanyName" xml:space="preserve">
    <value>Neal Analytics</value>
  </data>
  <data name="NealAnalytics_Content" xml:space="preserve">
    <value>“I was able to easily and quickly act upon the lead provided to me through the BYOD program. It’s the best Microsoft lead generation program I’ve engaged with in the 5 years I’ve been working with Microsoft.”</value>
  </data>
  <data name="NealAnalytics_Name" xml:space="preserve">
    <value>David Brown</value>
  </data>
  <data name="ShowcaseSolutions_Content_1" xml:space="preserve">
    <value>Share and promote your fully functional Power BI solutions on the &lt;a href="{0}"&gt;Microsoft Partner Showcase&lt;/a&gt;, with each displayed on a its own page as part of the Power BI website. Get your work in front of thousands of targeted potential customers, and build your brand.</value>
  </data>
  <data name="ShowcaseSolutions_Title" xml:space="preserve">
    <value>Showcase your solutions on PowerBI.com</value>
  </data>
  <data name="WhatPartnersAreSaying_Title" xml:space="preserve">
    <value>See what our partners are saying</value>
  </data>
</root>