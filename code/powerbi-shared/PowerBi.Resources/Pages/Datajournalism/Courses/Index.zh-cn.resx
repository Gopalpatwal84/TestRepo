<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChoosingGraphics_Content" xml:space="preserve">
    <value>了解如何恰当选择图形形式来展示数据</value>
  </data>
  <data name="ChoosingGraphics_Heading" xml:space="preserve">
    <value>选择图形</value>
  </data>
  <data name="DataExploration_Content" xml:space="preserve">
    <value>使用可视化理解并探索数据，提取意义</value>
  </data>
  <data name="DataExploration_Heading" xml:space="preserve">
    <value>数据探索</value>
  </data>
  <data name="DesignNarrative_Content" xml:space="preserve">
    <value>探索设计理念，创建引人入胜的数据可视化</value>
  </data>
  <data name="DesignNarrative_Heading" xml:space="preserve">
    <value>设计和说明</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;欢迎使用 Microsoft Power BI 的&lt;strong&gt;数据可视化和故事分享&lt;/strong&gt;部分。我们已与著名数据可视化专家 &lt;a href="{0}"&gt;Alberto Cairo&lt;/a&gt; 达成合作，分享创建可视化的方法以及可视化如何支持数据故事分享。这些课程旨在展示可视化工具的强大性能，可帮助引人入胜地向受众进行说明并提供极具价值的见解。&lt;/p&gt;
&lt;p&gt;
我们在 Power BI 演示和教程中分层阐述了 Alberto 的要点，帮助你了解如何使用数据可视化工具分享自己的故事。
&lt;/p&gt;
&lt;p&gt;希望你能够及时了解数据可视化的概念、设计和分析，并将其应用到自己的故事分享中。&lt;/p&gt;</value>
    <comment>0 = link</comment>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>开始学习</value>
  </data>
  <data name="Hero_Title" xml:space="preserve">
    <value>数据故事分享和可视化</value>
  </data>
  <data name="IntroToVisualization_Content" xml:space="preserve">
    <value>利用不同类型的图形了解数据并与受众沟通</value>
  </data>
  <data name="IntroToVisualization_Heading" xml:space="preserve">
    <value>可视化简介</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>数据新闻课程 | Microsoft Power BI</value>
  </data>
  <data name="TruthfulVisualizations_Content" xml:space="preserve">
    <value>有效、真实地展示要分享的信息</value>
  </data>
  <data name="TruthfulVisualizations_Heading" xml:space="preserve">
    <value>真实可视化</value>
  </data>
  <data name="WatchNow_Cta" xml:space="preserve">
    <value>立即观看</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>162</value>
  </data>
</root>