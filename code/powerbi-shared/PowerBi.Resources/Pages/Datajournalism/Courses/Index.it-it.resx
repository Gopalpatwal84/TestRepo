<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChoosingGraphics_Content" xml:space="preserve">
    <value>Scopri come scegliere correttamente le forme grafiche per mostrare i tuoi dati</value>
  </data>
  <data name="ChoosingGraphics_Heading" xml:space="preserve">
    <value>Scelta della grafica</value>
  </data>
  <data name="DataExploration_Content" xml:space="preserve">
    <value>Usa le visualizzazioni per comprendere ed esplorare i dati ed estrarre significato</value>
  </data>
  <data name="DataExploration_Heading" xml:space="preserve">
    <value>Esplorazione dei dati</value>
  </data>
  <data name="DesignNarrative_Content" xml:space="preserve">
    <value>Esplora i concetti di progettazione per creare visualizzazioni dati accattivanti</value>
  </data>
  <data name="DesignNarrative_Heading" xml:space="preserve">
    <value>Progettazione e testo descrittivo</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;Sezione &lt;strong&gt;Visualizzazione e storie raccontate dai dati&lt;/strong&gt; per Microsoft Power BI Abbiamo lavorato insieme al rinomato esperto in visualizzazione dei dati &lt;a href="{0}"&gt;Alberto Cairo&lt;/a&gt; per condividere la metodologia alla base della visualizzazione e come può supportare le storie raccontate dai dati. L'obiettivo di questi corsi è mostrare come la visualizzazione sia un potente strumento in grado di dare forma a un testo descrittivo e presentare ai tuoi destinatari preziose analisi approfondite in modo accattivante.&lt;/p&gt;
&lt;p&gt;
Abbiamo presentato demo ed esercitazioni di Power BI di vari livelli che riflettono chiaramente le idee di Alberto su come usare lo strumento di visualizzazione dei dati per acquisire le storie raccontate dai dati.
&lt;/p&gt;
&lt;p&gt;Speriamo che seguirai queste sessioni per apprendere gli aspetti concettuali, progettuali e analitici della visualizzazione dei dati e per applicarli in modo da acquisire le storie raccontate dai dati.&lt;/p&gt;</value>
    <comment>0 = link</comment>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>Inizia la formazione</value>
  </data>
  <data name="Hero_Title" xml:space="preserve">
    <value>Visualizzazione e storie raccontate dai dati</value>
  </data>
  <data name="IntroToVisualization_Content" xml:space="preserve">
    <value>Sfrutta diversi tipi di grafica per comprendere i dati e comunicarli ai tuoi destinatari</value>
  </data>
  <data name="IntroToVisualization_Heading" xml:space="preserve">
    <value>Introduzione alla visualizzazione</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Corsi sul giornalismo basato sui dati | Microsoft Power BI</value>
  </data>
  <data name="TruthfulVisualizations_Content" xml:space="preserve">
    <value>Presenta le informazioni che vuoi condividere in modo efficace e accurato</value>
  </data>
  <data name="TruthfulVisualizations_Heading" xml:space="preserve">
    <value>Visualizzazioni accurate</value>
  </data>
  <data name="WatchNow_Cta" xml:space="preserve">
    <value>Guarda adesso</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>