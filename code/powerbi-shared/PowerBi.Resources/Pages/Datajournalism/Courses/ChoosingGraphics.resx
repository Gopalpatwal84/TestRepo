<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Content" xml:space="preserve">
    <value>&lt;p&gt;Additionally, you’ll be walked through a series of Microsoft Power BI demos. These include the following: &lt;ul&gt;&lt;li&gt;Learn how to use a bullet chart custom visualization to merge data together as an efficient way to show insights.&lt;/li&gt;
&lt;li&gt;Look at how to plot geographical data from an urban development dataset pulled from The World Bank to visualize a circle map, field map and create a map from R script. &lt;/li&gt;&lt;li&gt;Understand how to appropriately set axes by watching demos using climate change data from The World Bank along with a separate tutorial on MSN’s creation of voter preferences for the election cycle.&lt;/li&gt;
&lt;li&gt;Recognize when to use a combination of interactive data visualizations through a tutorial from Microsoft’s collaboration with Real Sociedad to determine which data elements to convey.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</value>
  </data>
  <data name="Article_Content_10" xml:space="preserve">
    <value>&lt;h2 id="creating-chart"&gt;Creating a Bullet Chart in Power BI&lt;/h2&gt;

&lt;p&gt;To follow the examples shown in this course, you will need the following
prerequisites:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A computer running Windows 7 or above&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download and install &lt;a href="{0}"&gt;Power BI
Desktop&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Register for a Power BI account
(&lt;a href="{1}"&gt;{2}&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;a.  Note you will need to register using a work email account;
    personal accounts (gmail, Hotmail, outlook.com, yahoo.com) are
    not supported&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Step 1: Load Sample Files&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open the file &lt;strong&gt;Brazil IDEB Scores_final.pbix&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This tutorial uses the &lt;strong&gt;Bullet Chart by SQLBI&lt;/strong&gt; custom visual,
download from the following link:&lt;/p&gt;
&lt;p&gt;&lt;a href="{3}"&gt;{3}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="{4}" alt="" title="" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Several measures were created to support this visualization.&lt;/p&gt;

&lt;p&gt;a.  Note: previous tutorial covered creating measures, so the steps
    are not repeated here.
    &lt;blockquote&gt;
  &lt;p&gt;Goal = 6.0&lt;/p&gt;

&lt;p&gt;National Average = CALCULATE(AVERAGE(IDEB2009[score]), ALL(IDEB2009))&lt;/p&gt;
&lt;/blockquote&gt;
    &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Step 2: Work with the Data&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Goal measures shows how you can add a static value to your
report without needing to use the Get Data experience. The National
Average measure shows how to calculate an aggregate overall of the data
rows, ignoring any filters that are applied. This allows the National
Average to be constant across all the categories in the dataset, and
letting the value update based whenever the data is refreshed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Press the &lt;strong&gt;Bullet Chart&lt;/strong&gt; icon in the &lt;strong&gt;Visualizations&lt;/strong&gt; pane.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the &lt;strong&gt;State&lt;/strong&gt; field from the &lt;strong&gt;List of Brazilian states&lt;/strong&gt; table
to &lt;strong&gt;Category&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;strong&gt;Score&lt;/strong&gt; to &lt;strong&gt;Value&lt;/strong&gt;, it appears as Average of score&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;strong&gt;National Average&lt;/strong&gt; to &lt;strong&gt;Comparison value&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;strong&gt;Goal&lt;/strong&gt; to &lt;strong&gt;Target value&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add a filter to the &lt;strong&gt;State&lt;/strong&gt; field to remove blank values&lt;/p&gt;

&lt;p&gt;a.  State is not (Blank)&lt;/p&gt;
&lt;p&gt;&lt;img src="{5}" alt="" title="" /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;With the bullet chart selected, select the &lt;strong&gt;format&lt;/strong&gt; pane&lt;/p&gt;

&lt;p&gt;a.  Set the colors as indicated below&lt;/p&gt;

&lt;p&gt;b.  Move the toggle switch for &lt;strong&gt;State 1&lt;/strong&gt; option to &lt;strong&gt;Off&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;c.  Repeat the previous step for all 4 remaining State fields&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="{6}" alt="" title="" /&gt;&lt;/p&gt;

&lt;p&gt;The resulting visual makes it easy to compare each state’s average IDEB
score to the national average, to each other, and to the national goal.&lt;/p&gt;

&lt;p&gt;&lt;img src="{7}" alt="" title="" /&gt;&lt;/p&gt;

&lt;h2 id="creating-data-maps"&gt;Creating Data Maps (Using the R Visual to Draw a Dotted Map)&lt;/h2&gt;

&lt;p&gt;To follow the examples shown in this course, you will need the following
prerequisites:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A computer running Windows 7 or above&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download and install &lt;a href="{8}"&gt;&lt;em&gt;Power BI
Desktop&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Register for a Power BI account
(&lt;a href="{1}"&gt;&lt;em&gt;{2}&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;a.  Note you will need to register using a work email account;
    personal accounts (gmail, Hotmail, outlook.com, yahoo.com) are
    not supported&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While you can draw out-of-the box maps in Power BI, you might be
interested in giving your result a personal touch, combining choropleth
and dotted maps, adding arched lines, or zooming in to a specific area.
R visuals give you a lot of freedom to experiment and customize visual
results. This tutorial explains how to get started with the &lt;strong&gt;R script
visual&lt;/strong&gt; to create a simple map.&lt;/p&gt;

&lt;h3&gt;Step 1: Install R and R Editor&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Make sure you have installed R on your machine, as well as an R
editor such as RStudio&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In your R editor install the two packages ‘maps’ and ‘mapproj’ by
running the command &lt;strong&gt;install.packages(maps)&lt;/strong&gt; and
&lt;strong&gt;install.packages(mapproj)&lt;/strong&gt;. This will install the packages on
your machine. You install packages once on your machine, but you
will need to activate the library from Power BI every time you use
a package.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Step 2: Create a New R Visual&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Now use the R icon in the &lt;strong&gt;visualizations&lt;/strong&gt; pane one the right of
your canvas to create a new R visual&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Drag &lt;strong&gt;lat&lt;/strong&gt; and &lt;strong&gt;lng&lt;/strong&gt; from the table &lt;strong&gt;World cities&lt;/strong&gt; on the
values field&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you have defined the dataset, you will see the R script
editor appear. The first lines of the script are automatically
populated to create a dataset from the fields you have selected. Now
you can start building the visual using (and/or editing) the
following code:&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;p&gt;Call the &lt;strong&gt;maps&lt;/strong&gt; and &lt;strong&gt;mapproj&lt;/strong&gt; libraries&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;library(maps)&lt;/p&gt;

&lt;p&gt;library(mapproj)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Draw a map of the world, leaving out the lines for borders&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;map('world', col=NA)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;draw a point for each city in the dataset. Pch defines the shape of
    the point, and with cex you can adjust the size of the points.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;points(mapproject(dataset\$lng, dataset\$lat), col="black", pch=19,
cex=.1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;This is just an example of one type of map using R, there are many other
forms to experiment with!&lt;/p&gt;

&lt;p&gt;&lt;img src="{9}" alt="" title="" /&gt;&lt;/p&gt;</value>
  </data>
  <data name="Download_Resources" xml:space="preserve">
    <value>Download all the resources needed for these tutorials</value>
  </data>
  <data name="Hero_Subtitle" xml:space="preserve">
    <value>Alberto Cairo will teach you how to appropriately choose the right graphics for your data. The human brain is more efficient at seeing patterns and trends when they are transformed into bar charts, line charts, data maps, scatter charts and other graphics. Alberto provides topics and questions to follow to help determine which graphic representation would be most appropriate for your data. You’ll be given an overview on what types of graphics enable accurate estimates and what types of visuals enable general estimates.</value>
  </data>
  <data name="Hero_Title" xml:space="preserve">
    <value>Choosing Graphics</value>
  </data>
  <data name="InThisArticle" xml:space="preserve">
    <value>In this article:</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Data Journalism - Choosing Graphics | Microsoft Power BI</value>
  </data>
  <data name="NextTopic" xml:space="preserve">
    <value>Next Topic: Design Narrative</value>
  </data>
  <data name="RightNav_Link1" xml:space="preserve">
    <value>Creating a Bullet Chart in Power BI</value>
  </data>
  <data name="RightNav_Link2" xml:space="preserve">
    <value>Creating Data Maps (Using the R Visual to Draw a Dotted Map)</value>
  </data>
</root>