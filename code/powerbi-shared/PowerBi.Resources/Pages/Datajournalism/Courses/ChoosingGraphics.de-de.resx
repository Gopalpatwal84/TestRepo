<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Content" xml:space="preserve">
    <value>&lt;p&gt;Sie werden zudem durch die Schritte mehrerer Microsoft Power BI-Demos geführt. Diese umfassen die folgenden Themen: &lt;ul&gt;&lt;li&gt;Erfahren Sie, wie Sie eine benutzerdefinierte Lineardiagramm-Visualisierung als effiziente Methode zum Zusammenführen von Daten nutzen, um die aus ihnen gewonnenen Erkenntnisse darzustellen.&lt;/li&gt;
&lt;li&gt;Sehen Sie sich an, wie geografische Daten aus einem Stadtentwicklungsdataset der Weltbank dargestellt werden, um ein Kreiskartogramm und Feldkartogramm zu visualisieren und ein Kartogramm aus einem R-Skript zu erstellen. &lt;/li&gt;&lt;li&gt;Erfahren Sie anhand von Demos mit Daten zur Klimaänderung von der Weltbank und anhand eines Tutorials zum Bestimmen von Wählertrends für den Wahlzyklus durch MSN, wie Sie Achsen korrekt festlegen.&lt;/li&gt;
&lt;li&gt;Ermitteln Sie mithilfe eines Tutorials, das aus der Zusammenarbeit von Microsoft mit Real Sociedad resultiert, wie Sie mithilfe einer Kombination von interaktiven Datenvisualisierungen bestimmen, welche Datenelemente dargestellt werden sollten.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</value>
  </data>
  <data name="Article_Content_10" xml:space="preserve">
    <value>&lt;h2 id="creating-chart"&gt;Erstellen eines Lineardiagramms in Power BI&lt;/h2&gt;

&lt;p&gt;Damit Sie die Beispiele in diesem Kurs ausführen können, müssen folgende Voraussetzungen erfüllt sein:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sie benötigen einen Computer mit Windows 7 oder höher.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sie müssen &lt;a href="{0}"&gt;Power BI Desktop&lt;/a&gt; herunterladen und installieren.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registrieren Sie sich für ein Power BI-Konto (&lt;a href="{1}"&gt;{2}&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;a. Sie müssen sich mit einem E-Mail-Geschäftskonto registrieren. Private Konten (Gmail, Hotmail, outlook.com, yahoo.com) werden nicht unterstützt.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Schritt 1: Laden der Beispieldateien&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Öffnen Sie die Datei &lt;strong&gt;Brazil IDEB Scores_final.pbix&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In diesem Tutorial wird die benutzerdefinierte Visualisierung &lt;strong&gt;Lineardiagramm von SQLBI&lt;/strong&gt; verwendet. Laden Sie sie über den folgenden Link herunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="{3}"&gt;{3}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="{4}" alt="" title="" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Für diese Visualisierung wurden mehrere Measures erstellt.&lt;/p&gt;

&lt;p&gt;a. Hinweis: Da das Erstellen von Measures in vorherigen Tutorials behandelt wurde, werden diese Schritte hier nicht wiederholt.
    &lt;blockquote&gt;
  &lt;p&gt;Ziel = 6,0&lt;/p&gt;

&lt;p&gt;Nationaler Durchschnitt = CALCULATE(AVERAGE(IDEB2009[score]), ALL(IDEB2009))&lt;/p&gt;
&lt;/blockquote&gt;
    &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;



&lt;h3&gt;Schritt 2: Arbeiten mit den Daten&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hinweis&lt;/strong&gt;: Das Measure „Ziel“ veranschaulicht, wie Sie einem Bericht einen statischen Wert hinzufügen können, ohne die Funktion „Daten abrufen“ verwenden zu müssen. Das Measure „Nationaler Durchschnitt“ veranschaulicht, wie Sie eine Gesamtsumme der Datenzeilen berechnen, ohne angewendete Filter zu berücksichtigen. Dies ermöglicht einen konstanten Wert von „Nationaler Durchschnitt“ für alle Kategorien im Dataset, der bei jeder Aktualisierung der Daten aktualisiert wird.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Klicken Sie im Bereich &lt;strong&gt;Visualisierungen&lt;/strong&gt; auf das Symbol &lt;strong&gt;Lineardiagramm&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fügen Sie das Feld &lt;strong&gt;Bundesstaat&lt;/strong&gt; aus der &lt;strong&gt;Liste der brasilianischen Bundesstaaten&lt;/strong&gt; zu &lt;strong&gt;Kategorie&lt;/strong&gt; hinzu.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fügen Sie &lt;strong&gt;Bewertung&lt;/strong&gt; zu &lt;strong&gt;Wert&lt;/strong&gt; hinzu. Die Bewertung wird als „Mittelwert von Bewertung“ angezeigt.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fügen Sie &lt;strong&gt;Nationaler Durchschnitt&lt;/strong&gt; zu &lt;strong&gt;Vergleichswert&lt;/strong&gt; hinzu.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fügen Sie &lt;strong&gt;Ziel&lt;/strong&gt; zu &lt;strong&gt;Zielwert&lt;/strong&gt; hinzu.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fügen Sie dem Feld &lt;strong&gt;Bundesstaat&lt;/strong&gt; einen Filter hinzu, um leere Werte zu entfernen.&lt;/p&gt;

&lt;p&gt;a. Bundesstaat is not (Blank)&lt;/p&gt;
&lt;p&gt;&lt;img src="{5}" alt="" title="" /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Wählen Sie das Lineardiagramm und dann den Bereich &lt;strong&gt;Format&lt;/strong&gt; aus.&lt;/p&gt;

&lt;p&gt;a. Legen Sie die Farben wie unten gezeigt fest.&lt;/p&gt;

&lt;p&gt;b. Wählen Sie für &lt;strong&gt;Bundesstaat1&lt;/strong&gt; die Option &lt;strong&gt;Aus&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;c. Wiederholen Sie den vorherigen Schritt für die restlichen vier Felder „Bundesstaat“.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="{6}" alt="" title="" /&gt;&lt;/p&gt;

&lt;p&gt;Mithilfe der resultierenden Visualisierung lassen sich die IDEB-Durchschnittsbewertungen jedes Bundesstaats untereinander, mit dem nationalen Durchschnitt und mit dem nationalen Zielwert einfach vergleichen.&lt;/p&gt;

&lt;p&gt;&lt;img src="{7}" alt="" title="" /&gt;&lt;/p&gt;

&lt;h2 id="creating-data-maps"&gt;Erstellen von Datenzuordnungen (Zeichnen eines Punktkartogramms mithilfe des visuellen R-Elements)&lt;/h2&gt;

&lt;p&gt;Damit Sie die Beispiele in diesem Kurs ausführen können, müssen folgende Voraussetzungen erfüllt sein:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sie benötigen einen Computer mit Windows 7 oder höher.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sie müssen &lt;a href="{8}"&gt;&lt;em&gt;Power BI Desktop&lt;/em&gt;&lt;/a&gt; herunterladen und installieren.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registrieren Sie sich für ein Power BI-Konto (&lt;a href="{1}"&gt;&lt;em&gt;{2}&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;a. Sie müssen sich mit einem E-Mail-Geschäftskonto registrieren. Private Konten (Gmail, Hotmail, outlook.com, yahoo.com) werden nicht unterstützt.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sie können zwar in Power BI vorkonfigurierte Kartogramme zeichnen, möchten jedoch eventuell das Ergebnis individuell anpassen, indem Sie Choroplethen und Punktkartogramme kombinieren, gebogene Linien hinzufügen oder einen bestimmten Bereich vergrößern. Visuelle R-Elemente bieten Ihnen viele Möglichkeiten zum Experimentieren und Anpassen von Visualisierungsergebnissen. In diesem Tutorial wird erläutert, wie Sie mit dem &lt;strong&gt;visuellen R-Skriptelement&lt;/strong&gt; ein einfaches Kartogramm erstellen.&lt;/p&gt;

&lt;h3&gt;Schritt 1: Installieren von R und eines R-Editors&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Stellen Sie sicher, dass Sie auf Ihrem Computer R und einen R-Editor, z. B. R Studio, installiert haben.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Installieren Sie im R-Editor die beiden Pakete „maps“ und „mapproj“, indem Sie die Befehle &lt;strong&gt;install.packages(maps)&lt;/strong&gt; und &lt;strong&gt;install.packages(mapproj)&lt;/strong&gt; ausführen. Dadurch werden die Pakete auf dem Computer installiert. Sie müssen die Pakete nur einmal installieren, jedoch bei jeder Verwendung eines Pakets die Bibliothek in Power BI aktivieren.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Schritt 2: Erstellen eines neuen visuellen R-Elements&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Verwenden Sie jetzt das R-Symbol im Bereich &lt;strong&gt;Visualisierungen&lt;/strong&gt; auf der rechten Seite des Zeichenbereichs, um ein neues visuelles R-Element zu erstellen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ziehen Sie &lt;strong&gt;lat&lt;/strong&gt; und &lt;strong&gt;lng&lt;/strong&gt; aus der Tabelle &lt;strong&gt;Weltstädte&lt;/strong&gt; in das Feld „Werte“.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sobald Sie das Dataset definiert haben, wird der R-Skript-Editor angezeigt. Die ersten Zeilen des Skripts werden automatisch ausgefüllt, um aus den ausgewählten Feldern ein Dataset zu erstellen. Verwenden (oder bearbeiten) Sie jetzt den folgenden Code, um die Visualisierung zu erstellen:&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;p&gt;Rufen Sie die Bibliotheken &lt;strong&gt;maps&lt;/strong&gt; und &lt;strong&gt;mapproj&lt;/strong&gt; auf.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;library(maps)&lt;/p&gt;

&lt;p&gt;library(mapproj)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zeichnen Sie eine Weltkarte, und lassen Sie die Linien für die Grenzen weg.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;map('world', col=NA)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zeichnen Sie einen Punkt für jede Stadt im Dataset. „pch“ definiert die Form des Punkts, und mit „cex“ können Sie die Größe der Punkte anpassen.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;points(mapproject(dataset\$lng, dataset\$lat), col="black", pch=19, cex=.1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;Dies ist nur ein Beispiel für viele Typen von Kartogrammen, die Sie mit R erstellen können. Es gibt viele weitere Formen, mit denen Sie experimentieren können!&lt;/p&gt;

&lt;p&gt;&lt;img src="{9}" alt="" title="" /&gt;&lt;/p&gt;</value>
  </data>
  <data name="Download_Resources" xml:space="preserve">
    <value>Alle für diese Tutorials erforderlichen Ressourcen herunterladen</value>
  </data>
  <data name="Hero_Subtitle" xml:space="preserve">
    <value>Alberto Cairo wird Ihnen zeigen, wie Sie am besten die richtigen Grafiken für Ihre Daten wählen. Das menschliche Gehirn kann Muster und Trends besser erkennen, wenn sie als Balkendiagramme, Liniendiagramme, Datenzuordnungen, Punktdiagramme und andere Arten von Grafiken dargestellt werden. Die Themen und Fragen von Alberto Cairo helfen Ihnen zu bestimmen, welche grafische Darstellung sich am besten für Ihre Daten eignet. Sie erhalten eine Übersicht über die Typen von Grafiken, die genaue Schätzungen ermöglichen, und über die Typen von Visualisierungen, die allgemeine Schätzungen ermöglichen.</value>
  </data>
  <data name="Hero_Title" xml:space="preserve">
    <value>Auswählen von Grafiken</value>
  </data>
  <data name="InThisArticle" xml:space="preserve">
    <value>Inhalt dieses Artikels:</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Datenjournalismus – Auswählen von Grafiken | Microsoft Power BI</value>
  </data>
  <data name="NextTopic" xml:space="preserve">
    <value>Nächstes Thema: Die Geschichte hinter dem Design</value>
  </data>
  <data name="RightNav_Link1" xml:space="preserve">
    <value>Erstellen eines Lineardiagramms in Power BI</value>
  </data>
  <data name="RightNav_Link2" xml:space="preserve">
    <value>Erstellen von Datenzuordnungen (Zeichnen eines Punktkartogramms mithilfe des visuellen R-Elements)</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>