<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Content" xml:space="preserve">
    <value>&lt;p&gt;이 과정에서는 Microsoft Power BI를 사용하여 진정한 시각화를 만드는 방법을 데모를 통해 살펴봅니다. 
&lt;ul&gt;&lt;li&gt;Real Sociedad에 대한 데이터 시각화를 만들어 데이터를 숨기거나 스토리를 변경하지 않고도 커뮤니티에서 축구 클럽의 성공에 어떻게 기여하는지를 살펴봅니다.&lt;/li&gt;
&lt;li&gt;단기 실업률에 대한 금융 서비스 자습서를 통해 진정한 추세선을 표시하도록 그래픽을 편집하는 방법을 살펴봅니다.&lt;/li&gt;
&lt;li&gt;The World Bank의 데이터 집합을 사용하여 간편한 계산으로 명확한 보기를 생성하여 데이터 시각화를 조정하는 방법을 알아봅니다.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</value>
  </data>
  <data name="Article_Content_10" xml:space="preserve">
    <value>&lt;h2 id="examples-graphics"&gt;오해를 일으키는 그래픽과 그렇지 않은 그래픽의 예&lt;/h2&gt;

&lt;p&gt;이 과정에 표시된 예를 따라 하려면 다음 필수 구성 요소가 필요합니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Windows 7 이상을 실행 중인 컴퓨터&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="{0}"&gt;Power BI Desktop&lt;/a&gt;을 설치 및 다운로드합니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Power BI 계정에 등록합니다(&lt;a href="{1}"&gt;{2}&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;a. 회사 메일 계정을 사용하여 등록해야 합니다. 개인 계정(gmail, Hotmail, outlook.com, yahoo.com)은 지원되지 않습니다.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;자습서: 데이터 왜곡 피하기&lt;/h3&gt;

&lt;p&gt;한 데이터 요소가 데이터 표현을 왜곡하는 경우가 있습니다. 이 자습서에서는 모든 데이터를 표시하면서도 왜곡을 피하는 방법을 보여줍니다.&lt;/p&gt;

&lt;h3&gt;1단계: 샘플 파일 로드&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Real Sociedad 예제 &lt;strong&gt;Real Sociedad example.pbix&lt;/strong&gt; 파일을 엽니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;필드 목록에서 &lt;strong&gt;도시 필터&lt;/strong&gt;를 클릭합니다.&lt;/p&gt;

&lt;p&gt;식은 다음과 같으며 San Sebastian을 별도의 범주에 지정합니다.&lt;/p&gt;

&lt;p&gt;도시 필터 = IF(data[도시]="DONOSTIA-SAN SEBASTIÁN","SAN SEBASTIÁN 포함","SAN SEBASTIÁN을 제외한 모두")&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;도시 필터&lt;/strong&gt; 시각적 개체를 클릭합니다. 도시 필터 계산된 열을 사용하는 것을 알 수 있습니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;서식&lt;/strong&gt; 창에서 &lt;strong&gt;선택 컨트롤&lt;/strong&gt;을 확장합니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;단일 선택&lt;/strong&gt;이 &lt;strong&gt;꺼짐&lt;/strong&gt;입니다. 이렇게 하면 사용자가 슬라이서에서 값을 유동적으로 선택할 수 있습니다.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="{3}" alt="" title="" /&gt;&lt;/p&gt;

&lt;h3&gt;2단계: 꺾은선형 차트 추세에서 차이 보기&lt;/h3&gt;

&lt;p&gt;꺾은선형 차트에 표시된 데이터가 과거 및 예측(예상) 값을 혼합한 것인 경우가 있습니다. 이러한 종류의 데이터를 표시할 경우 사용자에게 차이를 명확하게 보여 주는 것이 중요합니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Natural Rate of Unemployment.pbix&lt;/strong&gt; 파일을 엽니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;필드 목록에서 &lt;strong&gt;데이터 요소 형식&lt;/strong&gt;을 클릭합니다.&lt;/p&gt;

&lt;p&gt;식은 다음과 같으며 &lt;strong&gt;예측&lt;/strong&gt; 범주에 미래 값을, &lt;strong&gt;실제&lt;/strong&gt; 범주에 과거 값을 지정합니다.&lt;/p&gt;&lt;/li&gt;
  &lt;p&gt;데이터 요소 형식 = If(NOW() &gt;= Data[날짜],"실제", "예상")&lt;/p&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;날짜별 실업률(단기)&lt;/strong&gt; 꺾은선형 차트 시각적 개체를 클릭합니다. 범례에 &lt;strong&gt;데이터 요소 형식&lt;/strong&gt; 계산된 열을 사용하고 있음을 알 수 있습니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;서식&lt;/strong&gt; 창에서 &lt;strong&gt;데이터 색&lt;/strong&gt;을 확장합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src="{4}" alt="" title="" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;두 범주 값의 차이를 그리기 위해 서로 다른 색이 사용됩니다. 또한 범례가 사용되며 시각적 개체 왼쪽 위에 표시됩니다. 이러한 디자인 결정은 보는 사람이 단일 계열에서 두 데이터 범주 간의 차이에 주목하는 방향으로 이루어집니다.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="{5}" alt="" title="" /&gt;&lt;/p&gt;

&lt;h2 id="visualization-examples"&gt;시각화 예제(인덱스 차트 및 총비율)&lt;/h2&gt;

&lt;p&gt;이 과정에 표시된 예를 따라 하려면 다음 필수 구성 요소가 필요합니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Windows 7 이상을 실행 중인 컴퓨터&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="{6}"&gt;&lt;em&gt;Power BI Desktop&lt;/em&gt;&lt;/a&gt;을 설치 및 다운로드합니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Power BI 계정에 등록합니다(&lt;a href="{1}"&gt;&lt;em&gt;{2}&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;a. 회사 메일 계정을 사용하여 등록해야 합니다. 개인 계정(gmail, Hotmail, outlook.com, yahoo.com)은 지원되지 않습니다.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;1단계: 총비율&lt;/h3&gt;

&lt;p&gt;대부분의 경우 값은 상황에 맞지 않는다면 그다지 유용하지 않습니다. 어떤 경우에는 독자가 과거 경험으로부터 충분한 배경을 가지고 있다고 가정할 수 있습니다. 예를 들어 800만 명의 네덜란드 주민 특성을 설명하는 기사를 읽는 경우 네덜란드 신문을 읽는 대부분의 사람은 이것은 네덜란드 인구의 절반을 나타냄을 알 것입니다. 하지만 모든 독자가 동일한 배경 지식을 갖고 있다고 예상할 수 없는 경우 총비율을 보여주는 것이 유용할 수 있습니다. 이 예에서는 시작할 세계 도시 인구를 명확히 모르므로 인도에 300 또는 500만 명 도시민이 있다면 이것이 전 세계 도시 인구의 3.5% 만큼인지 알 수 없습니다. 아래 예에서는 어떠한 계산도 없이 값을 총비율로 변환하는 방법을 보여 줍니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;총비율로 표시할 시각적 개체를 선택합니다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;값 필드의 드롭다운 메뉴에서 &lt;strong&gt;빠른 계산&lt;/strong&gt;을 선택합니다.&lt;/p&gt;&lt;/li&gt;
&lt;p&gt;&lt;img src="{7}" alt="" title="" /&gt;&lt;/p&gt;
&lt;li&gt;&lt;strong&gt;빠른 계산&lt;/strong&gt; 편집기에서 &lt;strong&gt;값 표시 형식&lt;/strong&gt;을 &lt;strong&gt;총합계의 백분율&lt;/strong&gt;로 설정합니다. 상위 4개 국가에 대한 누적 비율을 찾으려면 필터 상자에 상위 4개 국가를 입력하고 시각적 개체를 꺾은선형 차트에서 누적 영역형 차트로 변경합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="{8}" alt="" title="" /&gt;&lt;/p&gt;
&lt;h3&gt;2단계: 인덱스 차트&lt;/h3&gt;
&lt;p&gt;컨텍스트를 만드는 다른 방법은 특정 타임프레임 동안 특정 값의 상대 성장을 비교하는 것입니다. 이 예에서는 인덱스 차트를 만드는 방법을 보여 줍니다. 여기서 특정 값이 정의된 기준 연도에 대해 얼마나 증가 또는 감소했는지를 계산합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;인덱스 값에 대해 &lt;strong&gt;새 측정값&lt;/strong&gt;을 만듭니다. 이 수식에서는 간단히 도시 인구 합을 구해서 기준선으로 사용할 연도인 2005년에 대한 도시 인구 합으로 나눕니다.&lt;/li&gt;
  &lt;p&gt;인덱스된&amp;#160;도시&amp;#160;인구=\ SUM&amp;#160;(&amp;#160;'도시&amp;#160;인구'[도시&amp;#160;인구]&amp;#160;)\ &amp;#160;&amp;#160;&amp;#160;&amp;#160;/&amp;#160;CALCULATE&amp;#160;(\ &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;SUM&amp;#160;(&amp;#160;'도시&amp;#160;인구'[도시&amp;#160;인구]&amp;#160;),\ &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;'도시&amp;#160;인구'[연도]&amp;#160;=&amp;#160;2005\ &amp;#160;&amp;#160;&amp;#160;&amp;#160;)\ &amp;#160;&amp;#160;*&amp;#160;100&lt;/p&gt;
&lt;li&gt;실제 값과 인덱스 측정값을 그려보면 후자에서 2005년 이후 가장 빠른 증가세를 보이는 지역을 명확하게 볼 수 있습니다. 첫 번째 그래프에서는 이러한 정보를 얻기가 훨씬 어렵습니다.&lt;img src="{9}" alt="" title="" /&gt;&lt;/li&gt;
&lt;/ol&gt;</value>
  </data>
  <data name="Download_Resources" xml:space="preserve">
    <value>이러한 자습서에 필요한 모든 리소스를 다운로드합니다.</value>
  </data>
  <data name="Hero_Subtitle" xml:space="preserve">
    <value>시각화는 오해를 일으키기 쉬우며 따라서 정보를 진실성 있게 제공해야 합니다. Alberto Cairo는 기준선을 설정하고 이중 배율 차트에 주의가 필요한 이유와 대상 그룹을 고려하는 것이 중요한 이유를 설명합니다.</value>
  </data>
  <data name="Hero_Title" xml:space="preserve">
    <value>진정한 시각화</value>
  </data>
  <data name="InThisArticle" xml:space="preserve">
    <value>이 문서의 내용</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>데이터 저널리즘 - 진정한 시각화 | Microsoft Power BI</value>
  </data>
  <data name="NextTopic" xml:space="preserve">
    <value>다음 항목: 그래픽 선택</value>
  </data>
  <data name="RightNav_Link1" xml:space="preserve">
    <value>오해를 일으키는 그래픽과 그렇지 않은 그래픽의 예</value>
  </data>
  <data name="RightNav_Link2" xml:space="preserve">
    <value>시각화 예제(인덱스 차트 및 총비율)</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>