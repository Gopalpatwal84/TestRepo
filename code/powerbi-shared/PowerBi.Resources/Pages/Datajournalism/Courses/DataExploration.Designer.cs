//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PowerBI.Resources.Pages.Datajournalism.Courses {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DataExploration {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DataExploration() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PowerBI.Resources.Pages.Datajournalism.Courses.DataExploration", typeof(DataExploration).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;The Data Exploration course will provide tutorials on the below using Microsoft Power BI: 
        ///&lt;ul&gt;&lt;li&gt;Learn how to create histograms and box and whisker plots to explore data distributions. Watch how to load in data, apply changes, adjust queries, merge multiple datasets, and leverage Custom Visualizations to augment your analysis.&lt;/li&gt;
        ///&lt;li&gt;Discover how to find a story within data and explore the data from different perspectives with a time series analysis demo. Learn to create a simple line chart, add a  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string About_Content {
            get {
                return ResourceManager.GetString("About_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h2 id=&quot;exploring-distributions&quot;&gt;Exploring distributions in Power BI&lt;/h2&gt;
        ///
        ///&lt;p&gt;For this tutorial, we will look at how we can analyze data for the
        ///Brazilian IDEB scores provided by Alberto.&lt;/p&gt;
        ///
        ///&lt;p&gt;What you will need:&lt;/p&gt;
        ///
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;Brazil Regions.xlsx&lt;/p&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;p&gt;IDEB2009.csv&lt;/p&gt;&lt;/li&gt;
        ///&lt;/ol&gt;
        ///
        ///&lt;h3&gt;Step 1: Loading the IDEB data&lt;/h3&gt;
        ///
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;Open &lt;em&gt;*Power BI Desktop *&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;p&gt;Use &lt;strong&gt;Get Data UI&lt;/strong&gt; to load from the &lt;strong&gt;IDEB2009.csv&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
        ///&lt;p&gt;Hom [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content1_4 {
            get {
                return ResourceManager.GetString("Article_Content1_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol&gt;
        ///&lt;li&gt;&lt;strong&gt;Enter the code below&lt;/strong&gt; in the editor (see explanation included),
        ///and press &lt;strong&gt;OK&lt;/strong&gt;.&lt;ol&gt;&lt;li&gt;&lt;p&gt; library will use it for that particular R session. You install
        ///    packages once on your machine but you need the library command every
        ///    time you use a package&lt;/p&gt;
        ///  &lt;p&gt;library(Ecdat)&lt;/p&gt;
        ///&lt;p&gt;library(fpp)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt; here we create a time series object out of the fourth column, using
        ///    a frequency of 12 months a year, starting from January 2002&lt;/p&gt;&lt;p&gt;input &amp;lt;- t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content10_2 {
            get {
                return ResourceManager.GetString("Article_Content10_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///
        ///&lt;p&gt;Notice that the column chart shows an overall pattern, but the line
        ///chart displays a clearer trend change. Experiment with switching the
        ///charts from column to line to see how each chart presents data. Also,
        ///notice that the underlying measures change how the trend appears and
        ///what story the data tells.&lt;/p&gt;
        ///
        ///&lt;p&gt;Likewise, as you analyze data, it’s important to review it from multiple
        ///angles. In the below visualization, the trends in &lt;strong&gt;CO2 emissions
        ///( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content11_4 {
            get {
                return ResourceManager.GetString("Article_Content11_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h3&gt;Step 3: Data Calculations using DAX Expressions&lt;/h3&gt;
        ///
        ///&lt;p&gt;Power BI provides default data calculations that address many scenarios.
        ///However, there are cases when you need more control. Power BI provides a
        ///rich language for expressions called Data Access Expressions (DAX). A
        ///good starting point is to review our &lt;a href=&quot;{0}&quot;&gt;Quick Start: Learn DAX
        ///Basics&lt;/a&gt;
        ///topic.&lt;/p&gt;
        ///
        ///&lt;p&gt;In this tutorial, we’ll cover two useful expressions that help with data
        ///storytelling specifically.&lt;/p&gt;
        ///
        ///&lt;h4&gt;Creating a cus [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content12_4 {
            get {
                return ResourceManager.GetString("Article_Content12_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///&lt;h3&gt;Step 4: Selecting appropriate visual interactions&lt;/h3&gt;
        ///&lt;p&gt;By default, Power BI filters and cross highlights data for you. Be sure
        ///to review the default interactions and optimize them to ensure they’re
        ///showing the data in the best way.&lt;/p&gt;
        ///&lt;p&gt;Notice that by default the map cross highlights the stacked column
        ///chart.&lt;/p&gt;
        ///&lt;ol&gt;
        ///&lt;li&gt;Select &lt;strong&gt;France&lt;/strong&gt; on the map, and see that the result is as follow.&lt;/li&gt;
        ///&lt;p&gt;&lt;img src=&quot;{1}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content13_5 {
            get {
                return ResourceManager.GetString("Article_Content13_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Note: The data challenge related to percent of total is covered in
        ///detail in &lt;strong&gt;Part 2 - Supplement on percent of total&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;h2&gt;Part 2 - Supplement on percent of total&lt;/h2&gt;
        ///&lt;p&gt;In our course material, we presented the following chart and mentioned
        ///that you need to be careful when using the data and the aggregation. The
        ///reason is the values used to create the chart are represented as a “% of
        ///total”. So, this chart is effectively aggregating over a percentage.
        ///This can cause a typical  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content14_2 {
            get {
                return ResourceManager.GetString("Article_Content14_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Another common case is the use of averages. When you compute an average,
        ///you need to be careful how you use and present it. If you take an
        ///average of an average, you’ve produced a grossly misleading output. For
        ///example, if we have two countries, one producing 100 kWh of electricity
        ///a year, with 80% coming from burning coal, and a second country
        ///producing 10 kWh of electricity, with 50% coming from burning coal. If
        ///you average the percentages, you would report 65% of electric production
        ///as coming f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content15 {
            get {
                return ResourceManager.GetString("Article_Content15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///
        ///&lt;p&gt;Figure 3 Updated chart based on synthetic measures. Assumptions are
        ///clearly stated to inform the reader. Measure names indicate the data is
        ///constructed.&lt;/p&gt;
        ///
        ///&lt;p&gt;If you compare chart in Figure 3 to the chart in Figure 1, you will see
        ///a large difference in the trend for each series. This last chart is
        ///representative, and when the correctness conditions of a single year and
        ///a single country are satisfied, it reports the same data as the top
        ///chart.&lt;/p&gt;
        ///
        ///&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content16_1 {
            get {
                return ResourceManager.GetString("Article_Content16_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h3&gt;Step 4: Adding high quality state information to the report&lt;/h3&gt;
        ///&lt;p&gt;Power BI has an intrinsic understanding of geographic information. The
        ///ability to place data correctly on the map is significantly impacted by
        ///the specificity of the data. In the case of the IEDB scores, the state
        ///information is ambiguous when placed on a map. This section shows how to
        ///load higher quality data and add it to the IEDB scores data we already
        ///have.&lt;/p&gt;
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;Use the &lt;strong&gt;Get Data-&amp;gt; from web&lt;/strong&gt; opti [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content2_8 {
            get {
                return ResourceManager.GetString("Article_Content2_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;blockquote&gt;
        ///  &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///&lt;/blockquote&gt;
        ///
        ///&lt;p&gt;b.  In the &lt;strong&gt;Add Custom Column&lt;/strong&gt; dialog, enter the expression:&lt;/p&gt;
        ///
        ///&lt;pre&gt;**\[state name\] &amp;amp; “, Brasil”**
        ///&lt;/pre&gt;
        ///
        ///&lt;p&gt;&lt;img src=&quot;{1}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///
        ///&lt;p&gt;c.  Press &lt;strong&gt;OK&lt;/strong&gt;&lt;/p&gt;
        ///
        ///&lt;h3&gt;Step 5: Loading Region metadata&lt;/h3&gt;
        ///
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;In the &lt;strong&gt;Query Editor&lt;/strong&gt; windows select &lt;strong&gt;New Source -&amp;gt; Excel&lt;/strong&gt; on
        ///the Home Ribbon&lt;/p&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;p&gt;Select the &lt;strong&gt;Excel file [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content4_7 {
            get {
                return ResourceManager.GetString("Article_Content4_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///&lt;h3&gt;Step 6: Build an interactive map using the new data&lt;/h3&gt;
        ///&lt;p&gt;With the new columns, we can create a map to make a more compelling
        ///analysis.&lt;/p&gt;
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;In the &lt;strong&gt;Visualizations&lt;/strong&gt; pane, select the &lt;strong&gt;Filled Map&lt;/strong&gt; visual to
        ///insert it on the canvas&lt;/p&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;p&gt;Bind the following data to the visual&lt;/p&gt;
        ///&lt;p&gt;a.  Add the &lt;strong&gt;state name brazil&lt;/strong&gt; column to &lt;strong&gt;Location&lt;/strong&gt;&lt;/p&gt;
        ///&lt;p&gt;b.  Add the &lt;strong&gt;score&lt;/strong&gt;  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content6_6 {
            get {
                return ResourceManager.GetString("Article_Content6_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h3&gt;Step 8: Box plots with Power BI&lt;/h3&gt;
        ///&lt;p&gt;For this section, please download the Box and Whisker (Jan Pieter)
        ///custom visual from:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;{0}&quot;&gt;{0}&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;
        ///&lt;li&gt;Follow the UI to download the visuals as described earlier in the
        ///tutorial&lt;/li&gt;&lt;p&gt;&lt;img src=&quot;{1}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;&lt;li&gt;&lt;p&gt;Import the visual using the &lt;strong&gt;…&lt;/strong&gt; button in the &lt;strong&gt;Visualizations&lt;/strong&gt; pane as shown before        &lt;/p&gt;
        ///    &lt;/li&gt;
        ///    &lt;li&gt;&lt;p&gt;Select the &lt;strong&gt;Histogram&lt;/strong&gt; visual then convert it t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content7_4 {
            get {
                return ResourceManager.GetString("Article_Content7_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                &lt;p&gt;Your final chart will look like the following:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///        &lt;h2 id=&quot;time-series&quot;&gt;Time series with Spanish employment data&lt;/h2&gt;
        ///        &lt;p&gt;
        ///            One of the examples in Alberto’s book &lt;em&gt;The Truthful Art&lt;/em&gt; is explaining
        ///            how leveraging statistical methods for analysis can prove to be very
        ///            useful in understanding patterns and trends that are difficult to
        ///            discover with the eye. The following tutorial co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content8_2 {
            get {
                return ResourceManager.GetString("Article_Content8_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;img src=&quot;{0}&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;
        ///&lt;h3&gt;Step 2: Using R to calculate seasonality, trend, and random noise&lt;/h3&gt;
        ///&lt;ol&gt;
        ///&lt;li&gt;&lt;p&gt;Make sure you have installed R on your machine, as well as an R
        ///editor such as RStudio&lt;/p&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;p&gt;In your R editor install the two packages ‘Ecdat’ and ‘fpp’ by
        ///running the command &lt;strong&gt;install.packages(Ecdat)&lt;/strong&gt; and
        ///&lt;strong&gt;install.packages(fpp)&lt;/strong&gt;. This will install the packages on
        ///your device. You install packages once on your machine, but you will
        ///n [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Content9_2 {
            get {
                return ResourceManager.GetString("Article_Content9_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h2&gt;Rich exploration&lt;/h2&gt;&lt;p&gt;In this tutorial, we will cover some of the principles shown in the
        ///demo. It will not present step-by-step instructions, since many of the
        ///steps are covered by previous tutorials.&lt;/p&gt;
        ///&lt;p&gt;To complete this tutorial, please open the file &lt;strong&gt;“Where does your
        ///electricity come from final.pbix”&lt;/strong&gt;&lt;/p&gt;
        ///&lt;p&gt;If you want to process the data yourself, you can download the latest
        ///data from the World Banks’s website:&lt;/p&gt;
        ///&lt;ol&gt;&lt;li&gt;&lt;p&gt;Open a web browser to:&lt;/p&gt;
        ///&lt;p&gt;&lt;a href=&quot;{0}&quot;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Article_Continue_Content10_1 {
            get {
                return ResourceManager.GetString("Article_Continue_Content10_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download all the resources needed for these tutorials.
        /// </summary>
        public static string Download_Resources {
            get {
                return ResourceManager.GetString("Download_Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the second Data Visualization and Storytelling course Alberto Cairo will discuss how you can use visualization to extract meaning from your data. Alberto explains how to condense data and when to leverage graphic forms like a box and whisker plot. We will also explore time series analysis to focus on uncovering overall trends and seasonal patterns. Additionally, Alberto will help share how to connect different graphics to give meaning to your data..
        /// </summary>
        public static string Hero_Subtitle {
            get {
                return ResourceManager.GetString("Hero_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Exploration.
        /// </summary>
        public static string Hero_Title {
            get {
                return ResourceManager.GetString("Hero_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this article:.
        /// </summary>
        public static string InThisArticle {
            get {
                return ResourceManager.GetString("InThisArticle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string META_DESCRIPTION {
            get {
                return ResourceManager.GetString("META_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string META_KEYWORDS {
            get {
                return ResourceManager.GetString("META_KEYWORDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Journalism - Data Exploration | Microsoft Power BI.
        /// </summary>
        public static string META_PAGETITLE {
            get {
                return ResourceManager.GetString("META_PAGETITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next Topic: Truthful Visualizations.
        /// </summary>
        public static string NextTopic {
            get {
                return ResourceManager.GetString("NextTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exploring Distributions in Power BI.
        /// </summary>
        public static string RightNav_Link1 {
            get {
                return ResourceManager.GetString("RightNav_Link1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Series with Spanish Employment Data.
        /// </summary>
        public static string RightNav_Link2 {
            get {
                return ResourceManager.GetString("RightNav_Link2", resourceCulture);
            }
        }
    }
}
