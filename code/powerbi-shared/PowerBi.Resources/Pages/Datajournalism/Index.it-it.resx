<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataVisualization_Content" xml:space="preserve">
    <value>Il tuo obiettivo è creare storie di dati accattivanti e profondamente coinvolgenti, che catturino l'attenzione dei destinatari e che aiutino a comprendere meglio le informazioni? Power BI ti offre accesso a potenti strumenti di analisi che permettono di costruire storie di dati interessanti, semplificando per i giornalisti la creazione e la condivisione di visualizzazioni dati estremamente interattive.</value>
  </data>
  <data name="DataVisualization_Heading" xml:space="preserve">
    <value>Usa la visualizzazione dei dati per ottimizzare le storie</value>
  </data>
  <data name="Distribute_Content" xml:space="preserve">
    <value>Power BI può aiutarti a presentare la storia dei dati ai tuoi destinatari. Puoi condividere la tua storia in pochi semplici clic usando la funzionalità Pubblica sul Web di Microsoft Power BI per incorporare la visualizzazione dei dati nel tuo blog o sito Web. Ottieni visualizzazioni illimitate su qualsiasi dispositivo. Modifica, aggiorna e controlla facilmente i contenuti che pubblichi.</value>
  </data>
  <data name="Distribute_Heading" xml:space="preserve">
    <value>Distribuisci visualizzazioni interattive con Power BI</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;Con Microsoft Power BI, il giornalismo basato sui dati va oltre l'esplorazione dei dati, permettendo a reporter, blogger, broadcaster e analisti di dedicare il proprio tempo alla presentazione di storie. Lo strumento di visualizzazione dei dati ti aiuta a enfatizzare i messaggi e a suscitare l'interesse dei destinatari attraverso storie di dati coinvolgenti e accurate.&lt;/p&gt;
&lt;p&gt;Di recente Power BI ha lavorato insieme al rinomato esperto in visualizzazione Alberto Cairo per condividere la metodologia alla base della grafica e come può supportare le storie raccontate dai dati sviluppando una serie di cinque corsi intitolata &lt;strong&gt;Visualizzazione e storie raccontate dai dati&lt;/strong&gt;. Osserva una panoramica dei corsi guardando il video sopra e accedi alle lezioni facendo clic sul collegamento di seguito.&lt;/p&gt;</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>Visita i corsi</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Visualizzazione e storie raccontate dai dati</value>
  </data>
  <data name="King5_Content" xml:space="preserve">
    <value>KING 5 News ha scelto Microsoft Power BI per la sua straordinaria capacità di integrare visualizzazioni dati in onda, su desktop e dispositivi mobili. Microsoft ha anche dimostrato il proprio impegno nell'ambito del giornalismo basato sui dati fornendo la tecnologia necessaria per offrire approfondimenti sulle storie dei dati a spettatori e lettori.</value>
  </data>
  <data name="King5_Heading" xml:space="preserve">
    <value>Scopri cosa può fare Power BI per il giornalismo basato sui dati</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Scopri di più</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>giornalismo basato sui dati, visualizzazione dei dati, storie raccontate dai dati, strumenti per il giornalismo basato sui dati, Tableau, Tableau Public, Google Data Studio, Amazon QuickSight, Qlik, QlikView, Pubblica sul Web</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Giornalismo basato sui dati | Microsoft Power BI</value>
  </data>
  <data name="Modal_Cta" xml:space="preserve">
    <value>Visualizza ora</value>
  </data>
  <data name="Modal_Heading" xml:space="preserve">
    <value>Immetti il tuo indirizzo di posta elettronica per visualizzare le esercitazioni</value>
  </data>
  <data name="PublishToWeb_Content" xml:space="preserve">
    <value>Le storie più interessanti sono spesso interattive, visivamente accattivanti e ricche di dati avanzati. La funzionalità Pubblica sul Web di Power BI semplifica la trasformazione di visualizzazioni dati interattive in storie senza scrivere neanche una riga di codice.</value>
  </data>
  <data name="PublishToWeb_Cta" xml:space="preserve">
    <value>Visualizza altro</value>
  </data>
  <data name="PublishToWeb_Heading" xml:space="preserve">
    <value>Scopri la funzionalità Pubblica sul Web di Power BI per presentare le storie dei dati</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Altre informazioni</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>Altri contenuti</value>
  </data>
  <data name="TakeAdvantage" xml:space="preserve">
    <value>Prova Power BI</value>
  </data>
  <data name="UseItFree_Cta" xml:space="preserve">
    <value>Usa gratuitamente</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>