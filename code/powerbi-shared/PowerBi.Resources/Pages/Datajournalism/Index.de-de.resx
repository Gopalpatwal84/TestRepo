<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataVisualization_Content" xml:space="preserve">
    <value>Haben Sie sich zum Ziel gesetzt, Daten in Form von spannenden Geschichten zu präsentieren, mit denen Sie die Aufmerksamkeit Ihrer Zielgruppe gewinnen und ihr den Zugang zu Informationen erleichtern? Mit Power BI stehen Ihnen leistungsfähige Analysetools zur Verfügung, die Sie dabei unterstützen, Daten in interessante Geschichten zu verpacken. Journalisten erhalten die nötige Unterstützung, um ganz einfach Datenvisualisierungen mit hoher Interaktivität zu erstellen und mit anderen zu teilen.</value>
  </data>
  <data name="DataVisualization_Heading" xml:space="preserve">
    <value>Mit Datenvisualisierungen zu spannenderen Geschichten</value>
  </data>
  <data name="Distribute_Content" xml:space="preserve">
    <value>Power BI hilft Ihnen, Ihre Geschichte zu erzählen. Mit der Funktion zur Webveröffentlichung von Microsoft Power BI können Sie Ihre Datenvisualisierung mit wenigen Mausklicks in Ihrem Blog oder auf Ihrer Website einbetten und Ihre Geschichte mit anderen teilen. Erreichen Sie auf jedem Gerät unbegrenzt viele Aufrufe. Veröffentlichte Inhalte lassen sich ganz einfach bearbeiten, aktualisieren und verwalten.</value>
  </data>
  <data name="Distribute_Heading" xml:space="preserve">
    <value>Verbreitung interaktiver Visualisierungen mit Power BI</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;Mit Microsoft Power BI reicht Datenjournalismus weit über die Untersuchung von Daten hinaus. Reporter, Blogger, Moderatoren und Analysten bleibt mehr Zeit für die Präsentation ihrer Geschichten. Mit dem Tool für die Datenvisualisierung können Sie durch interessante und mit vielen Daten belegte Geschichten Aussagen bekräftigen und das Interesse von Zielgruppen gewinnen.&lt;/p&gt;
&lt;p&gt;Das Team von Power BI konnte den renommierten Visualisierungsexperten Alberto Cairo dafür gewinnen, die Methodik für Grafiken und ihre Nutzung für das Data-Storytelling zu beschreiben. Hierzu wurden fünf Kurse zu &lt;strong&gt;Datenvisualisierung und -Storytelling&lt;/strong&gt; entwickelt. Sehen Sie sich das Video oben an, um sich einen Überblick über die Kurse zu verschaffen. Über den folgenden Link gelangen Sie zu den Kursen.&lt;/p&gt;</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>Kurse aufrufen</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Datenvisualisierung und -Storytelling</value>
  </data>
  <data name="King5_Content" xml:space="preserve">
    <value>KING 5 News hat sich wegen der einzigartigen Möglichkeiten, Datenvisualisierungen für Livesendungen, Desktopcomputer und Mobilgeräte aufzubereiten, für Microsoft Power BI entschieden. Microsoft hat außerdem sein Engagement für den Datenjournalismus unter Beweis gestellt, indem es die nötige Technologie bietet, um Lesern und Zuschauern einen besseren Einblick in Geschichten hinter den Daten zu geben.</value>
  </data>
  <data name="King5_Heading" xml:space="preserve">
    <value>Wie Datenjournalisten Power BI nutzen</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>Datenjournalismus, Datenvisualisierung, Daten-Storytelling, Tools für Datenjournalismus, Tableau, Tableau Public, Google Data Studio, Amazon QuickSight, Qlik, QlikView, Webveröffentlichung</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Datenjournalismus | Microsoft Power BI</value>
  </data>
  <data name="Modal_Cta" xml:space="preserve">
    <value>Jetzt ansehen</value>
  </data>
  <data name="Modal_Heading" xml:space="preserve">
    <value>Geben Sie Ihre E-Mail-Adresse ein, um sich die Tutorials anzusehen</value>
  </data>
  <data name="PublishToWeb_Content" xml:space="preserve">
    <value>Die besten Geschichten sind häufig interaktiv, visuell ansprechend und mit Daten unterfüttert. Mithilfe der Power BI-Webveröffentlichung können Medienexperten einfach und Programmierkenntnisse interaktive Datenvisualisierungen in Geschichten einbinden.</value>
  </data>
  <data name="PublishToWeb_Cta" xml:space="preserve">
    <value>Mehr erfahren</value>
  </data>
  <data name="PublishToWeb_Heading" xml:space="preserve">
    <value>Weitere Informationen zur Power BI-Webveröffentlichung für Storytelling</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>Mehr anzeigen</value>
  </data>
  <data name="TakeAdvantage" xml:space="preserve">
    <value>Nutzen Sie Power BI</value>
  </data>
  <data name="UseItFree_Cta" xml:space="preserve">
    <value>Kostenlos nutzen</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>