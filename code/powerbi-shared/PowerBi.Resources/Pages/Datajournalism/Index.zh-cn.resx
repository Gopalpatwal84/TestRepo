<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataVisualization_Content" xml:space="preserve">
    <value>希望创建引人入胜的数据故事，生动形象地吸引受众的注意力，帮助他人更好地理解信息？ Power BI 提供强大的分析工具，帮助构建有趣的数据故事，同时使记者能够轻松生成和共享高度交互的数据可视化。</value>
  </data>
  <data name="DataVisualization_Heading" xml:space="preserve">
    <value>使用数据可视化来强化故事内容</value>
  </data>
  <data name="Distribute_Content" xml:space="preserve">
    <value>Power BI 可帮助向受众讲述故事。通过从 Microsoft Power BI 发布到 Web 的功能，只需点击几下，便可分享故事，将数据可视化嵌入博客或网站。可在任何设备上无限次查看。可轻松进行编辑、更新和刷新，掌控发布的内容。</value>
  </data>
  <data name="Distribute_Heading" xml:space="preserve">
    <value>使用 Power BI 分发交互式可视化</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;使用 Microsoft Power BI，数据新闻超越了数据探索，让记者、博主、广播员和分析师将时间用在故事分享上。数据可视化工具通过数据丰富的沉浸式故事，帮助突出重要信息并吸引受众。&lt;/p&gt;
&lt;p&gt;Power BI 近期与著名数据可视化专家 Alberto Cairo 达成合作，通过开发 5 个&lt;strong&gt;数据可视化和故事分享&lt;/strong&gt;课程，分享创建图形的方法以及这些图形如何支持数据故事分享。观看上面的视频可大致了解课程，点击下面的链接可访问课程。&lt;/p&gt;</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>访问课程</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>数据可视化和故事分享</value>
  </data>
  <data name="King5_Content" xml:space="preserve">
    <value>KING 5 News 选择 Microsoft Power BI 的原因是，它在广播、桌面和移动设备上集成数据可视化的独特能力。Microsoft 还表示，它致力于为数据记者提供这样的技术，即让观众和读者能够获得更多关于数据故事的见解。</value>
  </data>
  <data name="King5_Heading" xml:space="preserve">
    <value>查看数据记者如何使用 Power BI</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>了解详细信息</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>数据新闻, 数据可视化, 数据故事分享, 数据新闻工具, Tableau, Tableau Public, Google Data Studio, Amazon QuickSight, Qlik, QlikView, 发布到 Web</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>数据新闻 | Microsoft Power BI</value>
  </data>
  <data name="Modal_Cta" xml:space="preserve">
    <value>立即查看</value>
  </data>
  <data name="Modal_Heading" xml:space="preserve">
    <value>输入电子邮件查看教程</value>
  </data>
  <data name="PublishToWeb_Content" xml:space="preserve">
    <value>最好的故事通常是交互式的，带给人视觉上的享受，且包含丰富的数据。通过 Power BI 发布到 Web 的功能，媒体可以轻松将交互式数据可视化编写到故事中，而不需要编写任何代码。</value>
  </data>
  <data name="PublishToWeb_Cta" xml:space="preserve">
    <value>查看详细内容</value>
  </data>
  <data name="PublishToWeb_Heading" xml:space="preserve">
    <value>详细了解如何通过 Power BI 发布到 Web 的功能进行故事分享</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>阅读详细内容</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>了解详细内容</value>
  </data>
  <data name="TakeAdvantage" xml:space="preserve">
    <value>充分利用 Power BI</value>
  </data>
  <data name="UseItFree_Cta" xml:space="preserve">
    <value>免费使用</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>162</value>
  </data>
</root>