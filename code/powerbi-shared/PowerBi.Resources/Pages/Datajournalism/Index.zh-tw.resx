<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataVisualization_Content" xml:space="preserve">
    <value>您想建立吸引人的資料故事，牢牢抓住觀眾的注意力，並協助觀眾更透徹地了解資訊嗎？ Power BI 提供功能強大分析工具的存取權，協助您建構有趣的資料故事，並讓新聞工作者能輕鬆地建立及共用互動式資料視覺效果。</value>
  </data>
  <data name="DataVisualization_Heading" xml:space="preserve">
    <value>使用資料視覺效果加強您的故事</value>
  </data>
  <data name="Distribute_Content" xml:space="preserve">
    <value>Power BI 可協助您將故事傳達給觀眾。只要按幾下 Microsoft Power BI「發行至 Web」將您的資料視覺效果內嵌至部落格或網站中，就能分享故事。不限數量的使用者可透過任何裝置存取您的資料故事。輕鬆地編輯、更新、重新整理，並控制要發行的內容。</value>
  </data>
  <data name="Distribute_Heading" xml:space="preserve">
    <value>使用 Power BI 散發互動式視覺效果</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;有了 Microsoft Power BI，資料新聞學大幅超越資料探索，讓播報員、部落客、實況主及分析師能分享故事。資料視覺效果工具協助您透過沉浸式且資料豐富的故事來強調訊息並吸引觀眾。&lt;/p&gt;
&lt;p&gt;Power BI 最近與知名視覺效果專家 Alberto Cairo 合作，開發五個&lt;strong&gt;資料視覺效果和故事分享&lt;/strong&gt;課程，進而分享圖形背後的方法及其如何支援資料故事分享。請觀看影片上述影片來了解課程概觀，並按一下下面的連結來存取這些課程。&lt;/p&gt;</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>瀏覽課程</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>資料視覺效果和故事分享</value>
  </data>
  <data name="King5_Content" xml:space="preserve">
    <value>KING 5 News 選擇 Microsoft Power BI，便是看中其得以整合廣播、桌面及行動裝置資料視覺效果的獨特能力。Microsoft 也展現其致力於將技術提供給資料新聞工作者，讓其能給予檢視者及讀者更多關於資料故事的深入解析。</value>
  </data>
  <data name="King5_Heading" xml:space="preserve">
    <value>查看資料新聞工作者如何使用 Power BI</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>深入了解</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>資料新聞學, 資料視覺效果, 資料故事分享, 資料新聞學工具, Tableau, Tableau Public, Google Data Studio, Amazon QuickSight, Qlik, QlikView, 發行至 Web</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>資料新聞學 | Microsoft Power BI</value>
  </data>
  <data name="Modal_Cta" xml:space="preserve">
    <value>立即檢視</value>
  </data>
  <data name="Modal_Heading" xml:space="preserve">
    <value>輸入您的電子郵件以檢視教學課程</value>
  </data>
  <data name="PublishToWeb_Content" xml:space="preserve">
    <value>最佳的故事通常具互動性、賞心悅目且富含資料。Power BI 的 [發行至 Web] 功能可讓媒體將互動式資料視覺效果編織成故事，而不需要撰寫任何程式碼。</value>
  </data>
  <data name="PublishToWeb_Cta" xml:space="preserve">
    <value>檢視更多</value>
  </data>
  <data name="PublishToWeb_Heading" xml:space="preserve">
    <value>深入了解 Power BI 的 [發行至 Web] 功能以分享故事</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>深入了解</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>查看更多</value>
  </data>
  <data name="TakeAdvantage" xml:space="preserve">
    <value>利用 Power BI</value>
  </data>
  <data name="UseItFree_Cta" xml:space="preserve">
    <value>免費使用</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>159</value>
  </data>
</root>