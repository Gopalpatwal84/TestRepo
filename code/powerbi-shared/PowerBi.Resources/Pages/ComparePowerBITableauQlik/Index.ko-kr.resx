<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectData_Content" xml:space="preserve">
    <value>Power BI를 사용하여 다양한 데이터 원본에 연결합니다. 데이터가 Marketo 또는 Salesforce와 같은 클라우드 서비스나 온-프레미스에 위치한 경우 Power BI를 사용하면 라이브 보고서 및 대시보드를 통해 해당 데이터를 연결하고 정리하며 모델화하고 시각화할 수 있습니다. 몇 분 안에 컨텐츠 팩을 시작하고 대시보드를 사전에 구축하며 인기 서비스에 대해 보고합니다.</value>
  </data>
  <data name="ConnectData_Cta1" xml:space="preserve">
    <value>연결할 수 있는 컨텐츠 서비스 목록 보기</value>
  </data>
  <data name="ConnectData_Cta2" xml:space="preserve">
    <value>iOS, Windows 및 Android 모바일 앱</value>
  </data>
  <data name="ConnectData_Heading" xml:space="preserve">
    <value>모든 데이터, 어떻게든, 어디서나</value>
  </data>
  <data name="Content1" xml:space="preserve">
    <value>코드를 작성하거나 통계 guru가 되어 조치 가능한 정보를 가져올 필요는 없습니다. Power BI Q&amp;A를 사용하여 질문하면 대시보드에 고정할 수 있는 차트 및 그래프의 형태로 엄청나게 빠른 답변을 가져올 수 있습니다. Cortana에서는 Cortana 패널을 나가지 않고 Power BI를 사용하여 질문합니다.</value>
  </data>
  <data name="Customers_Content" xml:space="preserve">
    <value>2016년 3월 현재 세계적으로 5백만 명의 구독자와 200,000개의 조직이 Power BI를 사용하고 있습니다.</value>
  </data>
  <data name="Customers_Cta" xml:space="preserve">
    <value>고객 의견 읽기</value>
  </data>
  <data name="CustomVisuals_Content" xml:space="preserve">
    <value>Power BI는 “상자 안의 기능”으로 제한되지 않습니다. 사용자 지정 시각적 개체와 함께 Power BI를 사용하면 상상할 수 있는 모든 시각화를 사용할 수 있습니다.</value>
  </data>
  <data name="CustomVisuals_Cta" xml:space="preserve">
    <value>사용자 지정 시각적 개체 갤러리 방문</value>
  </data>
  <data name="CustomVisuals_Heading" xml:space="preserve">
    <value>사용자 지정 시각화</value>
  </data>
  <data name="Download_Content" xml:space="preserve">
    <value>다른 대화형 데이터 시각화 도구와 다릅니다.</value>
  </data>
  <data name="Download_Cta" xml:space="preserve">
    <value>Power BI Desktop 다운로드</value>
  </data>
  <data name="Download_Heading" xml:space="preserve">
    <value>Power BI Desktop은 무료입니다.</value>
  </data>
  <data name="EmbedReports_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI가 클라우드 기반이기 때문에 언제든지 사용자를 추가하거나 제거할 수 있습니다. 또한 99.9%의 가동률을 제공합니다. 사용자 수에 따라 해당 특정 데이터가 필요한 최적화된 가격으로 확장 가능하고 매우 안전한 신뢰할 수 있는 엔터프라이즈급 IT를 사용할 수 있습니다. 클라우드 및 온-프레미스 모두에서 다양한 데이터 원본에 대한 기본 제공 연결을 통해 추출-변환-부하 인프라에 드는 IT 투자 비용을 줄일 수도 있습니다. 그리고 Power BI가 Microsoft 엔터프라이즈 제품의 일부로 설계되었기 때문에 Azure 및 Office 365 투자로부터 더 많은 것을 얻고 그룹 및 낮은 수준의 보안을 사용하여 액세스를 쉽게 관리할 수 있습니다.
&lt;/p&gt;&lt;p&gt;
추가적으로 Power BI는 오픈되고 확대될 수 있는 기능입니다. 개발자 친화적이며 응용 프로그램 및 포털에 포함될 수 있습니다.&lt;/p&gt;</value>
  </data>
  <data name="EmbedReports_Cta" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="EmbedReports_Heading" xml:space="preserve">
    <value>엔터프라이즈급</value>
  </data>
  <data name="Heading1" xml:space="preserve">
    <value>데이터를 새로운 방식으로 활용</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>Tableau, Qlik 등 기존의 BI 도구는 상황에 대한 백미러 인텔리전스를 제공하는 분석가를 위한 솔루션입니다. 반면 Power BI는 데이터 전문가 뿐만 아니라 모든 사용자가 상황에 대한 실시간 정보를 사용할 수 있도록 권한을 부여하는 비즈니스 분석 서비스입니다. Power BI를 사용하면 몇 분 안에 개인 설정된 대시보드를 만들어서 비즈니스에 가장 중요한 질문에 대한 답변을 찾을 수 있습니다.</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>무료로 시작</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>최신 데이터 시각화 도구를 찾고 있나요?</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI는 사용자가 중요한 내용에 집중할 수 있도록 회사의 데이터를 수집 및 구성이 가능한 풍부한 시각적 요소로 변환해 줍니다. 정보를 꾸준히 얻고 추세를 파악하여 비즈니스를 확장해 보세요.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI를 사용하는 이유 | Microsoft Power BI</value>
  </data>
  <data name="MicrosoftIntegrations_Content" xml:space="preserve">
    <value>처음부터 Power BI는 Excel, Office 365, Azure 및 SQL Server와 함께 쉽게 사용할 수 있도록 설계되었습니다. Excel 보고서를 Power BI에 업로드하고 항목을 Power BI 대시보드에 고정하거나 데이터 원본으로 사용합니다. 사람들이 익숙한 도구에서 새롭게 조치 가능한 정보를 찾도록 하여 현재 투자를 활용합니다.</value>
  </data>
  <data name="MicrosoftIntegrations_Cta" xml:space="preserve">
    <value>Excel용 Microsoft Power BI 다운로드</value>
  </data>
  <data name="MicrosoftIntegrations_Heading" xml:space="preserve">
    <value>다른 Microsoft 제품 및 서비스 쉽게 사용</value>
  </data>
  <data name="PCmag_Content" xml:space="preserve">
    <value>PC Magazine에서는 “2016년 최고의 셀프 서비스 비즈니스 인텔리전스(BI) 도구” 기사에서 Power BI에 편집자 추천상을 수여했습니다.</value>
  </data>
  <data name="PCmag_Cta" xml:space="preserve">
    <value>기사 읽기</value>
  </data>
  <data name="QandA_Content" xml:space="preserve">
    <value>코드를 작성하거나 통계 guru가 되어 조치 가능한 정보를 가져올 필요는 없습니다. Power BI Q&amp;A를 사용하여 질문하면 대시보드에 고정할 수 있는 차트 및 그래프의 형태로 엄청나게 빠른 답변을 가져올 수 있습니다. Windows 10과 긴밀한 통합을 통해 Cortana는 BI만큼 쉽게 데스크톱에서 바로 검색할 수 있습니다.</value>
  </data>
  <data name="QandA_Heading" xml:space="preserve">
    <value>데이터를 새로운 방식으로 활용</value>
  </data>
  <data name="QuickInsights_Content" xml:space="preserve">
    <value>신속한 정보 활용을 사용하여 몇 초 안에 숨겨진 정보에 대한 자동 검색 데이터 집합: 특정 대시보드 타일 및 해당 관련 데이터에서 상관 관계, 이상값, 계절성, 추세의 변경 지점 및 주요 요인입니다.</value>
  </data>
  <data name="QuickInsights_Heading" xml:space="preserve">
    <value>숨겨진 정보에 대한 데이터 집합 자동으로 검색</value>
  </data>
  <data name="Realtime_Content" xml:space="preserve">
    <value>기록 분석에 제한되는 Tableau 또는 Qlik와 같은 기존의 BI 도구를 사용하지 않고 Power BI를 사용하면 실시간 정보에 액세스하여 추세를 빨리 파악할 수 있습니다. 그러면 잠재적인 문제를 차단하고 성능을 빠르게 향상시킬 수 있습니다. R 스크립트와 시각적 개체, Microsoft Azure Machine Learning 및 Azure Stream Analytics를 통한 고급 분석 통합으로 데이터를 사용하여 비즈니스의 결과를 예측합니다. 예측 인텔리전스는 경로를 수정하고 올바른 경로를 유지하는 주도적인 조치를 취하여 목표를 달성하는 데 도움이 됩니다.</value>
  </data>
  <data name="Realtime_Heading" xml:space="preserve">
    <value>실시간으로 추세 파악 및 정보를 통해 더 나은 결정 선택</value>
  </data>
  <data name="Recommendations_Heading" xml:space="preserve">
    <value>우리쪽 설명만 듣지 마세요.</value>
  </data>
  <data name="Sanddance_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI로 데이터를 더 빨리 효율적으로 이해하여 시각화하고 분석할 수 있도록 멈추지 않는 혁신을 가져옵니다. 활기찬 사용자 커뮤니티에서 끊임없이 의견을 보내주어 Power BI의 주별 및 월별 릴리스를 가이드하는 데 도움을 주고 있습니다. 따라서 분석 도구도 점점 더 개선될 것입니다. Power BI는 클라우드 기반이기 때문에 자동으로 업데이트됩니다. 소프트웨어 업그레이드를 걱정할 필요가 없습니다. &lt;/p&gt;
&lt;p&gt;그리고 Power BI는 사용자가 SandDance(Microsoft Research 데이터 시각화 프로젝트)와 같은 사용자 지정 시각화를 만들고 공유하도록 열린 전략을 제공합니다.&lt;/p&gt;</value>
  </data>
  <data name="Sanddance_Cta1" xml:space="preserve">
    <value>동작 중인 SandDance 보기</value>
  </data>
  <data name="Sanddance_Cta2" xml:space="preserve">
    <value>SandDance에 대한 Power BI 블로그 읽기</value>
  </data>
  <data name="Sanddance_Heading" xml:space="preserve">
    <value>클라우드 속도의 사용자 구동 혁신</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>192</value>
  </data>
</root>