<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectData_Content" xml:space="preserve">
    <value>使用 Power BI 连接到多个数据源。无论你的数据是位于 Marketo 或 Salesforce 等云服务中还是位于本地，你都可以使用 Power BI 的实时报表和仪表板对其进行连接、清理、塑造、建模和可视化。使用热门服务的内容包、预建仪表板和报表，在几分钟内入门。</value>
  </data>
  <data name="ConnectData_Cta1" xml:space="preserve">
    <value>查看你可以连接的内容服务的清单</value>
  </data>
  <data name="ConnectData_Cta2" xml:space="preserve">
    <value>查看 iOS、Windows 和 Android 移动应用</value>
  </data>
  <data name="ConnectData_Heading" xml:space="preserve">
    <value>任何数据、任何方式、任何位置</value>
  </data>
  <data name="Content1" xml:space="preserve">
    <value>无需编写代码，也无需精通统计，即可获取可操作见解。通过 Power BI 问答，你可以提出问题并很快获得答案，答案以可固定到仪表板的图表和图形的形式呈现。Cortana 将使用 Power BI 解答你的问题，无需离开 Cortana 面板。</value>
  </data>
  <data name="Customers_Content" xml:space="preserve">
    <value>截至 2016 年三月，全球有 5 百万订阅者和 200,000 个组织使用 Power BI。</value>
  </data>
  <data name="Customers_Cta" xml:space="preserve">
    <value>阅读客户案例</value>
  </data>
  <data name="CustomVisuals_Content" xml:space="preserve">
    <value>Power BI 不仅局限于“现成内容”。Power BI 还提供自定义视觉对象，可实现你能想象的任何可视化效果。</value>
  </data>
  <data name="CustomVisuals_Cta" xml:space="preserve">
    <value>访问自定义视觉对象库</value>
  </data>
  <data name="CustomVisuals_Heading" xml:space="preserve">
    <value>自定义可视化效果</value>
  </data>
  <data name="Download_Content" xml:space="preserve">
    <value>不同于其他交互式数据可视化工具。</value>
  </data>
  <data name="Download_Cta" xml:space="preserve">
    <value>下载 Power BI Desktop</value>
  </data>
  <data name="Download_Heading" xml:space="preserve">
    <value>Power BI Desktop 是免费的</value>
  </data>
  <data name="EmbedReports_Content" xml:space="preserve">
    <value>&lt;p&gt;因为 Power BI 是基于云的，所以你可以随时添加或删除用户。另外，它提供 99.9% 的正常运行时间。花费基于用户数量及其特定数据需求的最优成本，即可获得可缩放、高度安全且可靠的企业级 IT。还可从内部连接到云中和本地的多种数据源，缩减对于提取-转换-加载基础结构的 IT 投资。并且，由于 Power BI 被设计为 Microsoft 企业服务的一个集成部分，所以你可以从 Azure 和 Office 365 投资获得更多回报，还可以使用组和行级安全性来轻松管理访问权限。
&lt;/p&gt;&lt;p&gt;
此外，Power BI 是开放并可扩展的。它对开发人员友好，并可嵌入到应用程序或门户中。&lt;/p&gt;</value>
  </data>
  <data name="EmbedReports_Cta" xml:space="preserve">
    <value>了解详细信息</value>
  </data>
  <data name="EmbedReports_Heading" xml:space="preserve">
    <value>企业适用</value>
  </data>
  <data name="Gartner_Content" xml:space="preserve">
    <value>Gartner 已经连续第九年将 Microsoft 定位为商业智能和分析平台魔力象限中的领导者。* 今年，Microsoft 被放在“远景完善程度”领导者象限的最远处。</value>
  </data>
  <data name="Gartner_Cta" xml:space="preserve">
    <value>阅读报告</value>
  </data>
  <data name="Heading1" xml:space="preserve">
    <value>以全新的方式体验你的数据</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>传统 BI 工具（例如 Tableau、Qlik 等）是适合分析师使用的解决方案，他们针对已发生事件提供后视镜式的见解。相比之下，Power BI 是一项商业分析服务，任何人（而不仅是数据专家）都可以使用它获取关于正在发生的事件的实时见解。通过 Power BI，从开始创建个性化仪表板到找到对你的业务最重要的问题的答案只需五分钟。</value>
  </data>
  <data name="Hero_Cta" xml:space="preserve">
    <value>免费开始使用</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>正在寻找新式数据可视化工具？</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 可将你公司的数据转换为丰富的视觉对象，你可以对这些视觉对象进行收集和组织，从而将注意力集中于重要的内容。始终获悉最新信息、掌握即时趋势并进一步推动你的业务。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI Gateway | Microsoft Power BI</value>
  </data>
  <data name="MicrosoftIntegrations_Content" xml:space="preserve">
    <value>从一开始，Power BI 就被设计为能够轻松使用 Excel、Office 365、Azure 和 SQL Server。将 Excel 报表上传到 Power BI，并将项目固定到 Power BI 仪表板中，或使用它们作为数据源。利用你当前的投资，同时授权你的员工使用熟悉的工具查找新的可操作见解。</value>
  </data>
  <data name="MicrosoftIntegrations_Cta" xml:space="preserve">
    <value>下载 Power BI publisher for Excel</value>
  </data>
  <data name="MicrosoftIntegrations_Heading" xml:space="preserve">
    <value>易于搭配其他 Microsoft 产品和服务使用</value>
  </data>
  <data name="PCmag_Content" xml:space="preserve">
    <value>PC Magazine 在“The Best Self-Service Business Intelligence (BI) Tools of 2016”（《2016 年最佳自助式商业智能 (BI) 工具》）一文中将其“编辑精选”奖授予了 Power BI。</value>
  </data>
  <data name="PCmag_Cta" xml:space="preserve">
    <value>阅读文章</value>
  </data>
  <data name="QandA_Content" xml:space="preserve">
    <value>无需编写代码，也无需精通统计，即可获取可操作见解。通过 Power BI 问答，你可以提出问题并很快获得答案，答案以可固定到仪表板的图表和图形的形式呈现。通过与 Windows 10 的深度集成，Cortana 可让你像在桌面上直接搜索一样轻松地实现 BI。</value>
  </data>
  <data name="QandA_Heading" xml:space="preserve">
    <value>以全新的方式体验你的数据</value>
  </data>
  <data name="QuickInsights_Content" xml:space="preserve">
    <value>使用“快速见解”，在数秒内自动搜索数据集以发现潜在见解：特定仪表板磁贴及其相关数据中的相关性、离群值、季节性、趋势中的变化点以及主要因素。</value>
  </data>
  <data name="QuickInsights_Heading" xml:space="preserve">
    <value>自动搜索数据集以发现潜在见解</value>
  </data>
  <data name="Realtime_Content" xml:space="preserve">
    <value>使用传统 BI 工具（例如 Tableau 或 Tableau）时你会受限于历史性分析，而通过 Power BI，你可以访问实时数据以便及早识别趋势。这样，你可以防止潜在问题的发生并尽早提高性能。通过 R 脚本和视觉对象、Microsoft Azure 机器学习和 Azure 流分析的高级分析集成，使用你的数据预测企业效益。预测智能可帮助你采取主动措施以确定实现目标的正确道路，并沿着这条道路不断前进。</value>
  </data>
  <data name="Realtime_Heading" xml:space="preserve">
    <value>实时发现趋势并做出更好、更明智的决策</value>
  </data>
  <data name="Recommendations_Heading" xml:space="preserve">
    <value>请勿片面理解</value>
  </data>
  <data name="Sanddance_Content" xml:space="preserve">
    <value>&lt;p&gt;通过 Power BI，你可以实现不间断的创新，帮助对数据进行更快、更高效、更透彻的可视化和分析。我们活跃的用户社区可提供持续反馈，有助于指导 Power BI 的每周或每月发布，因此这个分析工具将会越来越好用。因为 Power BI 是基于云的，所以你将自动获得更新，无需担心软件升级。&lt;/p&gt;
&lt;p&gt;同时 Power BI 还为用户提供创建和共享自定义可视化效果的开放策略，例如 SandDance（一个 Microsoft Research 数据可视化项目）。&lt;/p&gt;</value>
  </data>
  <data name="Sanddance_Cta1" xml:space="preserve">
    <value>观看 SandDance 操作</value>
  </data>
  <data name="Sanddance_Cta2" xml:space="preserve">
    <value>阅读有关 SandDance 的 Power BI 博客</value>
  </data>
  <data name="Sanddance_Heading" xml:space="preserve">
    <value>云速度的用户驱动创新</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>108</value>
  </data>
</root>