<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommunityGallery_Content" xml:space="preserve">
    <value>See how others are leveraging Power BI</value>
  </data>
  <data name="CommunityGallery_Heading" xml:space="preserve">
    <value>Power BI Community Gallery</value>
  </data>
  <data name="Craft_Copy" xml:space="preserve">
    <value>Use any data, from hundreds of sources to easily create compelling, interactive visualizations. Customize your visuals to fit your brand and your audience.</value>
  </data>
  <data name="Craft_Heading" xml:space="preserve">
    <value>Craft your data story</value>
  </data>
  <data name="CustomVisualsGallery_Content" xml:space="preserve">
    <value>Browse BI Community for inspiration</value>
  </data>
  <data name="CustomVisualsGallery_Heading" xml:space="preserve">
    <value>Custom Visuals Gallery</value>
  </data>
  <data name="GetInspired_Heading" xml:space="preserve">
    <value>Get Inspired</value>
  </data>
  <data name="GetStarted_Cta" xml:space="preserve">
    <value>Get started free</value>
  </data>
  <data name="GetStarted_Heading" xml:space="preserve">
    <value>Getting Started with Power BI</value>
  </data>
  <data name="GuidedLearning_Content" xml:space="preserve">
    <value>Skill up on Power BI so you can start transforming your company’s data into rich insights and visuals.</value>
  </data>
  <data name="GuidedLearning_Heading" xml:space="preserve">
    <value>Guided Learning</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>You have an idea. You have the data. Power BI brings it to life. Power BI publish to web lets you create data stories with amazing interactive visualizations and publish them to your blog or website in minutes.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Bring your story to life with data</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI publish to web | Microsoft Power BI</value>
  </data>
  <data name="Own_Copy" xml:space="preserve">
    <value>Edit, update, or refresh visualizations easily. Choose when and what you share—and what you don’t. Un-share them in a single click whenever you want.</value>
  </data>
  <data name="Own_Heading" xml:space="preserve">
    <value>Own your story and your data</value>
  </data>
  <data name="ProductDocumentation_Content" xml:space="preserve">
    <value>View in-depth articles for all of Power BI’s tools and features from getting started to advanced techniques.</value>
  </data>
  <data name="ProductDocumentation_Heading" xml:space="preserve">
    <value>Power BI Product Documentation</value>
  </data>
  <data name="PublishtowebDocumentation_Content" xml:space="preserve">
    <value>Step by step guide on how to get started, use and manage Power BI publish to web, including tips and tricks.</value>
  </data>
  <data name="PublishtowebDocumentation_Heading" xml:space="preserve">
    <value>Power BI publish to web Documentation</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read more</value>
  </data>
  <data name="Stories" xml:space="preserve">
    <value>Stories</value>
  </data>
  <data name="Subnav_Business" xml:space="preserve">
    <value>Business</value>
  </data>
  <data name="Subnav_Media" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="Subnav_Nonprofits" xml:space="preserve">
    <value>Nonprofits</value>
  </data>
  <data name="Subnav_PublicSector" xml:space="preserve">
    <value>Public Sector</value>
  </data>
  <data name="Tell_Copy" xml:space="preserve">
    <value>Publish your interactive data story with a few clicks. Easily embed it in your public blog or website. Reach unlimited views on any device.</value>
  </data>
  <data name="Tell_Heading" xml:space="preserve">
    <value>Tell your story online</value>
  </data>
  <data name="Testimonials" xml:space="preserve">
    <value>Testimonials</value>
  </data>
  <data name="TipsAndTricks_Content" xml:space="preserve">
    <value>Check out Power BI Tips and Tricks that will save you time and effort.</value>
  </data>
  <data name="TipsAndTricks_Heading" xml:space="preserve">
    <value>Tips and Tricks</value>
  </data>
  <data name="UserGroups_Content" xml:space="preserve">
    <value>Share, learn and grow your skills</value>
  </data>
  <data name="UserGroups_Heading" xml:space="preserve">
    <value>Power BI User Groups</value>
  </data>
  <data name="ViewNow" xml:space="preserve">
    <value>View now</value>
  </data>
  <data name="WatchNow" xml:space="preserve">
    <value>Watch now</value>
  </data>
  <data name="Webinars_Content" xml:space="preserve">
    <value>View our on-demand Power BI webinars.</value>
  </data>
  <data name="Webinars_Heading" xml:space="preserve">
    <value>Webinars</value>
  </data>
  <data name="YouTubeVideos_Content" xml:space="preserve">
    <value>Power up with Microsoft Power BI YouTube Video Channel.</value>
  </data>
  <data name="YouTubeVideos_Heading" xml:space="preserve">
    <value>YouTube Videos</value>
  </data>
</root>