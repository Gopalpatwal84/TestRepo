<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CustomerSupport_Bigger_Content" xml:space="preserve">
    <value>How does your work contribute to your customers' success? Monitor your performance and how it impacts your team's bottom line. Talk your customers' language by understanding their problems and see your brand loyalty soar.</value>
  </data>
  <data name="CustomerSupport_Bigger_Heading" xml:space="preserve">
    <value>See the bigger picture</value>
  </data>
  <data name="CustomerSupport_FiveStar_Content" xml:space="preserve">
    <value>Want to help your team hit their customer satisfaction goals? As a customer support manager, you need to ensure your team is helping customers succeed every time. In a single view, understand how waiting in a queue affects call ratings, who's resolving tickets most efficiently, and which channel has the highest incident volume.</value>
  </data>
  <data name="CustomerSupport_FiveStar_Heading" xml:space="preserve">
    <value>Give the five-star treatment</value>
  </data>
  <data name="CustomerSupport_Heading" xml:space="preserve">
    <value>Customer Support</value>
  </data>
  <data name="CustomerSupport_Win_Content" xml:space="preserve">
    <value>How successful are your customers with your product? Want to track the impact of your customer support on brand loyalty? As part of the customer support team, your day is full of win-win opportunities. By successfully resolving support tickets, you and your team are strengthening customer loyalty and helping customers get more done. With Power BI you can analyze your closed cases, track every customer engagement, and continue to deliver world-class support.</value>
  </data>
  <data name="CustomerSupport_Win_Heading" xml:space="preserve">
    <value>Win together</value>
  </data>
  <data name="DecisionMaker_Explore_Content" xml:space="preserve">
    <value>Wish there was an easier, more interactive way to find data insights? Power BI lets you use simple drag-and-drop gestures to find trends, correlations, and outliers in your data. You can pose questions about your data using everyday language and get answers in the form of stunning interactive reports and charts.</value>
  </data>
  <data name="DecisionMaker_Explore_Heading" xml:space="preserve">
    <value>Explore and analyze</value>
  </data>
  <data name="DecisionMaker_Heading" xml:space="preserve">
    <value>Decision Maker</value>
  </data>
  <data name="DecisionMaker_Monitor_Content" xml:space="preserve">
    <value>Do you want a holistic view of all your important information in a single place? Is your data spread across various sources like Excel spreadsheets, web analytics, databases, and CRM systems? With Power BI, you can bring all your data together and create personalized dashboards in seconds. Make the right data-driven decisions with your key business metrics.</value>
  </data>
  <data name="DecisionMaker_Monitor_Heading" xml:space="preserve">
    <value>Monitor the pulse of your business</value>
  </data>
  <data name="DecisionMaker_Team_Content" xml:space="preserve">
    <value>Does your team find it hard to collaborate, especially when everyone is working with different versions of the same data? In just a few clicks, Power BI lets you share your dashboards—so you and your team can get a single view of the business and make decisions based on shared data insights.</value>
  </data>
  <data name="DecisionMaker_Team_Heading" xml:space="preserve">
    <value>Keep your team on the same page</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>See how we're already making waves in many industries and helping users of any skill level take advantage of their data.  Power BI lets you reduce risks, increase rewards and unlock insights to drive more informed decisions no matter what industry you're in.  Get the metrics you need instantly and keep everyone on the same page.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Whatever your role, Power BI is the right teammate</value>
  </data>
  <data name="Marketing_Heading" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="Marketing_Market_Content" xml:space="preserve">
    <value>Are you overwhelmed by data from all the different tools you use? Is it time-consuming to access and analyze all that information together? Make it simple: with Power BI, you can easily monitor and analyze your marketing campaigns and efficiently allocate your resources to the right channels, all in one place</value>
  </data>
  <data name="Marketing_Market_Heading" xml:space="preserve">
    <value>Market smarter</value>
  </data>
  <data name="Marketing_Monitor_Content" xml:space="preserve">
    <value>Is your campaign effective? How are your marketing tactics performing? Dive deep and analyze performance by specific products and market segments to find the actions that lead to retention, upsell, or cross-sell opportunities.</value>
  </data>
  <data name="Marketing_Monitor_Heading" xml:space="preserve">
    <value>Monitor your campaign</value>
  </data>
  <data name="Marketing_Talk_Content" xml:space="preserve">
    <value>Want to target your most profitable customers? How can you easily position your campaigns to produce the greatest ROI? Segment your customers based on geographic buying behavior, demographic filters, customer lifetime values, activations, and churn.</value>
  </data>
  <data name="Marketing_Talk_Heading" xml:space="preserve">
    <value>Talk to the right customers</value>
  </data>
  <data name="Menu_CustomerSupport_CTA" xml:space="preserve">
    <value>Customer Support</value>
  </data>
  <data name="Menu_DecisionMaker_CTA" xml:space="preserve">
    <value>Decision Maker</value>
  </data>
  <data name="Menu_Marketing_CTA" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="Menu_Sales_CTA" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Solutions | Microsoft Power BI</value>
  </data>
  <data name="Sales_Crush_Content" xml:space="preserve">
    <value>Want to forecast sales better, hit that record sales target, and increase profitability per sale? If you use Microsoft Dynamics CRM or Salesforce.com, Power BI extends and enhances these services with instant insight into your pipeline. Track key metrics like conversion rate, pipeline value, and win rate by getting a holistic picture of your customer pipeline from initial contact to successful closure.</value>
  </data>
  <data name="Sales_Crush_Heading" xml:space="preserve">
    <value>Crush your quota</value>
  </data>
  <data name="Sales_Heading" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Sales_Management_Content" xml:space="preserve">
    <value>Want at-a-glance insights into your team's key metrics and the ability to quickly drill down for more details? Power BI creates these dashboards in seconds, bringing your company's sales pipeline under a magnifying glass. Explore the stages in your sales process — what can you learn from the successful deals your team has closed?</value>
  </data>
  <data name="Sales_Management_Heading" xml:space="preserve">
    <value>Sales management</value>
  </data>
  <data name="Sales_Representative_Content" xml:space="preserve">
    <value>What can you learn from your biggest sales? Do you outperform certain opportunities, but leave others open? Understand how your previous deals performed so you can execute on future deals more efficiently.</value>
  </data>
  <data name="Sales_Representative_Heading" xml:space="preserve">
    <value>Sales representative</value>
  </data>
</root>