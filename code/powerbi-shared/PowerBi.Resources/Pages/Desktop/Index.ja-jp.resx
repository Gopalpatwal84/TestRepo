<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedDownloadOptions" xml:space="preserve">
    <value>高度なダウンロード オプション</value>
  </data>
  <data name="Complete_Copy" xml:space="preserve">
    <value>Power BI Desktop は、分析を構築するための洗練されたエンド ツー エンド ソリューションです。Power BI Desktop には、Power BI を通して得られたデータの洞察をすばやく接続し、整理し、視覚化し、共有するためのすべての機能が備わっています。</value>
  </data>
  <data name="Complete_Heading" xml:space="preserve">
    <value>分析の完全なライフ サイクル</value>
  </data>
  <data name="DesignOnce_Copy" xml:space="preserve">
    <value>必要に応じていつでもどこでも意志決定者にデータを送り届けなければなりません。Power BI なら、美しい対話型レポートの公開と共有が簡単になります。</value>
  </data>
  <data name="DesignOnce_Heading" xml:space="preserve">
    <value>一度設計すれば、どこでも表示可能</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Power BI Desktop は、直感的なレポート作成によって、ビジュアル分析を簡単にします。柔軟で流動性の高いキャンバスに、ドラッグ アンド ドロップでぴったりお望みの位置にコンテンツを配置できます。リンクされた対話型の視覚化を 1 つの統合されたビューで探索することにより、迅速にパターンを発見できます。</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Power BI Desktop で魅力的なレポートと視覚化を作成</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="LearnMore_Heading" xml:space="preserve">
    <value>使い始めるための情報を確認して、今すぐ Power BI Desktop をダウンロードしてください。</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI は、会社のデータを豊かな視覚情報に変換して収集と整理を助け、重要な問題に取り組めるようにします。最新情報を取得し、動向の発生をつかみ、ビジネスをさらに推進します。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI Desktop | Microsoft Power BI</value>
  </data>
  <data name="Transform_Copy" xml:space="preserve">
    <value>分析のためのデータの準備には時間がかかることがあります。これをもっとシンプルにしなければなりません。Power BI Desktop のデータ シェイプとモデル化機能をお試しください。あなたの忙しい 1 日をもっと楽にしましょう。</value>
  </data>
  <data name="Transform_Heading" xml:space="preserve">
    <value>データの変換とクリーニング</value>
  </data>
  <data name="WhatsNew" xml:space="preserve">
    <value>新着情報</value>
  </data>
  <data name="WhatsNew_Copy" xml:space="preserve">
    <value>常に更新プログラムを配信して、お客様に最適なエクスペリエンスを提供するよう努めています。Power BI Desktop の最新バージョンの新機能をご覧ください。</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>3</value>
  </data>
</root>