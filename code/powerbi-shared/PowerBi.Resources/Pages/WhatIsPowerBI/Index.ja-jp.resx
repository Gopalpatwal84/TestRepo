<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Content1" xml:space="preserve">
    <value>&lt;strong&gt;Power BI は、データを分析し、洞察を共有するビジネス分析ツールのスイートです。&lt;/strong&gt; Power BI ダッシュボードを使うと、どのデバイスからでも、リアルタイムで更新される重要な指標を 1 か所で確認できるので、ビジネス ユーザーはビジネスの全体像をすぐに把握することができます。1 クリックで、ダッシュボードの背後にあるデータを探索できます。直感的に操作できるツールなので、簡単に答えを見つけられます。ダッシュボードの作成は簡単です。人気のあるビジネス アプリケーションとの &lt;a href="{0}"&gt; 50 を超える連携&lt;/a&gt;があり、すぐに実際の活用を始められるようにエキスパートによって作成済みのダッシュボードが用意されています。また、&lt;strong&gt;&lt;a href="{1}"&gt;Power BI Mobile&lt;/a&gt; アプリでどこからでもデータとレポートにアクセスできます。データに変更があれば、アプリにも自動的に更新が反映されます。&lt;/strong&gt;</value>
    <comment>{0} is a url to /#connect-wrapper
{1} is a url to /mobile</comment>
  </data>
  <data name="Content2" xml:space="preserve">
    <value>組織にレポートや分析を配信するデータ アナリストは、Power BI を利用して、レポート作成作業を生産的、かつクリエイティブに行うことができます。&lt;strong&gt;&lt;a href="{0}"&gt;Power BI Desktop&lt;/a&gt; は豊富な機能を備えたデータ マッシュアップとレポート作成ツールです。&lt;/strong&gt; データ品質と書式設定に関する問題を理解し、自動的に修正するために役立つビジュアル ツールを使用して、さまざまなデータベース、ファイル、Web サービスからのデータを組み合わせることができます。20 を超える組み込みのビジュアルと、活気のあるコミュニティから入手できるカスタム視覚エフェクトを活用して、メッセージを効果的に伝える魅力的なレポートを作成できます。&lt;strong&gt;&lt;a href="{1}"&gt;Power BI サービス&lt;/a&gt;では、組織にレポートを安全に公開でき、全員が最新の情報を得られるように自動データ更新をセットアップできます。&lt;/strong&gt;</value>
    <comment>{0} is a url to /desktop
{1} is a url to /features</comment>
  </data>
  <data name="Content3" xml:space="preserve">
    <value>Power BI なら、クラウドにあるかオンプレミスで管理されているかに関係なく、組織のすべてのデータを 1 つにまとめることができます。&lt;a href="{0}"&gt;Power BI ゲートウェイ&lt;/a&gt;を使用して、SQL Server データベース、Analysis Services モデル、その他多くのデータ ソースを、Power BI の同じダッシュボードに接続できます。既にレポートのポータルやアプリケーションがある場合には、Power BI のレポートとダッシュボードを&lt;a href="{1}"&gt;埋め込む&lt;/a&gt;ことで、統一されたエクスペリエンスが得られます。</value>
    <comment>{0} is a url to /gateway
{0} is a url to /developers</comment>
  </data>
  <data name="GetStarted_Heading" xml:space="preserve">
    <value>Power BI を始める方法をお選びください</value>
  </data>
  <data name="Hero_Cta_Play" xml:space="preserve">
    <value>ビデオを見る</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Power BI とは?</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI は、会社のデータを豊かな視覚情報に変換して収集と整理を助け、重要な問題に取り組めるようにします。最新情報を取得し、動向の発生をつかみ、ビジネスをさらに推進します。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI とは | Microsoft Power BI</value>
  </data>
  <data name="Service_Content" xml:space="preserve">
    <value>組織全体でダッシュボードを表示し、共有できます。また、エキスパートによって作成済みのレポートも活用できます。</value>
  </data>
  <data name="Service_Cta_SignUp" xml:space="preserve">
    <value>サインアップ</value>
  </data>
  <data name="Service_Heading" xml:space="preserve">
    <value>Power BI サービス</value>
  </data>
  <data name="Windows_Content" xml:space="preserve">
    <value>数分で、データを接続して変換し、高度な計算を作成し、魅力的なレポートを作成します。</value>
  </data>
  <data name="Windows_Cta_Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="Windows_Heading" xml:space="preserve">
    <value>Windows 用 Power BI Desktop</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>64</value>
  </data>
</root>