<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Content1" xml:space="preserve">
    <value>&lt;strong&gt;Power BI 是用于分析数据和共享见解的一套业务分析工具。&lt;/strong&gt; Power BI 仪表板通过将商业用户最重要的指标集中到一个位置、实时更新以及支持任意设备，为他们提供 360 度的全方位视图。只需一次点击，用户即可利用轻松查找答案的直观工具探索仪表板背后的数据。创建仪表板很简单，这得益于到 &lt;a href="{0}"&gt;50 多&lt;/a&gt;个热门商业应用的连接，它们具备专家设计的预构建仪表板，可帮助你快速上手运行。还可通过&lt;strong&gt;&lt;a href="{1}"&gt;Power BI Mobile&lt;/a&gt; 应用随处访问数据和报表，该应用会自动更新呈现数据中的任何更改。&lt;/strong&gt;</value>
    <comment>{0} is a url to /#connect-wrapper
{1} is a url to /mobile</comment>
  </data>
  <data name="Content2" xml:space="preserve">
    <value>如果你是向组织提交报告和分析的数据分析师，Power BI 可助你保持高效和创造性地构建内容。&lt;strong&gt;&lt;a href="{0}"&gt;Power BI Desktop&lt;/a&gt; 是一款功能丰富的数据混合和报表创作工具。&lt;/strong&gt; 利用可视化工具将分散数据库、文件和 Web 服务中的数据进行结合，帮助你理解数据质量和格式问题并自动修复。利用 20 多个内置视觉对象和生动的自定义可视化效果社区，助你创建有效传达信息的精湛报表。&lt;strong&gt;利用 &lt;a href="{1}"&gt;Power BI 服务&lt;/a&gt;，可向组织安全地发布报表，并设置自动数据刷新，便于所有人了解最新信息。&lt;/strong&gt;</value>
    <comment>{0} is a url to /desktop
{1} is a url to /features</comment>
  </data>
  <data name="Content3" xml:space="preserve">
    <value>Power BI 可统一整理组织的数据，无论在云端还是本地均可实现。利用 &lt;a href="{0}"&gt;Power BI 网关&lt;/a&gt;，可将 SQL Server 数据库、Analysis Services 模型和其他很多数据源连接到 Power BI 中的同一个仪表板。若已拥有报告门户或应用程序，请&lt;a href="{1}"&gt;嵌入&lt;/a&gt; Power BI 报表和仪表板实现一致的体验。</value>
    <comment>{0} is a url to /gateway
{0} is a url to /developers</comment>
  </data>
  <data name="GetStarted_Heading" xml:space="preserve">
    <value>选择开始使用 Power BI 的方式</value>
  </data>
  <data name="Hero_Cta_Play" xml:space="preserve">
    <value>观看视频</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>什么是 Power BI？</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 可将你公司的数据转换为丰富的视觉对象，便于你进行收集和组织，从而使你能够集中关注重要的内容。始终获悉最新信息、掌握即时趋势并进一步推动你的业务。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>什么是 Power BI | Microsoft Power BI</value>
  </data>
  <data name="Service_Content" xml:space="preserve">
    <value>查看仪表板并在整个组织中共享，还可使用专家设计的预构建报表。</value>
  </data>
  <data name="Service_Cta_SignUp" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="Service_Heading" xml:space="preserve">
    <value>Power BI 服务</value>
  </data>
  <data name="Windows_Content" xml:space="preserve">
    <value>连接和传递数据，创建高级计算，且几分钟内即可构建精湛报表。</value>
  </data>
  <data name="Windows_Cta_Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="Windows_Heading" xml:space="preserve">
    <value>适用于 Windows 的 Power BI Desktop</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>140</value>
  </data>
</root>