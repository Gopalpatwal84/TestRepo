<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="API_Content" xml:space="preserve">
    <value>Betten Sie Analysen nahtlos in Apps ein, ohne
ganz von vorne anfangen zu müssen.</value>
  </data>
  <data name="API_CTA_GetStartedNow" xml:space="preserve">
    <value>Jetzt starten</value>
  </data>
  <data name="API_Heading" xml:space="preserve">
    <value>Ankündigung: Microsoft Power BI Embedded</value>
  </data>
  <data name="ClientApp_CTA_Documentation" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="ClientApp_CTA_RegisterYourApp" xml:space="preserve">
    <value>Registrieren Ihrer App</value>
  </data>
  <data name="ClientApp_CTA_Sample" xml:space="preserve">
    <value>Beispiel</value>
  </data>
  <data name="ClientApp_Heading" xml:space="preserve">
    <value>Client-App</value>
  </data>
  <data name="Connectors_Content1" xml:space="preserve">
    <value>Erstellen Sie ein Inhaltspaket, um Ihren Benutzern sofortige Einblicke zu gewähren. Ihr Inhaltspaket enthält ein benutzerdefiniertes Datenmodell, ein benutzerdefiniertes Dashboard und einen benutzerdefinierten Bericht. Power BI versetzt Ihre Benutzer in die Lage, eigene Dashboards und Berichte anzupassen, um schnell Antworten zu erhalten.</value>
  </data>
  <data name="Connectors_Content2" xml:space="preserve">
    <value>Sie möchten Ihr eigenes Inhaltspaket erstellen?</value>
  </data>
  <data name="Connectors_CTA_ContactUs" xml:space="preserve">
    <value>So erreichen Sie uns</value>
  </data>
  <data name="Connectors_EnterEmail" xml:space="preserve">
    <value>Geben Sie Ihre E-Mail-Adresse ein.</value>
  </data>
  <data name="Connectors_Heading" xml:space="preserve">
    <value>Power BI-Inhaltspakete</value>
  </data>
  <data name="Connectors_MobileFormDownloadLinkSent" xml:space="preserve">
    <value>Wir haben Ihre E-Mail erhalten.</value>
  </data>
  <data name="Connectors_MobileFormSuccess" xml:space="preserve">
    <value>Vorgang erfolgreich:</value>
  </data>
  <data name="Connectors_PrivacyDisclaimer" xml:space="preserve">
    <value>Microsoft respektiert Ihre Privatsphäre. Weitere Informationen finden Sie in unseren Online-</value>
  </data>
  <data name="Connectors_PrivacyStatement" xml:space="preserve">
    <value>Datenschutzbestimmungen</value>
  </data>
  <data name="Embed_Content" xml:space="preserve">
    <value>Betten Sie beeindruckende interaktive Berichte in
Ihre Kunden-Apps ein – und sparen Sie sich den Zeit- und
Kostenaufwand, der mit der Entwicklung eigener
Steuerelemente verbunden ist. Wählen Sie Visualisierungen aus dem Standardkatalog von Power BI aus,
oder erstellen Sie eigene, die genau
auf Ihre Anforderungen abgestimmt sind.</value>
  </data>
  <data name="Embed_CTA_GetStarted" xml:space="preserve">
    <value>Jetzt starten</value>
  </data>
  <data name="Embed_Heading" xml:space="preserve">
    <value>Interaktive Berichte direkt
in Ihre App einbetten</value>
  </data>
  <data name="DevelopersBlog_CTA_ViewBlog" xml:space="preserve">
    <value>Alle Blogbeiträge anzeigen</value>
  </data>
  <data name="DevelopersBlog_Heading" xml:space="preserve">
    <value>Neue Blogbeiträge zu Power BI</value>
  </data>
  <data name="Documentation_CTA_Documentation" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="Documentation_CTA_GettingStarted" xml:space="preserve">
    <value>Erste Schritte</value>
  </data>
  <data name="Documentation_CTA_PowerBiApiTerms" xml:space="preserve">
    <value>Begriffe der Power BI-API</value>
  </data>
  <data name="Documentation_CTA_RegisterAnApp" xml:space="preserve">
    <value>Registrieren einer App</value>
  </data>
  <data name="Documentation_CTA_StartingWithOauth" xml:space="preserve">
    <value>Beginnen mit OAUTH</value>
  </data>
  <data name="Documentation_Heading" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="ExtendPowerBi_CTA_CustomVisuals" xml:space="preserve">
    <value>Benutzerdefinierte visuelle Elemente</value>
  </data>
  <data name="ExtendPowerBi_CTA_Documentation" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="ExtendPowerBi_CTA_SeeOnGithub" xml:space="preserve">
    <value>Sehen Sie sich dies auf GitHub an</value>
  </data>
  <data name="ExtendPowerBi_Heading" xml:space="preserve">
    <value>Visuelle Elemente verwenden</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Power BI Developer Center</value>
  </data>
  <data name="Connect_Content" xml:space="preserve">
    <value>Mithilfe unserer leistungsfähigen REST-APIs können die Benutzer
Daten aus Kacheln, Dashboards und Berichten direkt
in Ihre App übernehmen, Änderungen vornehmen und die Daten
anschließend wieder an Power BI übermitteln, ohne die Anwendung
zu verlassen.</value>
  </data>
  <data name="Connect_CTA_LearnMore" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="Integrate_EnterYourEmail" xml:space="preserve">
    <value>Ihre E-Mail-Adresse</value>
  </data>
  <data name="Connect_Heading" xml:space="preserve">
    <value>In der App eine Direktverbindung mit Power BI
herstellen</value>
  </data>
  <data name="Integrate_PrivacyDisclaimer" xml:space="preserve">
    <value>Microsoft respektiert Ihre Privatsphäre. Weitere Informationen finden Sie in unseren Online-</value>
  </data>
  <data name="Integrate_PrivacyStatement" xml:space="preserve">
    <value>Datenschutzbestimmungen</value>
  </data>
  <data name="LearnMore_CTA_ApiReference" xml:space="preserve">
    <value>API-Referenz</value>
  </data>
  <data name="LearnMore_CTA_Community" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="LearnMore_CTA_DevBlog" xml:space="preserve">
    <value>Entwickler-Blog</value>
  </data>
  <data name="LearnMore_CTA_Feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="LearnMore_CTA_Samples" xml:space="preserve">
    <value>Beispiele</value>
  </data>
  <data name="LearnMore_Heading" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Developers Center | Microsoft Power BI</value>
  </data>
  <data name="RestApiRealTime_CTA_AzureStreamAnalytics" xml:space="preserve">
    <value>Azure Stream Analytics</value>
  </data>
  <data name="RestApiRealTime_CTA_Documentation" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="RestApiRealTime_CTA_TryTheApi" xml:space="preserve">
    <value>Probieren Sie die API aus</value>
  </data>
  <data name="RestApiRealTime_Heading" xml:space="preserve">
    <value>REST-API und Echtzeit</value>
  </data>
  <data name="Extend_CTA_LearnMore" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="Web_CTA_Documentation" xml:space="preserve">
    <value>Dokumentation</value>
  </data>
  <data name="Web_CTA_RegisterYourApp" xml:space="preserve">
    <value>Registrieren Ihrer App</value>
  </data>
  <data name="Web_CTA_Sample" xml:space="preserve">
    <value>Beispiel</value>
  </data>
  <data name="Web_Heading" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="DevelopersPlaylist_CTA" xml:space="preserve">
    <value>Weitere Videos anzeigen</value>
  </data>
  <data name="DevelopersPlaylist_Heading" xml:space="preserve">
    <value>Wiedergabeliste für Power BI-Entwickler</value>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>Suchen</value>
  </data>
  <data name="ConnectAndAnalyze_Content" xml:space="preserve">
    <value>Verschaffen Sie Benutzern mit Power BI-Inhaltspaketen sofortigen Einblick. Erstellen Sie eigene Lösungen, mit denen Millionen Benutzer die Daten aus Ihrer App sekundenschnell in Power BI analysieren können.</value>
  </data>
  <data name="ConnectAndAnalyze_Heading" xml:space="preserve">
    <value>Verknüpfen und Analysieren Ihrer App-Daten mit Power BI</value>
  </data>
  <data name="Visualize_Content" xml:space="preserve">
    <value>Gestalten Sie maßgeschneiderte Visualisierungen, die den Bedürfnissen der Benutzer entsprechen und zum Design Ihrer App passen. Legen Sie sofort los: Auf GitHub stellt Microsoft Open-Source-Code für Visualisierungen bereit, der professionellen Anforderungen gewachsen ist.</value>
  </data>
  <data name="Visualize_Heading" xml:space="preserve">
    <value>Datenvisualisierungen ganz nach Ihren Vorstellungen</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>87</value>
  </data>
</root>