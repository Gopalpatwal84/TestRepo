<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="China_Content" xml:space="preserve">
    <value>21Vianet は、中国での Power BI 提供の運営、供給、管理、およびサポートを単独で行っています。</value>
  </data>
  <data name="China_Cta" xml:space="preserve">
    <value>中国</value>
  </data>
  <data name="China_Heading" xml:space="preserve">
    <value>中国</value>
  </data>
  <data name="Community_Cta" xml:space="preserve">
    <value>コミュニティにアクセスする</value>
  </data>
  <data name="Germany_Content" xml:space="preserve">
    <value>Power BI Germany は、規制が最も厳格な欧州のお客様のニーズに対応できるように設計されました。*</value>
  </data>
  <data name="Germany_Cta" xml:space="preserve">
    <value>ドイツ</value>
  </data>
  <data name="Germany_Heading" xml:space="preserve">
    <value>ドイツ</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>コンプライアンスに準拠したセキュアなクラウドでの Power BI</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>Power BI, Microsoft Power BI, BI ツール, Microsoft BI, Power BI を開始する, Power BI サービス, Power BI Desktop, 主権クラウド, Power BI を選択する, Power BI オプション, 米国政府, Power BI China</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>主権クラウド | Microsoft Power BI</value>
  </data>
  <data name="SovereignClouds_Cta" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="SovereignClouds_Cta_China" xml:space="preserve">
    <value>詳細情報 (中国語)</value>
  </data>
  <data name="SovereignClouds_MainContent" xml:space="preserve">
    <value>Power BI は別個の 3 つの国内クラウドで利用できるようになりました。これらのクラウドのセキュリティ、プライバシー、コンプライアンス、および透明性のレベルはグローバルに使用されている Power BI と同様で、サービス提供、データ所在地、アクセス、および制御についての各国規制に対応する独自モデルとの組み合わせになっています。</value>
  </data>
  <data name="SovereignClouds_MainHeading" xml:space="preserve">
    <value>信頼できるクラウドでのビジネス分析</value>
  </data>
  <data name="Support_Content" xml:space="preserve">
    <value>管理者は以下のリンクでサポート チケットを作成できます。</value>
  </data>
  <data name="Support_Content2" xml:space="preserve">
    <value>エンドユーザーは管理者と協力してチケットを送信したり、Power BI コミュニティにアクセスできます</value>
  </data>
  <data name="Support_Heading" xml:space="preserve">
    <value>サポート</value>
  </data>
  <data name="Terms_Conditions" xml:space="preserve">
    <value>* Publish to Web は Germany​ では使用できません</value>
  </data>
  <data name="US_Government_Content" xml:space="preserve">
    <value>公的機関のお客様は、セキュリティ、プライバシー、コンプライアンスに関する追加要件を満たしながら Power BI を使用できるようになりました。</value>
  </data>
  <data name="US_Government_Cta" xml:space="preserve">
    <value>米国政府</value>
  </data>
  <data name="US_Government_Heading" xml:space="preserve">
    <value>米国政府</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>199</value>
  </data>
</root>