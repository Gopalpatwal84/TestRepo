<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="China_Content" xml:space="preserve">
    <value>21Vianet는 중국에서 Power BI 전달을 독립적으로 운영, 제공, 관리 및 지원합니다.</value>
  </data>
  <data name="China_Cta" xml:space="preserve">
    <value>중국</value>
  </data>
  <data name="China_Heading" xml:space="preserve">
    <value>중국</value>
  </data>
  <data name="Community_Cta" xml:space="preserve">
    <value>커뮤니티 방문</value>
  </data>
  <data name="Germany_Content" xml:space="preserve">
    <value>Power BI Germany는 유럽에서 가장 많은 규제의 대상이 되는 고객의 요구를 충족하도록 설계되었습니다.*</value>
  </data>
  <data name="Germany_Cta" xml:space="preserve">
    <value>독일</value>
  </data>
  <data name="Germany_Heading" xml:space="preserve">
    <value>독일</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>준수성과 보안성이 우수한 클라우드 Power BI</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>power bi, microsoft power bi, bi 도구, microsoft bi, power bi 시작, power bi 서비스, power bi desktop, 소버린 클라우드, power bi 선택하기, power bi 옵션, 미국 정부, Power bi China</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>소버린 클라우드 | Microsoft Power BI</value>
  </data>
  <data name="SovereignClouds_Cta" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="SovereignClouds_Cta_China" xml:space="preserve">
    <value>자세히 알아보기(중국어)</value>
  </data>
  <data name="SovereignClouds_MainContent" xml:space="preserve">
    <value>Power BI는 3개의 별도의 내셔널 클라우드에서 사용할 수 있습니다. 이러한 클라우드는 서비스 전달, 데이터 주거성, 액세스 및 통제와 관련하여 로컬 규정에 부합하는 고유 모델과 결합된 Power BI 글로벌 버전으로서 동일한 수준의 보안, 개인 정보 보호, 규정 준수 및 투명성을 제공합니다.</value>
  </data>
  <data name="SovereignClouds_MainHeading" xml:space="preserve">
    <value>신뢰할 수 있는 클라우드에서 비즈니스 분석</value>
  </data>
  <data name="Support_Content" xml:space="preserve">
    <value>관리자는 다음 링크를 사용하여 지원 티켓을 만들 수 있습니다.</value>
  </data>
  <data name="Support_Content2" xml:space="preserve">
    <value>최종 사용자는 해당 관리자와 작업하여 티켓을 제출하거나 Power BI 커뮤니티를 방문할 수 있습니다.</value>
  </data>
  <data name="Support_Heading" xml:space="preserve">
    <value>지원</value>
  </data>
  <data name="Terms_Conditions" xml:space="preserve">
    <value>* 독일에서는 앱에 게시를 사용할 수 없습니다.</value>
  </data>
  <data name="US_Government_Content" xml:space="preserve">
    <value>공공 부문 고객은 현재 추가 보안, 개인 정보, 호환성 요구 조건에 부합할 경우 Power BI를 사용할 수 있습니다.</value>
  </data>
  <data name="US_Government_Cta" xml:space="preserve">
    <value>미국 정부</value>
  </data>
  <data name="US_Government_Heading" xml:space="preserve">
    <value>미국 정부</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>199</value>
  </data>
</root>