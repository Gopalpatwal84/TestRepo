<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="China_Content" xml:space="preserve">
    <value>21Vianet 獨立營運、提供、管理及支援 Power BI 在中國的傳遞。</value>
  </data>
  <data name="China_Cta" xml:space="preserve">
    <value>中國</value>
  </data>
  <data name="China_Heading" xml:space="preserve">
    <value>中國</value>
  </data>
  <data name="Community_Cta" xml:space="preserve">
    <value>前往社群</value>
  </data>
  <data name="Germany_Content" xml:space="preserve">
    <value>Power BI Germany 專為符合歐洲受到最嚴格規範的客戶需求而設計。*</value>
  </data>
  <data name="Germany_Cta" xml:space="preserve">
    <value>德國</value>
  </data>
  <data name="Germany_Heading" xml:space="preserve">
    <value>德國</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 位於符合規範的安全雲端</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>power bi, microsoft power bi, bi 工具, microsoft bi, 開始 power bi, power bi 服務, power bi desktop, 主權雲端, 選擇 power bi, power bi 選項, 美國政府, Power bi China</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>主權雲端 | Microsoft Power BI</value>
  </data>
  <data name="SovereignClouds_Cta" xml:space="preserve">
    <value>深入了解</value>
  </data>
  <data name="SovereignClouds_Cta_China" xml:space="preserve">
    <value>深入了解 (中文)</value>
  </data>
  <data name="SovereignClouds_MainContent" xml:space="preserve">
    <value>Power BI 現於三個不同的國家雲端中提供。這些雲端提供的安全性、隱私權、合規性及透明度等級與全球版本的 Power BI 相同，並結合了服務傳遞、資料存放、存取及控制等方面符合當地規定的獨特模型。</value>
  </data>
  <data name="SovereignClouds_MainHeading" xml:space="preserve">
    <value>值得信任的雲端商務分析</value>
  </data>
  <data name="Support_Content" xml:space="preserve">
    <value>系統管理員可以使用下列連結建立支援票證。</value>
  </data>
  <data name="Support_Content2" xml:space="preserve">
    <value>終端使用者可與系統管理員合作以提交票證，也可以前往 Power BI 社群</value>
  </data>
  <data name="Support_Heading" xml:space="preserve">
    <value>支援</value>
  </data>
  <data name="Terms_Conditions" xml:space="preserve">
    <value>* 在德國無法使用 [發佈至網路]</value>
  </data>
  <data name="US_Government_Content" xml:space="preserve">
    <value>公部門的客戶現在能夠在使用 Power BI 的同時達成安全性、隱私權及合規性需求。</value>
  </data>
  <data name="US_Government_Cta" xml:space="preserve">
    <value>美國政府</value>
  </data>
  <data name="US_Government_Heading" xml:space="preserve">
    <value>美國政府</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>199</value>
  </data>
</root>