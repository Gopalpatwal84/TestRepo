<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Decisions_Copy" xml:space="preserve">
    <value>Daten sollten Möglichkeiten bieten, nicht überwältigen. Mit Power BI können Sie problemlos mit Ihren Daten interagieren und dabei einfache Drag &amp; Drop-Gesten verwenden, um Trends zu ermitteln, sowie natürlichsprachliche Abfragen, blitzschnelle Antworten zu erhalten.</value>
  </data>
  <data name="Decisions_Heading" xml:space="preserve">
    <value>Daten in Entscheidungen umsetzen</value>
  </data>
  <data name="Details_Copy" xml:space="preserve">
    <value>Mithilfe von Power BI können Sie dank beeindruckender Visualisierungen und interaktiver Dashboards, die eine konsolidierte Liveansicht Ihres Unternehmens bieten, informative Geschichten erzählen. Dem Vollblutanalysten bietet Power BI Desktop einen Freiformzeichenbereich für die Datenanalyse mittels Drag &amp; Drop sowie eine umfassende Bibliothek interaktiver Visualisierungen, einfache Berichterstellung und schnelle Veröffentlichung im Power BI-Dienst.</value>
  </data>
  <data name="Details_Heading" xml:space="preserve">
    <value>Details anschaulich machen</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Power BI wandelt Ihre Daten in informationsreiche visuelle Darstellungen um, die Sie auf jede gewünschte Weise strukturieren können, um das Augenmerk auf die Punkte zu legen, die für Sie wichtig sind. Bleiben Sie auf dem Laufenden, und erkennen Sie Trends, während sie entstehen, mit leistungsstarken Self-Service-Funktionen, die Ihnen helfen, Ihr Unternehmen voranzutreiben.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Auf das Wesentliche konzentrieren</value>
  </data>
  <data name="Introducing_Heading" xml:space="preserve">
    <value>Einführung in Power BI</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI wandelt die Daten Ihres Unternehmens in visuelle Darstellungen um. Mit Power BI können Sie Ihre Daten sammeln und strukturieren und das Augenmerk auf die für Sie wichtigsten Punkte legen. Bleiben Sie auf dem Laufenden, erkennen Sie Trends und bringen Sie Ihr Geschäft voran.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Tour | Microsoft Power BI</value>
  </data>
  <data name="OnePane_Copy" xml:space="preserve">
    <value>Power BI sammelt alle Ihre lokalen und Cloudinformationen an einem zentralen Ort, auf den Sie jederzeit und von überall aus zugreifen können. Sie können auch vorkonfigurierte Inhaltpakete sowie integrierte Connectors verwenden, um Ihre Daten schnell aus Lösungen wie Marketo, Salesforce, Google Analytics und vielen mehr zu importieren.</value>
  </data>
  <data name="OnePane_Heading" xml:space="preserve">
    <value>Ein vollständiger Überblick in einem Fenster</value>
  </data>
  <data name="ShareWeb_Copy" xml:space="preserve">
    <value>Erzählen Sie die Geschichte hinter Ihren Daten mithilfe des Power BI-Features „Webveröffentlichung“, und erreichen Sie Millionen von Benutzern – überall und auf sämtlichen Geräten. Kombinieren Sie Ihre Datenquellen, erstellen Sie mühelos umwerfende Visualisierungen, und betten Sie Ihre Geschichte in Minuten in Ihre Website ein.</value>
  </data>
  <data name="ShareWeb_Heading" xml:space="preserve">
    <value>Teilen Sie Ihre Erkenntnisse auf Ihrer Website oder in Ihrem Blog</value>
  </data>
  <data name="Share_Copy" xml:space="preserve">
    <value>Power BI ermöglicht es Ihnen, Dashboards und Berichte mit jeder gewünschten Personen zu teilen, und zwar von überall aus. Bleiben Sie immer informiert mit der Power BI-App für Windows, iOS und Android. Benachrichtigungen informieren Sie über alle Änderungen an Ihren Daten, damit Sie mit gemeinsam mit Ihrem Team sofortige Maßnahme erarbeiten können.</value>
  </data>
  <data name="Share_Heading" xml:space="preserve">
    <value>Eine ganze Welt von Einsichten teilen</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>6</value>
  </data>
</root>