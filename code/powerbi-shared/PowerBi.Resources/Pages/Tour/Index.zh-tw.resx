<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Decisions_Copy" xml:space="preserve">
    <value>資料應為助力，而不是阻力。Power BI 可讓您使用簡單的拖放手勢，輕鬆與資料互動，以尋找資料中的趨勢；您也可使用自然語言查詢，快速獲得解答。</value>
  </data>
  <data name="Decisions_Heading" xml:space="preserve">
    <value>將資料應用到決策之上</value>
  </data>
  <data name="Details_Copy" xml:space="preserve">
    <value>Power BI 具有令人讚嘆的視覺效果與互動式儀表板，可提供企業的合併即時檢視，讓您成為吸引人的行銷高手。Power BI Desktop 提供不限格式的畫布供您拖放資料瀏覽，並提供具備互動視覺效果、簡易報表建立，以及快速發行至 Power BI 服務的豐富程式庫，非常適合分析師使用。</value>
  </data>
  <data name="Details_Heading" xml:space="preserve">
    <value>將詳細資料融入生活</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Power BI 會將您的資料轉換成豐富的視覺效果，讓您可以任意方式加以組織，以便您能夠將注意力集中在您最關切的事物上。透過強大的自助式功能，隨時掌握最新消息與趨勢，進而推動業務的成長。</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>聚焦在您最關切的事物上</value>
  </data>
  <data name="Introducing_Heading" xml:space="preserve">
    <value>Power BI 簡介</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 會將您公司的資料轉換成各種視覺效果，方便您加以收集及編排，讓您可以將全部注意力放在您關注的事物上。隨時掌握最新資訊，找出進行中的趨勢，並進一步推動業務。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>導覽 | Microsoft Power BI</value>
  </data>
  <data name="OnePane_Copy" xml:space="preserve">
    <value>Power BI 可以將其從內部部署及雲端收集而來的資訊，盡現於一個集中位置，讓您隨時隨地皆可存取。您也可以使用預先封裝的內容組件與內建連接器，從 Marketo、Salesforce、Google Analytics (分析) 等許多解決方案快速地匯入資料。</value>
  </data>
  <data name="OnePane_Heading" xml:space="preserve">
    <value>所有資訊盡現於一個窗格之中</value>
  </data>
  <data name="ShareWeb_Copy" xml:space="preserve">
    <value>利用 Power BI 展現您的資料內容，並發行到網路上，觸達世界每個角落使用各種裝置的使用者。可合併資料來源、輕鬆建立令人驚艷的視覺效果，並在幾分鐘內將您的資料故事內嵌到網站上。</value>
  </data>
  <data name="ShareWeb_Heading" xml:space="preserve">
    <value>您可在網站或部落格上分享您的深入解析</value>
  </data>
  <data name="Share_Copy" xml:space="preserve">
    <value>Power BI 讓您無論身在何處，都能與任何人共用儀表板及報表。透過 Windows 版、iOS 版與 Android 版的 Power BI 應用程式，隨時掌握最新資訊。警示會通知您資料中的任何變更，讓您與小組能夠立即採取相應措施。</value>
  </data>
  <data name="Share_Heading" xml:space="preserve">
    <value>共享深入剖析資訊</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>6</value>
  </data>
</root>