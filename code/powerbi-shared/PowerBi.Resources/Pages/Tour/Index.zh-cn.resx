<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Decisions_Copy" xml:space="preserve">
    <value>数据应为助力，而非阻力。借助 Power BI，你可以使用简单的拖放手势轻松与你的数据进行交互，以发现趋势，并可使用自然语言查询获得闪电般快速的答案。</value>
  </data>
  <data name="Decisions_Heading" xml:space="preserve">
    <value>将数据转换为决策</value>
  </data>
  <data name="Details_Copy" xml:space="preserve">
    <value>Power BI 通过令人惊叹的可视化效果和交互式仪表板，提供企业的合并实时视图，让你成为设计大师。Power BI Desktop 提供不限形式的画布供你拖放数据进行浏览，并提供大量交互式可视化效果、简易报表创建以及快速发布到 Power BI 服务的库，非常适合分析师使用。</value>
  </data>
  <data name="Details_Heading" xml:space="preserve">
    <value>让细节更生动</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Power BI 将你的数据转换为丰富的视觉对象，你可以采用任何方式进行整理，从而让注意力集中于最重要的内容。借助功能强大的自助服务功能，随时掌握最新消息和趋势，帮助你推动业务成长。</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>专注于最重要的内容</value>
  </data>
  <data name="Introducing_Heading" xml:space="preserve">
    <value>Power BI 简介</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 可将你公司的数据转换为丰富的视觉对象，便于你进行收集和组织，从而使你能够集中关注重要的内容。始终获悉最新信息、掌握即时趋势并进一步推动你的业务。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>教程 | Microsoft Power BI</value>
  </data>
  <data name="OnePane_Copy" xml:space="preserve">
    <value>Power BI 将你所有的本地信息和云信息集中在一个中心位置，让你可以随时随地进行访问。也可以使用预封装的内容包和内置连接器快速从解决方案（如 Marketo、Salesforce、Google Analytics 以及更多）导入你的数据。</value>
  </data>
  <data name="OnePane_Heading" xml:space="preserve">
    <value>在一个窗格中查看所有内容</value>
  </data>
  <data name="ShareWeb_Copy" xml:space="preserve">
    <value>使用 &lt;a href="{0}"&gt;Power BI 发布到 Web&lt;/a&gt;，展现你的数据内容，让数百万用户可从任何位置使用任何设备进行访问。合并数据源、轻松创建令人惊叹的可视化效果并在几分钟内快速将你的内容嵌入你的网站。</value>
    <comment>0 is url</comment>
  </data>
  <data name="ShareWeb_Heading" xml:space="preserve">
    <value>在网站或博客上分享你的见解</value>
  </data>
  <data name="Share_Copy" xml:space="preserve">
    <value>Power BI 让你无论身在何处，都可与任何人共享仪表板和报表。通过适用于 Windows、iOS 和 Android 的 Power BI 应用，始终掌握最新信息。警报将通知你数据中的任何更改，以便你可以与团队一起立即采取相应措施。</value>
  </data>
  <data name="Share_Heading" xml:space="preserve">
    <value>共享无数见解</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>101</value>
  </data>
</root>