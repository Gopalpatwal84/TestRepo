<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedDownloadOptions" xml:space="preserve">
    <value>進階下載選項</value>
  </data>
  <data name="AppStore" xml:space="preserve">
    <value>應用程式市集</value>
  </data>
  <data name="Desktop_Copy" xml:space="preserve">
    <value>Power BI Desktop 可以讓您透過任意格式的拖放畫布、各種現代化資料視覺效果，以及便利的報告撰寫功能，瀏覽具備各種視覺效果的資料。</value>
  </data>
  <data name="Desktop_Heading" xml:space="preserve">
    <value>Microsoft Power BI Desktop</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="DownloadFrom" xml:space="preserve">
    <value>下載自</value>
  </data>
  <data name="Gateway_Copy" xml:space="preserve">
    <value>透過內部部署資料閘道，您可以藉由連線到內部部署資料來源，讓資料保持在最新狀態，而不需要移動資料。</value>
  </data>
  <data name="Gateway_Heading" xml:space="preserve">
    <value>Microsoft 內部部署資料閘道</value>
  </data>
  <data name="GooglePlay" xml:space="preserve">
    <value>Google Play</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>&lt;p&gt;不論您出門在外，或是需要建立豐富的互動式報表，Power BI 都能提供您所需的工具。利用我們的應用程式套件，隨時隨地與您的資料保持連接。&lt;/p&gt;
&lt;p&gt;即使出門在外，也能觸控取得商務資料的全方位檢視，並透過 Power BI，快速連接、成形、視覺化及共用深入解析資料。&lt;/p&gt;</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>從任何地方建立報表及監視您的資料</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 會將您公司的資料轉換成各種視覺效果，方便您加以收集及編排，讓您可以將全部注意力放在您關注的事物上。隨時掌握最新資訊，找出進行中的趨勢，並進一步推動業務。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>下載 | Microsoft Power BI</value>
  </data>
  <data name="Mobile_Copy" xml:space="preserve">
    <value>隨時隨地存取您的資料。這些原生應用程式可以讓您以互動的方式，隨時隨地透過行動裝置即時存取您的重要商務資訊。</value>
  </data>
  <data name="Mobile_Heading" xml:space="preserve">
    <value>Microsoft Power BI Mobile</value>
  </data>
  <data name="Publisher_Copy" xml:space="preserve">
    <value>只要幾個動作即可將重要的樞紐分析表、圖表、儲存格範圍，以及更多來自您 Excel 試算表的快照，儲存至 Power BI Web 儀表板。</value>
  </data>
  <data name="Publisher_Heading" xml:space="preserve">
    <value>Microsoft Power BI publisher for Excel</value>
  </data>
  <data name="WindowsStore" xml:space="preserve">
    <value>Windows 市集</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>89</value>
  </data>
</root>