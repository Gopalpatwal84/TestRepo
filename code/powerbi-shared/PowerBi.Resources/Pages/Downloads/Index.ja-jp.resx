<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedDownloadOptions" xml:space="preserve">
    <value>高度なダウンロード オプション</value>
  </data>
  <data name="AppStore" xml:space="preserve">
    <value>App Store</value>
  </data>
  <data name="Desktop_Copy" xml:space="preserve">
    <value>Power BI Desktop を使用すると、自由な形式のドラッグ アンド ドロップのキャンバス、さまざまな最新のデータ視覚化、さらには使いやすいレポート作成操作で、視覚的にデータを調査できます。</value>
  </data>
  <data name="Desktop_Heading" xml:space="preserve">
    <value>Microsoft Power BI Desktop</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="DownloadFrom" xml:space="preserve">
    <value>ダウンロード元</value>
  </data>
  <data name="Gateway_Copy" xml:space="preserve">
    <value>オンプレミス データ ゲートウェイでは、オンプレミスのデータ ソースに接続することでデータを最新の状態に保つことができ、データを移動する必要はありません。</value>
  </data>
  <data name="Gateway_Heading" xml:space="preserve">
    <value>Microsoft オンプレミス データ ゲートウェイ</value>
  </data>
  <data name="GooglePlay" xml:space="preserve">
    <value>Google Play</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>&lt;p&gt;外出先でも、機能豊富な対話型レポートの作成が必要な場合でも、Power BI には必要なツールが用意されています。アプリを使って、いつでもどこでもデータに接続することができます。&lt;/p&gt;
&lt;p&gt;Power BI なら、外出先でビジネス データの全体像を指先ひとつで確認できます。また、データにすばやく接続し、各種グラフを使って視覚化したり、得られた洞察を共有したりすることもできます。&lt;/p&gt;</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>レポートの作成とデータの監視がどこででも行える</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI は、会社のデータを豊かな視覚情報に変換して収集と整理を助け、重要な問題に取り組めるようにします。最新情報を取得し、動向の発生をつかみ、ビジネスをさらに推進します。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>ダウンロード | Microsoft Power BI</value>
  </data>
  <data name="Mobile_Copy" xml:space="preserve">
    <value>いつでもどこでもデータにアクセスできます。これらのネイティブ アプリは、重要なビジネス情報へのライブで対話型のモバイル アクセスを提供します。</value>
  </data>
  <data name="Mobile_Heading" xml:space="preserve">
    <value>Microsoft Power BI モバイル</value>
  </data>
  <data name="Publisher_Copy" xml:space="preserve">
    <value>数回クリックするだけで、すべての Excel スプレッドシートからピボットテーブル、グラフ、セル範囲などの重要なスナップショットを Power BI の Web ダッシュボードに保存できます。</value>
  </data>
  <data name="Publisher_Heading" xml:space="preserve">
    <value>Microsoft Power BI publisher for Excel</value>
  </data>
  <data name="WindowsStore" xml:space="preserve">
    <value>Windows ストア</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>89</value>
  </data>
</root>