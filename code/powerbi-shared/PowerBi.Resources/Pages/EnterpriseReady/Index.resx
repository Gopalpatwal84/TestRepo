<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available_Content" xml:space="preserve">
    <value>Power BI is Software as a Service (SaaS) that provides 99.9% uptime with fast deployment in cloud or hybrid cloud + on-premises scenarios.</value>
  </data>
  <data name="Available_Heading" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="Cloud_Content" xml:space="preserve">
    <value>Optimize investment in ETL tools and infrastructure through Power BI's built-in connectivity to a variety of data sources, both in the cloud and on-premises.</value>
  </data>
  <data name="Connect_Content" xml:space="preserve">
    <value>Standardize how dashboards, reports, and datasets are shared across the entire organization in a consistent and secured way with organizational content packs.</value>
  </data>
  <data name="Dashboard_Content" xml:space="preserve">
    <value>Deploy Power BI service with ease at the speed of SaaS and deploy Power BI Desktop the companion authoring tool using your existing deployment infrastructure and process.</value>
  </data>
  <data name="EasyOnAdmin_Heading" xml:space="preserve">
    <value>Power BI is easy to manage and deploy</value>
  </data>
  <data name="EnterpriseReady_Heading" xml:space="preserve">
    <value>Insights for your users, ease of management for you</value>
  </data>
  <data name="EnterpriseReady_IntroContent" xml:space="preserve">
    <value>&lt;p&gt;How do you provide your organization with access to data from sales, marketing, finance, and more, while delivering 24/7/365 system availability, securing data and access, and doing it all with ease?&lt;/p&gt;

&lt;p&gt;It's all possible with Power BI. Give your users a holistic view of the business while also providing the things that matter most to you: high availability and scalability, security and compliance, and ease of management.&lt;/p&gt;</value>
  </data>
  <data name="Flexible_Content" xml:space="preserve">
    <value>Connect to all of your data, whether in the cloud or on-premises via live connections or scheduled refresh through the &lt;a href="/documentation/powerbi-gateway-enterprise/"&gt;enterprise gateway&lt;/a&gt; to provide your users with the latest insights no matter where the data lives.</value>
  </data>
  <data name="Flexible_Heading" xml:space="preserve">
    <value>Flexible</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI is an enterprise-ready business intelligence solution that's available, scalable, secure and compliant, and easy to manage.</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Enterprise IT | Microsoft Power BI</value>
  </data>
  <data name="MSTrust_Content" xml:space="preserve">
    <value>Keep your data safe where it is and connect to it in a secured way using Azure Active Directory and OAuth 2.0 authentication with Power BI. We meet regulatory requirements ISO 27001, ISO 27018, EU Model Clauses, HIPAA BAA, and UK G-Cloud compliance.</value>
  </data>
  <data name="MSTrust_Cta" xml:space="preserve">
    <value>See the Microsoft Trust Center</value>
  </data>
  <data name="MSTrust_Heading" xml:space="preserve">
    <value>We're serious about security and compliance</value>
  </data>
  <data name="People_Content" xml:space="preserve">
    <value>Secure who gets access to what data in Power BI using &lt;a href="/blog/power-bi-service-march-update-part-two/"&gt;row-level security&lt;/a&gt; in combination with your existing Azure and Office 365 investment.</value>
  </data>
  <data name="Scalable_Content" xml:space="preserve">
    <value>Enjoy scalability at the speed of SaaS to the needs of your business, with optimized costs that are based on the number of users and their specific data needs.</value>
  </data>
  <data name="Scalable_Heading" xml:space="preserve">
    <value>Scalable</value>
  </data>
  <data name="TakeAdvantage_Heading" xml:space="preserve">
    <value>Take advantage of Power BI</value>
  </data>
</root>