<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available_Content" xml:space="preserve">
    <value>Power BI は、クラウド シナリオまたはハイブリッド クラウド + オンプレミス シナリオで 99.9% アップタイムと高速デプロイを提供するサービスとしてのソフトウェア (SaaS) です。</value>
  </data>
  <data name="Available_Heading" xml:space="preserve">
    <value>入手可能</value>
  </data>
  <data name="Cloud_Content" xml:space="preserve">
    <value>クラウドとオンプレミスの両方にあるさまざまなデータ ソースに対する Power BI の組み込み接続性を使用して、ETL ツールとインフラストラクチャへの投資を最適化します。</value>
  </data>
  <data name="Connect_Content" xml:space="preserve">
    <value>組織のコンテンツ パックを使用して、組織全体で一貫した方法でダッシュボード、レポート、およびデータセットの共有方法を標準化します。</value>
  </data>
  <data name="Dashboard_Content" xml:space="preserve">
    <value>SaaS の速度で簡単に Power BI サービスをデプロイし、既存のデプロイメントおよびプロセスを使用する関連作成ツールである Power BI Desktop をデプロイします。</value>
  </data>
  <data name="EasyOnAdmin_Heading" xml:space="preserve">
    <value>Power BI は管理とデプロイが簡単</value>
  </data>
  <data name="EnterpriseReady_Heading" xml:space="preserve">
    <value>ユーザーに洞察を、組織に管理の利便性を提供</value>
  </data>
  <data name="EnterpriseReady_IntroContent" xml:space="preserve">
    <value>&lt;p&gt;営業、マーケティング、財務などからのデータ アクセスを組織に提供しつつ、通年 (24/7/365) のシステム可能性を提供し、データとアクセスをセキュリティで保護し、それらを簡単に実現するにはどうすればよいでしょうか。&lt;/p&gt;

&lt;p&gt;Power BI ではそれらすべてが可能です。ユーザーにはビジネスの全体像を提供し、組織には高可用性と拡張性、セキュリティ、コンプライアンス、および管理の利便性など最大の関心事を提供します。&lt;/p&gt;</value>
  </data>
  <data name="Flexible_Content" xml:space="preserve">
    <value>&lt;a href="/documentation/powerbi-gateway-enterprise/"&gt;Enterprise Gateway&lt;/a&gt; でのライブ接続またはスケジュールされた更新により、クラウドまたはオンプレミスにあるすべてのデータに接続します。これにより、データがどこでライブであるかに関わりなく、ユーザーに最新の洞察を提供することができます。</value>
  </data>
  <data name="Flexible_Heading" xml:space="preserve">
    <value>柔軟性</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI は、可用性、拡張性、セキュリティ、コンプライアンス、利便性を備えた、組織に対応したビジネス インテリジェンス ソリューションです。</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>組織 IT | Microsoft Power BI</value>
  </data>
  <data name="MSTrust_Content" xml:space="preserve">
    <value>Power BI では、データを現在の場所で保護し、Azure Active DIrectory および OAuth 2.0 認証を使用した安全な方法でデータに接続できます。マイクロソフトは、ISO 27001、ISO 27018、EU Model Clauses、HIPAA BAA、および UK G-Cloud コンプライアンスの規制要件を満たしています。</value>
  </data>
  <data name="MSTrust_Cta" xml:space="preserve">
    <value>Microsoft Trust Center をご覧ください</value>
  </data>
  <data name="MSTrust_Heading" xml:space="preserve">
    <value>マイクロソフトはセキュリティとコンプライアンスを重視しています</value>
  </data>
  <data name="People_Content" xml:space="preserve">
    <value>Power BI では、&lt;a href="/blog/power-bi-service-march-update-part-two/"&gt;行レベルのセキュリティ&lt;/a&gt;を既存の Azure および Office 365 投資と組み合わせて使用することにより、どのデータに対するアクセスを誰に許可するかを安全に設定できます。</value>
  </data>
  <data name="Scalable_Content" xml:space="preserve">
    <value>ビジネスの必要に応じて SaaS の速度で拡張することができます。コストは、ユーザー数や具体的なデータの必要性に基づいて最適化されています。</value>
  </data>
  <data name="Scalable_Heading" xml:space="preserve">
    <value>拡張性</value>
  </data>
  <data name="TakeAdvantage_Heading" xml:space="preserve">
    <value>Power BI を活用する</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>82</value>
  </data>
</root>