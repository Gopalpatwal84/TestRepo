<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available_Content" xml:space="preserve">
    <value>Power BI 是軟體即服務 (SaaS)，提供 99.9% 的執行時間，能在雲端或混合式雲端 + 內部部署案例中快速部署。</value>
  </data>
  <data name="Available_Heading" xml:space="preserve">
    <value>高可用性</value>
  </data>
  <data name="Cloud_Content" xml:space="preserve">
    <value>Power BI 內建各種資料來源 (雲端與內部部署) 的連線，為您省下大筆 ETL 工具及基礎結構的成本。</value>
  </data>
  <data name="Connect_Content" xml:space="preserve">
    <value>使用組織內容套件，標準化儀表板、報表及資料集在整個組織中的共用方式，在保持一致的同時安全無虞。</value>
  </data>
  <data name="Dashboard_Content" xml:space="preserve">
    <value>輕鬆地以 SaaS 速度部署 Power BI 服務，並使用現有的部署基礎結構及程序部署隨附的製作工具 Power BI Desktop。</value>
  </data>
  <data name="EasyOnAdmin_Heading" xml:space="preserve">
    <value>輕鬆地管理及部署 Power BI</value>
  </data>
  <data name="EnterpriseReady_Heading" xml:space="preserve">
    <value>為使用者提供深入解析並讓您輕鬆管理</value>
  </data>
  <data name="EnterpriseReady_IntroContent" xml:space="preserve">
    <value>&lt;p&gt;如何輕鬆讓您的組織能夠存取銷售、行銷、財經及其他方面的資料，同時讓系統隨時處在可用狀態，並保護資料及存取權？&lt;/p&gt;

&lt;p&gt;有了 Power BI，這一切都將成真。供使用者全面檢視商務，同時提供您最重視的高可用性與延展性、安全性與相容性以及管理上的方便性。&lt;/p&gt;</value>
  </data>
  <data name="Flexible_Content" xml:space="preserve">
    <value>無論資料位於何處，都能透過&lt;a href="/documentation/powerbi-gateway-enterprise/"&gt;企業閘道&lt;/a&gt;的即時連線或排程的重新整理作業，連線到您在雲端或內部部署的所有資料，以提供使用者最新的深入解析。</value>
  </data>
  <data name="Flexible_Heading" xml:space="preserve">
    <value>富有彈性</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI 是符合企業需求的商業智慧解決方案，不但便於使用、可靈活調整、具備安全性及相容性，而且易於管理。</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>企業 IT | Microsoft Power BI</value>
  </data>
  <data name="MSTrust_Content" xml:space="preserve">
    <value>維護資料的安全，並搭配 Azure Active Directory 及 OAuth 2.0 驗證使用 Power BI，以安全的方式連接資料。我們合乎以下法規：ISO 27001、ISO 27018、EU Model Clauses、HIPAA BAA 及 UK G-Cloud 標準。</value>
  </data>
  <data name="MSTrust_Cta" xml:space="preserve">
    <value>查看 Microsoft 信任中心</value>
  </data>
  <data name="MSTrust_Heading" xml:space="preserve">
    <value>我們十分重視安全性及法規</value>
  </data>
  <data name="People_Content" xml:space="preserve">
    <value>以您現有的 Azure 及 Office 365 成本使用&lt;a href="/blog/power-bi-service-march-update-part-two/"&gt;資料列層級安全性&lt;/a&gt;，區分不同使用者能在 Power BI 存取的資料範圍。</value>
  </data>
  <data name="Scalable_Content" xml:space="preserve">
    <value>以使用者數目及其特殊資料需求為依據的實惠價格，即可讓您享有 SaaS 速度的延展性，進而達成商務需求。</value>
  </data>
  <data name="Scalable_Heading" xml:space="preserve">
    <value>靈活調整</value>
  </data>
  <data name="TakeAdvantage_Heading" xml:space="preserve">
    <value>利用 Power BI</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>82</value>
  </data>
</root>