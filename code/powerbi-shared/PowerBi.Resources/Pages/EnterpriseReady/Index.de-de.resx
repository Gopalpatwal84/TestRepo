<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available_Content" xml:space="preserve">
    <value>Bei Power BI handelt es sich um Software-as-a-Service (SaaS) mit einer Verfügbarkeit von 99,9 % und schneller Bereitstellung in Szenarien mit Cloud oder Hybrid Cloud und lokaler Umgebung.</value>
  </data>
  <data name="Available_Heading" xml:space="preserve">
    <value>Verfügbarkeit</value>
  </data>
  <data name="Cloud_Content" xml:space="preserve">
    <value>Optimieren Sie Ihre Investitionen in ETL-Tools und -Infrastruktur, indem Sie die in Power BI integrierten Verbindungen mit verschiedenen lokalen und Cloud-Datenquellen nutzen.</value>
  </data>
  <data name="Connect_Content" xml:space="preserve">
    <value>Mit organisationsbezogenen Inhaltspaketen standardisieren Sie Dashboards, Berichte und Datasets, damit diese auf einheitliche und sichere Weise mit der gesamten Organisation geteilt werden können.</value>
  </data>
  <data name="Dashboard_Content" xml:space="preserve">
    <value>Der Power BI-Dienst lässt sich ganz einfach und wie jede andere SaaS in kürzester Zeit bereitstellen. Das zugehörige Erstellungstool Power BI Desktop machen Sie über Ihre vorhandene Bereitstellungsinfrastruktur und Ihre gewohnten Prozesse verfügbar.</value>
  </data>
  <data name="EasyOnAdmin_Heading" xml:space="preserve">
    <value>Einfache Verwaltung und Bereitstellung von Power BI</value>
  </data>
  <data name="EnterpriseReady_Heading" xml:space="preserve">
    <value>Benutzer profitieren von Einblicken, Sie von der einfachen Verwaltung</value>
  </data>
  <data name="EnterpriseReady_IntroContent" xml:space="preserve">
    <value>&lt;p&gt;Wie können Sie Ihrer Organisation den Zugriff auf die Daten aus Vertrieb, Marketing, Buchhaltung und mehr ermöglichen? Über ein System, das rund um die Uhr verfügbar ist? Und das Daten und Zugriff auch noch schützt und ganz leicht zu nutzen ist?&lt;/p&gt;

&lt;p&gt;Mit Power BI. Bieten Sie Ihren Benutzern einen umfassenden Überblick über Ihre Geschäftsvorgänge, ohne bei den Faktoren Kompromisse einzugehen, die Ihnen wichtig sind, wie hohe Verfügbarkeit und Skalierbarkeit, Sicherheit und Compliance sowie einfache Verwaltung.&lt;/p&gt;</value>
  </data>
  <data name="Flexible_Content" xml:space="preserve">
    <value>Stellen Sie Verbindungen mit allen Ihren Daten her, unabhängig davon, ob diese in der Cloud oder lokal gespeichert sind. Damit Ihre Benutzer unabhängig vom Speicherort der Daten immer über die aktuellen Informationen verfügen, verwenden Sie Liveverbindungen oder geplante Aktualisierungen über das &lt;a href="/documentation/powerbi-gateway-enterprise/"&gt;Enterprise-Gateway&lt;/a&gt;.</value>
  </data>
  <data name="Flexible_Heading" xml:space="preserve">
    <value>Flexibilität</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI ist eine Business Intelligence-Lösung, die für den Einsatz in Unternehmen entwickelt wurde und hochverfügbar, skalierbar, sicher, kompatibel sowie einfach zu verwalten ist.</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Unternehmens-IT | Microsoft Power BI</value>
  </data>
  <data name="MSTrust_Content" xml:space="preserve">
    <value>Dank Azure Active Directory und Authentifizierung über OAuth 2.0 bietet Power BI Schutz für Ihre Daten an jedem beliebigen Speicherort und sichere Datenverbindungen. Die gesetzlichen Anforderungen von ISO 27001, ISO 27018, EU-Musterklauseln, HIPAA BAA und UK Government G-Cloud werden eingehalten.</value>
  </data>
  <data name="MSTrust_Cta" xml:space="preserve">
    <value>Zum Microsoft Trust Center</value>
  </data>
  <data name="MSTrust_Heading" xml:space="preserve">
    <value>Sicherheit und Compliance ohne Kompromisse</value>
  </data>
  <data name="People_Content" xml:space="preserve">
    <value>Über die &lt;a href="/blog/power-bi-service-march-update-part-two/"&gt;Sicherheit auf Zeilenebene&lt;/a&gt; in Power BI und Ihre bisherigen Investitionen in Azure und Office 365 steuern Sie, wer Zugriff auf welche Daten hat.</value>
  </data>
  <data name="Scalable_Content" xml:space="preserve">
    <value>Skalierbarkeit in SaaS-typischer Geschwindigkeit ermöglicht jederzeit eine Anpassung an die Anforderungen des Unternehmens und Kostenoptimierung auf Grundlage der Benutzerzahl und der jeweiligen Anforderungen an Daten.</value>
  </data>
  <data name="Scalable_Heading" xml:space="preserve">
    <value>Skalierbarkeit</value>
  </data>
  <data name="TakeAdvantage_Heading" xml:space="preserve">
    <value>Nutzen Sie Power BI</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>82</value>
  </data>
</root>