<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalysisServicesConnector_Content" xml:space="preserve">
    <value>Analysis Services Connector allows you to connect, and issue live queries, to an Analysis Services Tabular server for use with Power BI dashboards and reports.</value>
  </data>
  <data name="AnalysisServicesConnector_Download_CTA" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="AnalysisServicesConnector_Heading" xml:space="preserve">
    <value>Analysis Services Connector</value>
  </data>
  <data name="AnalysisServicesConnector_LearnMore_CTA" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="Content_Headline" xml:space="preserve">
    <value>Choose the gateway that best fits your needs</value>
  </data>
  <data name="DownloadGateway" xml:space="preserve">
    <value>Download gateway</value>
  </data>
  <data name="EasySetup_Content" xml:space="preserve">
    <value>Download and install the gateway with minimal interactions. Then sign in with your organization account to register the gateway to be used by cloud services.</value>
  </data>
  <data name="EasySetup_Heading" xml:space="preserve">
    <value>Easy setup</value>
  </data>
  <data name="EnterpriseDeployments_Content" xml:space="preserve">
    <value>This gateway is used by organizations to serve a large number of users. It also enables administrators to set up access control for individual data sources and monitor usage.</value>
  </data>
  <data name="EnterpriseDeployments_Download_CTA" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EnterpriseDeployments_Heading" xml:space="preserve">
    <value>For enterprise deployments</value>
  </data>
  <data name="EnterpriseDeployments_Label" xml:space="preserve">
    <value>Power BI Gateway - Enterprise</value>
  </data>
  <data name="EnterpriseDeployments_LearnMore_CTA" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="Features_ComingSoon" xml:space="preserve">
    <value>Coming soon</value>
  </data>
  <data name="Features_LearnMore" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="Features_MSProducts" xml:space="preserve">
    <value>Power BI, PowerApps, Azure Logic Apps (Preview), Microsoft Flow</value>
  </data>
  <data name="Features_OnPremisesColumn_Heading" xml:space="preserve">
    <value>On-premises data gateway</value>
  </data>
  <data name="Features_PersonalColumn_Heading" xml:space="preserve">
    <value>Personal gateway</value>
  </data>
  <data name="Features_PowerBI" xml:space="preserve">
    <value>Power BI</value>
  </data>
  <data name="Features_Row1" xml:space="preserve">
    <value>Import data and set up scheduled refresh</value>
  </data>
  <data name="Features_Row2" xml:space="preserve">
    <value>Run as an app for users who aren't administrators on the computer</value>
  </data>
  <data name="Features_Row3" xml:space="preserve">
    <value>Run as a single user with your credentials</value>
  </data>
  <data name="Features_Row4" xml:space="preserve">
    <value>Serves multiple users with access control per data source</value>
  </data>
  <data name="Features_Row5" xml:space="preserve">
    <value>Support for DirectQuery to SQL Server</value>
  </data>
  <data name="Features_Row6" xml:space="preserve">
    <value>Support for a live connection to Analysis Services</value>
  </data>
  <data name="Features_Row7" xml:space="preserve">
    <value>Monitoring and auditing for gateway and data sources</value>
  </data>
  <data name="Features_CloudServices" xml:space="preserve">
    <value>Cloud services it works with</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>With the on-premises gateways, you can keep your data fresh by connecting to your on-premises data sources without the need to move the data. Query large datasets and benefit from your existing investments. The gateways provide the flexibility you need to meet individual needs, and the needs of your organization.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Keep your dashboards and reports up-to-date with your on-premises data sources</value>
  </data>
  <data name="Hero_LearnMore" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI Gateway | Microsoft Power BI</value>
  </data>
  <data name="OneGateway_Content" xml:space="preserve">
    <value>Install once and deploy multiple on-premises data connections across Power BI, PowerApps, Microsoft Flow and Azure Logic Apps using the same gateway.</value>
  </data>
  <data name="OneGateway_Heading" xml:space="preserve">
    <value>One gateway for all your cloud services</value>
  </data>
  <data name="PersonalUse_Content" xml:space="preserve">
    <value>Refresh your on-premises data quickly without waiting for an IT Admin. Designed for use with personal data sets, there is no central monitoring capabilities for this gateway.</value>
  </data>
  <data name="PersonalUse_Download_CTA" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="PersonalUse_Heading" xml:space="preserve">
    <value>For personal use</value>
  </data>
  <data name="PersonalUse_Label" xml:space="preserve">
    <value>Power BI Gateway - Personal</value>
  </data>
  <data name="PersonalUse_LearnMore_CTA" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="SecureAccess_Content" xml:space="preserve">
    <value>Data transfer between Power BI and the gateway is secured through Azure Service Bus. Credentials provided by gateway administrators are encrypted to help protect your information in the cloud and only decrypted on the gateway machine.</value>
  </data>
  <data name="SecureAccess_Heading" xml:space="preserve">
    <value>Secured access to data</value>
  </data>
  <data name="SSRS_Content" xml:space="preserve">
    <value>With Reporting Services 2016, users can pin a visualization from a report to a dashboard in Power BI.</value>
  </data>
  <data name="SSRS_Heading" xml:space="preserve">
    <value>SQL Server Reporting Services 2016</value>
  </data>
  <data name="SSRS_LearnMore_CTA" xml:space="preserve">
    <value>Learn more</value>
  </data>
</root>