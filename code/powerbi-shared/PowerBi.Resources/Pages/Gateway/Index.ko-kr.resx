<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalysisServicesConnector_Content" xml:space="preserve">
    <value>Analysis Services Connector를 사용하면 Power BI 대시보드 및 보고서에 사용할 Analysis Services 표 형식 서버에 연결하고 라이브 쿼리를 실행할 수 있습니다.</value>
  </data>
  <data name="AnalysisServicesConnector_Download_CTA" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="AnalysisServicesConnector_Heading" xml:space="preserve">
    <value>Analysis Services Connector</value>
  </data>
  <data name="AnalysisServicesConnector_LearnMore_CTA" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="Content_Headline" xml:space="preserve">
    <value>필요에 가장 적합한 게이트웨이 선택</value>
  </data>
  <data name="DownloadGateway" xml:space="preserve">
    <value>게이트웨이 다운로드</value>
  </data>
  <data name="EasySetup_Content" xml:space="preserve">
    <value>최소한의 조작으로 게이트웨이를 다운로드하고 설치하세요. 그런 다음 조직 계정으로 로그인하여 클라우드 서비스에서 사용할 게이트웨이를 등록하세요.</value>
  </data>
  <data name="EasySetup_Heading" xml:space="preserve">
    <value>간편한 설치</value>
  </data>
  <data name="EnterpriseDeployments_Content" xml:space="preserve">
    <value>이 게이트웨이는 조직에서 많은 사용자가 사용합니다. 또한 관리자가 개별 데이터 원본에 대한 액세스 제어를 설정하고 사용 현황을 모니터링할 수 있습니다.</value>
  </data>
  <data name="EnterpriseDeployments_Download_CTA" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="EnterpriseDeployments_Heading" xml:space="preserve">
    <value>엔터프라이즈 배포용</value>
  </data>
  <data name="EnterpriseDeployments_Label" xml:space="preserve">
    <value>Power BI 게이트웨이 - 엔터프라이즈</value>
  </data>
  <data name="EnterpriseDeployments_LearnMore_CTA" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="Features_ComingSoon" xml:space="preserve">
    <value>제공 예정</value>
  </data>
  <data name="Features_LearnMore" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="Features_MSProducts" xml:space="preserve">
    <value>Power BI, PowerApps, Azure Logic Apps(Preview), Microsoft Flow</value>
  </data>
  <data name="Features_OnPremisesColumn_Heading" xml:space="preserve">
    <value>온-프레미스 데이터 게이트웨이</value>
  </data>
  <data name="Features_PersonalColumn_Heading" xml:space="preserve">
    <value>개인 게이트웨이</value>
  </data>
  <data name="Features_PowerBI" xml:space="preserve">
    <value>Power BI</value>
  </data>
  <data name="Features_Row1" xml:space="preserve">
    <value>데이터 가져오기 및 예약된 새로 고침 설정</value>
  </data>
  <data name="Features_Row2" xml:space="preserve">
    <value>컴퓨터에서 관리자가 아닌 사용자를 위해 앱으로 실행</value>
  </data>
  <data name="Features_Row3" xml:space="preserve">
    <value>자격 증명을 사용하여 단일 사용자로 실행</value>
  </data>
  <data name="Features_Row4" xml:space="preserve">
    <value>여러 사용자에게 데이터 원본별 액세스 제어 제공</value>
  </data>
  <data name="Features_Row5" xml:space="preserve">
    <value>SQL Server에 대한 DirectQuery 지원</value>
  </data>
  <data name="Features_Row6" xml:space="preserve">
    <value>Analysis Services에 대한 라이브 연결 지원</value>
  </data>
  <data name="Features_Row7" xml:space="preserve">
    <value>게이트웨이 및 데이터 원본 모니터링과 감사</value>
  </data>
  <data name="Features_CloudServices" xml:space="preserve">
    <value>함께 사용할 클라우드 서비스</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>온-프레미스 게이트웨이를 사용하면 데이터를 이동할 필요 없이 온-프레미스 데이터 원본에 연결하여 데이터를 최신 상태로 유지할 수 있습니다. 대규모 데이터 집합을 쿼리하고 기존 투자를 활용할 수 있습니다. 이 게이트웨이는 개인별 요구 사항과 조직의 요구 사항을 충족하는 데 필요한 유연성을 제공합니다.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>온-프레미스 데이터 원본으로 대시보드와 보고서를 최신 상태로 유지</value>
  </data>
  <data name="Hero_LearnMore" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value />
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI 게이트웨이 | Microsoft Power BI</value>
  </data>
  <data name="OneGateway_Content" xml:space="preserve">
    <value>한 번만 설치하면 동일한 게이트웨이를 사용하는 Power BI, PowerApps, Microsoft Flow 및 Azure Logic Apps 전체에 여러 온-프레미스 데이터 연결을 배포할 수 있습니다.</value>
  </data>
  <data name="OneGateway_Heading" xml:space="preserve">
    <value>모든 클라우드 서비스를 위한 하나의 게이트웨이</value>
  </data>
  <data name="PersonalUse_Content" xml:space="preserve">
    <value>IT 관리자가 할 때까지 기다리지 않고 온-프레미스 데이터를 신속하게 새로 고치세요. 개인 데이터 집합에 사용하도록 설계된 이 게이트웨이에는 중앙 모니터링 기능이 없습니다.</value>
  </data>
  <data name="PersonalUse_Download_CTA" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="PersonalUse_Heading" xml:space="preserve">
    <value>개인용</value>
  </data>
  <data name="PersonalUse_Label" xml:space="preserve">
    <value>Power BI 게이트웨이 - 개인</value>
  </data>
  <data name="PersonalUse_LearnMore_CTA" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="SecureAccess_Content" xml:space="preserve">
    <value>Power BI와 게이트웨이 간의 데이터 전송은 Azure Service Bus를 통해 보안이 설정됩니다. 클라우드에서 귀하의 정보를 보호하기 위해 게이트웨이 관리자가 입력한 자격 증명이 암호화되고 게이트웨이 컴퓨터에서만 해독됩니다.</value>
  </data>
  <data name="SecureAccess_Heading" xml:space="preserve">
    <value>데이터 액세스 보안</value>
  </data>
  <data name="SSRS_Content" xml:space="preserve">
    <value>Reporting Services 2016을 사용하면 보고서의 시각화를 Power BI의 대시보드에 고정할 수 있습니다.</value>
  </data>
  <data name="SSRS_Heading" xml:space="preserve">
    <value>SQL Server Reporting Services 2016</value>
  </data>
  <data name="SSRS_LearnMore_CTA" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>151</value>
  </data>
</root>