<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Content1_Content" xml:space="preserve">
    <value>¿Harto de fórmulas complejas para combinar sus datos? Con Power BI, cree relaciones visualmente y vea cómo hacemos el trabajo duro por usted.</value>
  </data>
  <data name="Content1_Heading" xml:space="preserve">
    <value>Combinar datos visualmente</value>
  </data>
  <data name="Content2_Content" xml:space="preserve">
    <value>Power BI incluye un lenguaje de fórmulas que funciona como Excel, para que pueda comenzar rápidamente y conseguir algunas cosas que no pensaba que fueran posibles.</value>
  </data>
  <data name="Content2_Heading" xml:space="preserve">
    <value>Completar las fórmulas con la información deseada</value>
  </data>
  <data name="Content3_Content" xml:space="preserve">
    <value>Olvídese de consultas interminables de informes. Una vez creado el análisis con Power BI, le sorprenderá lo sencillo que resulta para los demás obtener las respuestas que buscan por sí mismos.</value>
  </data>
  <data name="Content3_Heading" xml:space="preserve">
    <value>Convertir el trabajo en trabajo en equipo</value>
  </data>
  <data name="Content4_Quote" xml:space="preserve">
    <value>[Power BI] libera a su equipo para que pueda sacar más provecho de la información y la narración, en lugar de simplemente extraer datos y transferirlos.</value>
  </data>
  <data name="Content4_QuoteSource" xml:space="preserve">
    <value>Jeff Petrusa, equipo de Marketing y Análisis, Condé Nast</value>
  </data>
  <data name="Download_Content" xml:space="preserve">
    <value>Obtenga todas las herramientas de Power BI en una sola y práctica descarga. Consiga todo lo anterior, además de elementos visuales sorprendentes, para presentar y compartir sus análisis con los demás.</value>
  </data>
  <data name="Download_Cta_Download" xml:space="preserve">
    <value>Descargar</value>
  </data>
  <data name="Download_Heading" xml:space="preserve">
    <value>Comience con una simple descarga</value>
  </data>
  <data name="Download_SubHeading" xml:space="preserve">
    <value>Descargar Power BI Desktop</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>De los creadores de Excel, Power BI te ofrece nuevas maneras de trabajar. Simplifique fórmulas complejas y complete tablas dinámicas con la información deseada.</value>
  </data>
  <data name="Hero_Cta_Download" xml:space="preserve">
    <value>Descargar</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>¿Usa VLOOKUP? Le encantará Power BI.</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI transforma los datos de su compañía en objetos visuales enriquecidos que puede recopilar y organizar, lo que le permite centrarse en lo que realmente importa. Manténgase informado, detecte las tendencias en cuanto surgen e impulse su negocio.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Excel | Microsoft Power BI</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>3</value>
  </data>
</root>