<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Analyze_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI allows you to use simple drag and drop gestures to create create interactive reports that let you analyze the key metrics for your team. Here are some of the things you can do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Revenue:&lt;/strong&gt; Find your best-case scenario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Factored revenue:&lt;/strong&gt; Develop a more realistic projection, based on opportunity stage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opportunity count:&lt;/strong&gt; Compare across the sales team.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geography:&lt;/strong&gt; Which regions are strongest and weakest?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Funnel:&lt;/strong&gt; Where in the pipeline are your opportunities?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Channel effectiveness:&lt;/strong&gt; Compare direct and indirect sales performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opportunity revenue trend:&lt;/strong&gt; Which direction is revenue headed?&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="Analyze_Heading" xml:space="preserve">
    <value>Analyze</value>
  </data>
  <data name="Analyze_Subheading" xml:space="preserve">
    <value>Insights in seconds</value>
  </data>
  <data name="Combine_Content" xml:space="preserve">
    <value>&lt;p&gt;Blend your sales data such as quotas, market size, opportunities, and demographics with data from marketing, finance, customer service, operations, and other functions to discover more insights and make more informed decisions across the business. Unlock the potential in the data siloed in different systems of your organization.&lt;/p&gt;</value>
  </data>
  <data name="Combine_Heading" xml:space="preserve">
    <value>Combine</value>
  </data>
  <data name="Combine_Subheading" xml:space="preserve">
    <value>See the big picture</value>
  </data>
  <data name="Form_Cta" xml:space="preserve">
    <value>Use it free</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>&lt;p&gt;Do you want to create dashboards that provide at-a-glance insights into your team's key metrics such as quotas, market size and opportunities and the ability to quickly drill down for more details? Do you want to blend your sales data with data from marketing, finance and other functions to get a holistic view of the business?&lt;/p&gt;
&lt;p&gt;Power BI lets you create these dashboards and interactive reports in seconds and visualize the metrics important to your team. Simple drag-and-drop gestures let you easily dive deep into your data to find improvements, correlations, and outliers.&lt;/p&gt;</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Sales analytics for everyone</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI tranforms your company's data into rich visuals for you to collect and organize so you can focus on what matters to you. Stay in the know, spot trends as they happen, and push your business further.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Sales | Microsoft Power BI</value>
  </data>
  <data name="Mobile_Content" xml:space="preserve">
    <value>&lt;p&gt;With Power BI, you can easily spot trends in time to make a difference. Answer questions like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What's the opportunity revenue in your pipeline?&lt;/li&gt;
&lt;li&gt;Looking back, how did your factored revenue projections perform?&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="Mobile_Heading" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Mobile_Subheading" xml:space="preserve">
    <value>Put the future in context</value>
  </data>
  <data name="Monitor_Content" xml:space="preserve">
    <value>&lt;p&gt;Power BI lets you instantly create dashboards and start monitoring your teams' opportunities, results, and overall efficiency. You can also monitor key metrics like win rates, number of wins, revenue, discounts, and YTD revenue maps. The dashboards are refreshed with up-to-date data automatically and give you an at-a-glance view of the insights anytime you need it.&lt;/p&gt;</value>
  </data>
  <data name="Monitor_Heading" xml:space="preserve">
    <value>Monitor</value>
  </data>
  <data name="Monitor_Subheading" xml:space="preserve">
    <value>Be the first to know</value>
  </data>
  <data name="TakeAdvantage_Heading" xml:space="preserve">
    <value>Take advantage of Power BI</value>
  </data>
</root>