<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Content1_Content" xml:space="preserve">
    <value>Sind Sie es leid, sich mit unübersichtlichen Formeln herumzuschlagen, um Ihre Daten zu kombinieren? Erstellen Sie mit Power BI Beziehungen visuell, und lassen Sie uns den schwierigen Teil für Sie erledigen.</value>
  </data>
  <data name="Content1_Heading" xml:space="preserve">
    <value>Kombinieren Sie Ihre Daten visuell</value>
  </data>
  <data name="Content2_Content" xml:space="preserve">
    <value>Power BI enthält eine Formelsprache, die wie Excel funktioniert, daher schaffen Sie schnell den Einstieg und bekommen ein paar Dinge hin, die Sie nicht für möglich gehalten hätten.</value>
  </data>
  <data name="Content2_Heading" xml:space="preserve">
    <value>Gönnen Sie Ihren Formeln den Turbo</value>
  </data>
  <data name="Content3_Content" xml:space="preserve">
    <value>Machen Sie sich von den nicht endenden Nachfragen nach Berichten frei. Sobald Sie Ihre Analyse mit Power BI erstellt haben, werden Sie erstaunt sein, wie viel leichter sich andere die nötigen Antworten selbst verschaffen können.</value>
  </data>
  <data name="Content3_Heading" xml:space="preserve">
    <value>Machen Sie aus Ihrer Arbeit Teamarbeit</value>
  </data>
  <data name="Content4_Quote" xml:space="preserve">
    <value>[Power BI] befreit Ihr Team, damit Sie mehr Zeit für Erkenntnis und Storytelling haben, statt Daten abzurufen und sie weiterzugeben.</value>
  </data>
  <data name="Content4_QuoteSource" xml:space="preserve">
    <value>Jeff Petrusa, Marketing- und Analyseteam, Conde Nast</value>
  </data>
  <data name="Download_Content" xml:space="preserve">
    <value>Besorgen Sie sich alle Power BI-Tools bequem in einem Download. Holen Sie sich alles oben Genannte, zuzüglich beeindruckender visueller Elemente, um Ihre Analyse zu präsentieren und mit anderen zu teilen.</value>
  </data>
  <data name="Download_Cta_Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Download_Heading" xml:space="preserve">
    <value>Starten Sie mit einem einfachen Download</value>
  </data>
  <data name="Download_SubHeading" xml:space="preserve">
    <value>Laden Sie Power BI Desktop herunter</value>
  </data>
  <data name="Hero_Content" xml:space="preserve">
    <value>Power BI wurde vom gleichen Team entwickelt und verhilft Ihnen zu neuen Möglichkeiten, Ihre Arbeit zu tun. Vereinfachen Sie Ihre komplexen Formeln, und schalten Sie den Turbo für Ihre Pivot Tables ein.</value>
  </data>
  <data name="Hero_Cta_Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>SVERWEIS verwenden? Sie werden Power BI mögen.</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI wandelt die Daten Ihres Unternehmens in visuelle Darstellungen um. Mit Power BI können Sie Ihre Daten sammeln und strukturieren und das Augenmerk auf die für Sie wichtigsten Punkte legen. Bleiben Sie auf dem Laufenden, erkennen Sie Trends und bringen Sie Ihr Geschäft voran.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Excel | Microsoft Power BI</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>3</value>
  </data>
</root>