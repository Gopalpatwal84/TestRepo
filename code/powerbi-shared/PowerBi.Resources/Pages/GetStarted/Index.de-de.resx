<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DesktopChoice_Content" xml:space="preserve">
    <value>Erstellen Sie Verbindungen mit Daten, Transformieren Sie Daten, erstellen Sie umfassendere Berechnungen, und generieren Sie großartige Berichte in Minuten.</value>
  </data>
  <data name="DesktopChoice_Content2" xml:space="preserve">
    <value>Mit leistungsfähigen Analysetools können Sie Verbindungen mit Daten herstellen, Daten transformieren und erweiterte Visualisierungen erstellen.</value>
  </data>
  <data name="DesktopChoice_Cta" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="DesktopChoice_Heading" xml:space="preserve">
    <value>Power BI Desktop für Windows</value>
  </data>
  <data name="DesktopChoice_Subhead" xml:space="preserve">
    <value>Analysewerkzeuge zu Ihrer Verfügung</value>
  </data>
  <data name="DesktopChoice_Subhead2" xml:space="preserve">
    <value>Beeindruckende Berichte auf Grundlage beliebiger Datenquellen</value>
  </data>
  <data name="Desktop_Label" xml:space="preserve">
    <value>Desktop</value>
  </data>
  <data name="EIPEbook_Content" xml:space="preserve">
    <value>Lesen Sie im neuen Microsoft-E-Book &lt;em&gt;What Color Is Your Data?&lt;/em&gt; („Welche Farbe haben Ihre Daten?“), wie Sie mit Power BI schnell fundierte Datenanalysen erstellen. Außerdem erfahren Sie, wie Sie aussagekräftige Analysen präsentieren, konkrete Ergebnisse für Vertrieb und Marketing ableiten und in kürzester Zeit die relevanten Daten ermitteln.</value>
  </data>
  <data name="EIPEbook_Heading" xml:space="preserve">
    <value>Beeindrucken Sie mit Ihren Daten</value>
  </data>
  <data name="GetStarted_Heading" xml:space="preserve">
    <value>Möglichkeiten für erste Schritte</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Wählen Sie für Ihre ersten Schritte mit Power BI zwischen den Analyse- und Visualisierungstools von Power BI Desktop und dem Power BI-Dienst mit Schnelleinblicken, Anwendungsinhaltspaketen und Dashboards, die Sie ganz einfach für andere freigeben können.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>power bi, microsoft power bi, bi tools, microsoft bi, power bi einstieg, power bi dienst, power bi desktop, erste schritte power bi, power bi auswahl, power bi optionen</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Erste Schritte | Microsoft Power BI</value>
  </data>
  <data name="NationalClouds_Content" xml:space="preserve">
    <value>Power BI ist jetzt in drei separaten nationalen Clouds verfügbar. Diese Clouds entsprechen hinsichtlich Sicherheit, Datenschutz, Compliance und Transparenz dem Niveau der weltweiten Power BI-Version und verwenden darüber hinaus ein einmaliges Modell für regionale Regelungen zu Servicebereitstellung, Speicherort der Daten, Zugriff und Kontrolle.</value>
  </data>
  <data name="NationalClouds_Cta" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="ServiceChoice_Content" xml:space="preserve">
    <value>Mit wenigen Klicks stellen Sie Verbindungen mit Daten aus Anwendungen her, mit denen Sie arbeiten, und beginnen Sie damit, vorkonfigurierte Dashboards von Experten zu nutzen.</value>
  </data>
  <data name="ServiceChoice_Content2" xml:space="preserve">
    <value>Stellen Sie Verbindungen mit Daten aus Dateien und Clouddiensten her, gewinnen Sie sofortige Einblicke, und teilen Sie diese mit anderen.</value>
  </data>
  <data name="ServiceChoice_Cta" xml:space="preserve">
    <value>Registrieren</value>
  </data>
  <data name="ServiceChoice_Heading" xml:space="preserve">
    <value>Power BI</value>
  </data>
  <data name="ServiceChoice_Subhead" xml:space="preserve">
    <value>Der einfache Weg, Ihre wichtigen Daten an einer Stelle anzuzeigen</value>
  </data>
  <data name="ServiceChoice_Subhead2" xml:space="preserve">
    <value>Vorkonfigurierte Dashboards auf Grundlage Ihrer bevorzugten Webdienste</value>
  </data>
  <data name="Service_Label" xml:space="preserve">
    <value>Dienst</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>199</value>
  </data>
</root>