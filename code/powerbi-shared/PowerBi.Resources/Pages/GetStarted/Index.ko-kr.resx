<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DesktopChoice_Content" xml:space="preserve">
    <value>데이터를 연결 및 변환하고, 고급 계산을 작성하고, 몇 분 내에 뛰어난 보고서를 작성하세요.</value>
  </data>
  <data name="DesktopChoice_Content2" xml:space="preserve">
    <value>강력한 분석 도구를 통해 연결하고 데이터를 변환하여 고급 시각화를 만드세요.</value>
  </data>
  <data name="DesktopChoice_Cta" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="DesktopChoice_Heading" xml:space="preserve">
    <value>Windows용 Power BI Desktop</value>
  </data>
  <data name="DesktopChoice_Subhead" xml:space="preserve">
    <value>분석 도구를 간편하게 사용</value>
  </data>
  <data name="DesktopChoice_Subhead2" xml:space="preserve">
    <value>데이터 원본으로 뛰어난 보고서 만들기</value>
  </data>
  <data name="Desktop_Label" xml:space="preserve">
    <value>데스크톱</value>
  </data>
  <data name="EIPEbook_Content" xml:space="preserve">
    <value>Microsoft의 새로운 전자책 &lt;em&gt;What Color Is Your Data?&lt;/em&gt;를 통해 Power BI가 어떻게 빠르고 철저한 데이터 분석을 지원하는지 알아보기 이해할 수 있는 정보를 전달하고, 조치 가능한 영업 및 마케팅 인텔리전스를 만들고, 방대한 데이터 검색에 드는 시간을 줄이는 방법을 알아볼 수 있습니다.</value>
  </data>
  <data name="EIPEbook_Heading" xml:space="preserve">
    <value>데이터로 더 큰 영향력 행사</value>
  </data>
  <data name="GetStarted_Heading" xml:space="preserve">
    <value>시작 방법 선택</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI Desktop의 분석 및 시각화 도구 또는 신속한 정보 활용, 응용 프로그램 콘텐츠 대시보드, 그리고 쉽게 공유된 Power BI 서비스의 대시보드 중에서 선택하여 Power BI를 시작하세요.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value>power bi, microsoft power bi, bi 도구, microsoft bi, power bi 시작, power bi 서비스, power bi desktop, power bi 시작하기, power bi 선택하기, power bi 옵션</value>
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>시작 방법 | Microsoft Power BI</value>
  </data>
  <data name="NationalClouds_Content" xml:space="preserve">
    <value>Power BI는 3개의 별도의 내셔널 클라우드에서 사용할 수 있습니다. 이러한 클라우드는 서비스 전달, 데이터 주거성, 액세스 및 통제와 관련하여 로컬 규정에 부합하는 고유 모델과 결합된 Power BI 글로벌 버전으로서 동일한 수준의 보안, 개인 정보 보호, 규정 준수 및 투명성을 제공합니다.</value>
  </data>
  <data name="NationalClouds_Cta" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="ServiceChoice_Content" xml:space="preserve">
    <value>몇 번의 클릭으로 사용하는 응용 프로그램에서 데이터에 연결하고 전문가가 미리 빌드한 대시보드로 시작하세요.</value>
  </data>
  <data name="ServiceChoice_Content2" xml:space="preserve">
    <value>파일 및 클라우드 서비스에서 데이터에 연결하고 유용한 정보를 찾고 이를 다른 사람들과 공유하세요.</value>
  </data>
  <data name="ServiceChoice_Cta" xml:space="preserve">
    <value>등록</value>
  </data>
  <data name="ServiceChoice_Heading" xml:space="preserve">
    <value>Power BI</value>
  </data>
  <data name="ServiceChoice_Subhead" xml:space="preserve">
    <value>한 곳에서 중요 데이터를 확인할 수 있는 간단한 방법</value>
  </data>
  <data name="ServiceChoice_Subhead2" xml:space="preserve">
    <value>즐겨찾는 웹 서비스에서 미리 작성된 대시보드 만들기</value>
  </data>
  <data name="Service_Label" xml:space="preserve">
    <value>서비스</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>199</value>
  </data>
</root>