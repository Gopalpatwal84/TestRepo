<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="D32Bit" xml:space="preserve">
    <value>Office 32 ビット用</value>
  </data>
  <data name="D64Bit" xml:space="preserve">
    <value>Office 64 ビット用</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Power BI Publisher for Excel を使用して、すべてのスプレッドシートからピボットテーブル、グラフ、セル範囲などの重要なスナップショットを 1 つの場所に保存できます。アドインをダウンロードしてインストールするだけで、ワークブックのデータを自分の Excel ダッシュボードに数秒でピン留めできます。新しいダッシュボードは簡単に更新したり共有したりできます。1 つのダッシュボードで複数のシートを結合したり、使用している他の Web アプリからライブ データに接続するなど、無料の Power BI サービスのすべての機能が付属しています。</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Excel ダッシュボードを作成および共有する最も簡単な方法</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI は、会社のデータを豊かな視覚情報に変換して収集と整理を助け、重要な問題に取り組めるようにします。最新情報を取得し、動向の発生をつかみ、ビジネスをさらに推進します。</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Power BI publisher for Excel | Microsoft Power BI</value>
  </data>
  <data name="PreferredLanguage" xml:space="preserve">
    <value>優先言語でのダウンロード</value>
  </data>
  <data name="RightData_Copy" xml:space="preserve">
    <value>Power BI では、良い仕事をするために必要なデータ ストーリーにより、販売部、財務部、マーケティング部、カスタマー サポート部の同僚を支援できます。スプレッドシートの配布や異なるサービスへのサインインは不要です。</value>
  </data>
  <data name="RightData_Heading" xml:space="preserve">
    <value>適切なユーザーに適切なデータを提供</value>
  </data>
  <data name="SaveShare_Copy" xml:space="preserve">
    <value>Power BI publisher for Excel を使用して、複雑なデータ分析をアクセス可能なダッシュボードに変換します。これは共有が簡単で、理解さえも容易になります。ピン マネージャーを使用して、ピン留めされたテーブルと範囲を Excel の内側から更新します。</value>
  </data>
  <data name="SaveShare_Heading" xml:space="preserve">
    <value>グリッド外部の Excel データを保存、共有</value>
  </data>
  <data name="SingleDashboard_Copy" xml:space="preserve">
    <value>Power BI は、単に Excel スナップショットをまとめるだけではありません。45 を超えるさまざまなサービスからのデータをただ 1 つのダッシュボードにインポートできます。Salesforce、Github、Stripe などを組み合わせて、メトリックの究極的な概要を示します。</value>
  </data>
  <data name="SingleDashboard_Heading" xml:space="preserve">
    <value>複数の Web サービスを 1 つのダッシュボードに結合</value>
  </data>
  <data name="Sources_Copy" xml:space="preserve">
    <value>Power BI は Excel データ、Web アプリケーション、オンプレミスのソースなど、すべてのデータをまとめて、数秒でデータの分析を開始できるようにします。</value>
  </data>
  <data name="Try_Heading" xml:space="preserve">
    <value>今すぐ Power BI publisher for Excel を試して、重要な洞察の共有を開始しましょう。</value>
  </data>
  <data name="WhatVersion" xml:space="preserve">
    <value>使用している Office のバージョンは何ですか。</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>113</value>
  </data>
</root>