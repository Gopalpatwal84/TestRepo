<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="D32Bit" xml:space="preserve">
    <value>Office 32비트용</value>
  </data>
  <data name="D64Bit" xml:space="preserve">
    <value>Office 64비트용</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="Hero_Copy" xml:space="preserve">
    <value>Excel용 Power BI 게시자를 사용하여 모든 스프레드시트에서 중요한 피벗 테이블, 차트, 셀 범위 등의 스냅숏을 단일 위치에 저장합니다. 추가 기능을 다운로드하여 설치하면 몇 초 만에 통합 문서의 데이터를 Excel 대시보드에 고정할 수 있습니다. 새로운 대시보드는 쉽게 업데이트하여 공유할 수 있으며, 단일 대시보드에서 여러 시트 통합이나 사용하는 다른 웹 앱의 라이브 데이터에 연결 등의 무료 Power BI 서비스의 모든 기능과 함께 제공됩니다.</value>
  </data>
  <data name="Hero_Heading" xml:space="preserve">
    <value>Excel 대시보드를 만들어 공유하는 가장 쉬운 방법</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>자세히 알아보기</value>
  </data>
  <data name="META_DESCRIPTION" xml:space="preserve">
    <value>Power BI는 사용자가 중요한 내용에 집중할 수 있도록 회사의 데이터를 수집 및 구성이 가능한 풍부한 시각적 요소로 변환해 줍니다. 정보를 꾸준히 얻고 추세를 파악하여 비즈니스를 확장해 보세요.</value>
  </data>
  <data name="META_KEYWORDS" xml:space="preserve">
    <value />
  </data>
  <data name="META_PAGETITLE" xml:space="preserve">
    <value>Excel용 Power BI 게시자 | Microsoft Power BI</value>
  </data>
  <data name="PreferredLanguage" xml:space="preserve">
    <value>기본 설정 언어로 다운로드</value>
  </data>
  <data name="RightData_Copy" xml:space="preserve">
    <value>Power BI를 사용하면 스프레드시트를 배포하거나 다른 서비스에 로그인하지 않고도 업무 완수에 필요한 데이터 스토리를 영업, 재무, 마케팅, 고객 지원팀의 동료에게 제공할 수 있습니다.</value>
  </data>
  <data name="RightData_Heading" xml:space="preserve">
    <value>적합한 사용자에게 올바른 데이터 제공</value>
  </data>
  <data name="SaveShare_Copy" xml:space="preserve">
    <value>Excel용 Power BI 게시자를 사용하여 복잡한 데이터 분석을 공유가 쉽고 이해는 더 쉬운 액세스 가능한 대시보드로 전환할 수 있습니다. 고정 관리자를 사용하여 Excel 내부에서 고정된 테이블 및 범위를 업데이트합니다.</value>
  </data>
  <data name="SaveShare_Heading" xml:space="preserve">
    <value>그리드 외부에서 Excel 데이터 저장 및 공유</value>
  </data>
  <data name="SingleDashboard_Copy" xml:space="preserve">
    <value>Power BI가 Excel 스냅숏 이상을 결합함: 45개가 넘는 서비스의 데이터를 단 하나의 대시보드로 가져올 수 있습니다. 최종 메트릭 개요를 위해 Salesforce, Github, Stripe 등을 결합합니다.</value>
  </data>
  <data name="SingleDashboard_Heading" xml:space="preserve">
    <value>단일 대시보드에서 여러 웹 서비스 결합</value>
  </data>
  <data name="Sources_Copy" xml:space="preserve">
    <value>Excel 데이터, 웹 응용 프로그램 및 온-프레미스 원본: Power BI가 모든 데이터를 결합하므로 초 단위 데이터 분석을 시작할 수 있습니다.</value>
  </data>
  <data name="Try_Heading" xml:space="preserve">
    <value>Excel용 Power BI 게시자를 사용해 보고 주요 정보 공유를 시작하세요.</value>
  </data>
  <data name="WhatVersion" xml:space="preserve">
    <value>내가 사용하는 Office 버전은 무엇인가요?</value>
  </data>
  <data name="Meta_LocJobId" xml:space="preserve">
    <value>113</value>
  </data>
</root>